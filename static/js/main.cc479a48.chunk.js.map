{"version":3,"sources":["component/Placeholder/PageLoading.js","untils/page.js","component/FileManager/SmallIcon.js","untils/index.js","component/Dial/AutoHidden.js","component/Navbar/DarkModeSwitcher.js","middleware/Auth.js","component/FileManager/FileIcon.js","component/Viewer/Text.js","component/Common/Snackbar.js","component/FileManager/FileManager.js","component/FileManager/ImgPreview.js","component/Modals/PurchaseShare.js","component/Placeholder/TextLoading.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/FileManager/Modals.js","component/Navbar/UserAvatarPopover.js","component/Navbar/PolicySwitcher.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","component/Dial/Save.js","component/FileManager/TableRow.js","component/FileManager/Folder.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/ObjectIcon.js","component/FileManager/ContextMenu.js","component/FileManager/Explorer.js","loader/utils.js","loader/index.js","component/Upload/FileList.js","component/Dial/Create.js","component/Upload/Uploader.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","config.js","actions/index.js","component/FileManager/TypeIcon.js","serviceWorker.js","middleware/AuthRoute.js","component/Share/NotFound.js","component/Placeholder/Captcha.js","middleware/Init.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","component/Login/LoginForm.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Download/Download.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/VAS/Quota.js","component/VAS/PackSelect.js","component/VAS/BuyQuota.js","component/Modals/CreateWebDAVAccount.js","component/Modals/CreateWebDAVMount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Setting/UserSetting.js","component/Login/QQ.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","App.js","component/FileManager/PathSelector.js","middleware/Api.js"],"names":["useStyles","makeStyles","theme","loader","width","breakpoints","up","MyLoader","props","className","PageLoading","classes","style","textAlign","statusHelper","isHomePage","path","isSharePage","startsWith","isAdminPage","isMobile","window","innerWidth","SmallIconCompoment","state","this","isSelected","selected","findIndex","value","file","focusRipple","classNames","notSelected","button","icon","iconSelected","iconNotSelected","fileName","name","title","aria-label","folderName","folderNameSelected","folderNameNotSelected","variant","Component","SmallIcon","connect","explorer","dispatch","withStyles","container","padding","border","backgroundColor","palette","type","lighten","primary","main","background","default","paper","height","divider","borderRadius","boxSizing","transition","display","justifyContent","alignItems","margin","minWidth","paddingTop","color","text","secondary","dark","fontWeight","marginTop","textOverflow","whiteSpace","overflow","marginRight","sizeToString","bytes","i","Math","floor","log","pow","toFixed","fixUrlHash","relativePath","split","URL","toString","setCookie","days","date","Date","setTime","getTime","document","cookie","setGetParameter","paramName","paramValue","url","location","href","indexOf","prefix","substring","suffix","history","pushState","allowSharePreview","shareInfo","allowPreview","userInfo","uid","checkGetParameters","field","changeThemeColor","querySelector","setAttribute","decode","c","e","a","b","createElement","getContext","drawImage","getImageData","d","push","apply","slice","call","data","length","replace","parseInt","String","fromCharCode","bufferDecode","Uint8Array","from","atob","charCodeAt","bufferEncode","btoa","pathBack","folders","substr","join","filePath","hex2bin","hex","padStart","pathJoin","parts","sep","separator","map","part","index","RegExp","basename","pathList","pop","transformTime","timestamp","time","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","randomStr","result","characters","charactersLength","charAt","random","getNumber","base","conditions","forEach","v","AutoHidden","children","enable","useState","hidden","setHidden","prev","scrollY","lastUpdate","useEffect","addEventListener","handleNavigation","currentTarget","in","opacity","DarkModeSwitcher","position","ThemeType","useSelector","siteConfig","useDispatch","ToggleThemeMode","useCallback","toggleDaylightMode","isDayLight","isDark","placement","onClick","Auth","SetPreference","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","parse","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","signout","oldUser","id","key","preference","GetPreference","FileIconCompoment","loading","showPicIcon","pathHelper","pathname","pic","preview","hide","picPreview","src","baseURL","encodeURIComponent","afterLoad","setState","beforeLoad","onError","loadingAnimation","x","y","previewIcon","iconBig","fileInfo","share","shareFix","defaultProps","FileIcon","navigator","fontSize","objectFit","marginLeft","withRouter","layout","spacing","player","root","overflowX","TextViewer","content","setContent","status","setStatus","setLoading","math","useRouteMatch","$vm","React","createRef","useLocation","query","URLSearchParams","search","useParams","SetSubTitle","changeSubTitle","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","get","params","requestURL","API","responseType","then","response","textdata","Buffer","rawData","catch","error","message","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","save","put","setTimeout","addImg","$file","current","$img2Url","console","elevation","ref","onSave","onChange","toolbar","h1","h2","h3","h4","img","link","code","expand","undo","redo","subfield","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","green","amber","iconVariant","onClose","other","Icon","aria-describedby","action","close","SnackbarCompoment","open","componentWillReceiveProps","nextProps","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","viewUpdate","styles","mapStateToProps","mapDispatchToProps","setSelectedTarget","targets","closeAllModals","navitateTo","FileManager","handleImageLoaded","authC","authID","eval","image","backend","HTML5Backend","isShare","alt","onLoad","ImagPreviewComponent","items","photoIndex","isOpen","firstOne","first","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","showImgPreivew","images","visible","onIndexChange","n","ImgPreivew","imgPreview","PurchaseShareDialog","callback","aria-labelledby","score","autoFocus","down","TextLoading","avatar","blue","loadingContainer","LoadingDialog","modals","loadingText","Dialog","DialogContent","DialogContentText","CircularProgress","contentFix","wrapper","buttonProgress","light","top","left","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","SetModalsLoading","setModalsLoading","RefreshFileList","refreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","DialogActions","Button","preventDefault","dirs","post","src_dir","dst","disabled","modalsLoading","size","widthAnimation","shareUrl","flexCenter","noFlex","scoreCalc","ExpansionPanel","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","CreatShare","scoreEnabled","score_enabled","scoreRate","share_score_rate","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","shareOption","setShareOption","handleChange","prop","event","target","handleExpand","panel","isExpanded","handleCheck","maxWidth","fullWidth","Divider","List","aria-controls","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Checkbox","checked","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","edge","onMouseDown","Visibility","VisibilityOff","labelWidth","Select","labelId","MenuItem","Typography","inputProps","min","ceil","TextField","onFocus","select","readonly","label","submitFormBody","is_dir","DecompressDialog","CompressDialog","setFileName","ModalsCompoment","newFolderName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","source","purchaseCallback","handleInputChange","newNameSuffix","downloaded","dndSignale","modalsStatus","rename","getSource","scoreHandler","archiveDownload","Download","dragMove","dndSource","dndTarget","group","shareFree","reqURL","downloadPath","assign","postBody","refreshStorage","submitRemove","delete","submitResave","shareKey","submitMove","patch","DragSelectedPath","doMove","openLoadingDialog","submitRename","dirList","fileList","new_name","submitCreateNewFolder","submitTorrentDownload","submitDownload","setMoveTarget","remoteDownloadNext","PurchaseShare","onSubmit","createNewFolder","copy","move","resave","remove","music","controls","remoteDownload","placeholder","torrentDownload","decompress","compress","Modals","dndSignal","UserAvatarPopoverCompoment","setUserPopover","openURL","sigOut","reload","setSessionStatus","user","Popover","anchorEl","transformOrigin","visitorMenu","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","badge","UserAvatarPopover","userPopoverAnchorEl","anchor","uploadFromFile","policySelected","PolicySwitcher","setAnchorEl","options","policies","setPolicies","Boolean","undefined","component","switchTo","ListItemAvatar","UserAvatarCompoment","showUserInfo","loginCheck","isLogin","mobileHidden","Grow","isMultiple","withFile","UserAvatar","selectProps","withFolder","NavbarCompoment","componentDidMount","handleDrawerToggle","mobileOpen","loadUploader","openPreview","shareDownload","changeContextMenu","previewPath","isPreviewable","openMusicDialog","openDownload","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","iconFix","webdav","iOS","process","browser","test","userAgent","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","subTitle","grow","sectionForFile","saveFile","allowArchiveDownload","openShareDialog","openRenameDialog","openMoveDialog","openRemoveDialog","smUp","implementation","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerOpen","drawerClose","Navbar","keywords","drawerToggleAction","openCreateFolderDialog","searchMyFile","withTheme","zIndex","flexShrink","drawerDesktop","mixins","transitions","create","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","right","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","bottom","ownerInfo","overflowY","minHeight","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","input","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","groupName","UserInfo","backgroundImage","backgroundSize","transform","hiddenButton","subMenu","overFlow","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","lazy","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","k","NavigateTo","fallback","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","filter","fab","fabProgress","buttonSuccess","SaveButton","buttonClassname","clsx","TableRowCompoment","TypeIcon","tableIcon","TableRow","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","bind","selectedShared","TableCell","scope","tableRow","hideAuto","TableItem","userSelect","active","Folder","isActive","ButtonBase","FolderDropWarpper","useDrop","accept","drop","collect","monitor","isOver","canDrop","fixFlex","dragging","ObjectIcon","viewMethod","explorerViewMethod","navigatorPath","ContextMenu","SetSelectedTarget","AddSelectedTarget","addSelectedTarget","RemoveSelectedTarget","removeSelectedTarget","NavitateTo","ShowImgPreivew","OpenMusicDialog","DragAndDrop","dragAndDrop","OpenLoadingDialog","selectFile","presentIndex","ctrlKey","enterFolder","useDrag","item","object","end","dropResult","getDropResult","canDrag","isDragging","drag","getEmptyImage","captureDraggingState","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","clickUpload","uploadButton","getElementsByClassName","body","contains","click","Menu","menuOpen","menuType","anchorReference","anchorPosition","allowRemoteDownload","openRemoteDownloadDialog","policy","allowSource","openGetSourceDialog","isTorrent","openTorrentDownloadDialog","isCompressFile","openDecompressDialog","Unarchive","openCompressDialog","Archive","openCopyDialog","propover","contextType","contextOpen","setNavigatorLoadingStatus","ExplorerCompoment","ClickAway","dataset","clickaway","DELETE_FILE","SELECT_ALL","prevProps","prevState","snapshot","away","data-clickAway","rootTable","rootShare","navigatorError","Paper","errorBox","errorMsg","navigatorErrorMsg","emptyContainer","emptyIcon","emptyInfoBig","emptyInfoSmall","flexFix","typeHeader","Grid","xs","md","sm","lg","Table","table","TableHead","TableSortLabel","sortMethod","direction","changeSort","visuallyHidden","TableBody","Explorer","drawerDesktopOpen","navigatorLoading","navigateToPath","navitateUp","method","changeSortMethod","hint","upButton","clickAway","clip","isFunction","val","noop","_","newScript","scriptElem","Object","prototype","hasOwnProperty","appendChild","keyIterator","cols","keys","next","parallel","tasks","each","hasError","successed","ret","task","err","args","series","thunk","nextKey","nextThunk","Array","isArray","iterator","loadedScript","pendingScripts","failedScript","addCache","entry","removeFailedScript","script","node","parentNode","removeChild","uploaderLoader","WrappedComponent","ScriptLoader","context","isScriptLoaded","isScriptLoadSucceed","_isMounted","scripts","onComplete","loadNewScript","taskComplete","callbacks","startLoadingScripts","policyType","onScriptLoaded","refs","wrappedInstance","hoistStatics","FileList","files","openFileList","cancelUpload","deQueue","addNewFile","getProgressBackground","darken","filesNow","fileID","f","splice","errMsg","ignoreMsg","Slide","inRef","enQueue","setComplete","setError","fullScreen","isWidthDown","TransitionComponent","Transition","AppBar","Toolbar","flex","dialogContent","minHight","progressContainer","progress","progressContent","isUpload","listAction","plupload","formatSize","speed","toUpperCase","loaded","errorStatus","successStatus","progressBar","wordBreak","withWidth","UploadButton","setOpen","queued","setQueued","OpenNewFolderDialog","OpenRemoteDownloadDialog","Queued","uploadClicked","openUpload","Badge","badgeContent","invisible","Backdrop","SpeedDial","ariaLabel","tooltipTitle","SpeedDialIcon","openIcon","FabProps","SpeedDialAction","CloudDownload","UploaderComponent","fileAdd","currntPath","pathCache","removeFile","uploader","Qiniu","runtimes","browse_button","drop_element","max_file_size","maxSize","dragdrop","chunk_size","getChunkSize","saveType","filters","mime_types","allowedType","extensions","multi_selection","uptoken_url","uptoken","domain","max_retries","get_new_uptoken","auto_start","log_level","init","FilesAdded","BeforeUpload","QueueChanged","UploadProgress","UploadComplete","Fresh","FileUploaded","Error","errTip","FilesRemoved","setRef","Uploader","forwardRef","expandMore","PathButton","inputRef","useRef","more","last","DropDownItem","setActiveStatus","navigateTo","DropDown","timer","clearTimeout","shouldClose","element","delay","ms","sortOptions","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","anchorSort","selectedIndex","searchParams","renderPath","onpopstate","setNavigatorError","newPath","apiURL","parent","updateFileList","objects","pathTemp","checkOverFlow","redresh","componentDidUpdate","prevStates","force","overflowInitLock","hasOverflowingChildren","offsetHeight","scrollHeight","offsetWidth","scrollWidth","showHiddenPath","showSortOptions","performAction","newTarget","toggleViewMethod","newMethod","changeView","handleMenuItemClick","0","1","2","3","4","5","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","sideButton","option","openResave","creator","nick","setShareUserPopover","Navigator","changeViewMethod","list","openResaveDialog","cardDragged","diliverIcon","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","isSnapToGrid","round","snapToGrid","WebkitTransform","CustomDragLayer","useDragLayer","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","msDocPreviewSuffix","audioPreviewSuffix","videoPreviewSuffix","editSuffix","mediaType","audio","video","pdf","word","ppt","excel","torrent","zip","excute","android","php","go","python","cpp","js","policyTypeMap","local","remote","qiniu","upyun","oss","cos","onedrive","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","applyThemes","enableLoadUploader","setSiteConfig","config","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","useTheme","fileSuffix","getColor","getColorValue","isLocalhost","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","AuthRoute","rest","render","Notice","primaryColor","secondaryColor","rx","ry","captchaPlacholder","initUserConfig","themes","enableUploaderLoad","uploadConfig","store","defaultTheme","preferListMethod","hash","share_view_method","home_view_method","ReCAPTCHA","handleExpired","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","reset","onExpired","onErrored","token","sitekey","tabindex","stoken","hl","captcha","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","elem","childProps","displayName","callbackName","makeAsyncScriptLoader","globalName","flexDirection","form","submit","captchaContainer","captchaPlaceholder","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","setCaptcha","useAuthn","setUseAuthn","captchaData","setCaptchaData","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","useReCaptcha","captcha_IsUseReCaptcha","reCaptchaKey","captcha_ReCaptchaKey","QQLogin","authn","ApplyThemes","SetSessionStatus","refreshCaptcha","afterLogin","removeItem","userName","Password","captchaCode","required","Input","autoComplete","ReCaptcha","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","Link","Fingerprint","VpnKey","maxHeight","VideoViewer","getBaseURL","cardContainer","actions","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","SearchResult","page","orderBy","setPage","setTotal","shareList","setShareList","setOrderBy","order","Card","CardHeader","subheader","datetime","create_date","locale","Pagination","count","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","CardActions","disableActionSpacing","MyShare","SelectFileDialog","setFiles","filesCopy","dividers","FormGroup","row","FormControlLabel","control","iconContainer","borderInlineStart","contentSide","iconMultiple","subFileName","subFileIcon","scroll","actionButton","infoTitle","infoValue","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","bitfield","str","canvas","clearRect","strokeStyle","bit","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","getDownloadName","bittorrent","activeFiles","mode","fileIndex","gid","indexes","newExpanded","CardContent","LinearProgress","ExpandMore","completedLength","newIndex","newFiles","deleteFile","HighlightOff","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","FinishedCard","task_status","res","getTaskError","task_error","DownloadComponent","interval","downloading","finishedList","continue","loadDownloading","LockedFile","SharedFile","SharedFolder","SharePreload","setShare","setPassword","locked","withPassword","setPassowrd","DocViewer","setURL","QuotaCompoment","basic","pack","r1","r2","r3","packs","usedR","baseR","packR","proBar","r1_block","note_block","r2_block","r3_block","align","activate_date","expiration","expiration_date","Quota","lineHeight","float","PackSelect","boxHead","packName","price","priceWithScore","boxBottom","BuyQuotaCompoment","IntervalId","confirmRedeem","redeemCode","dialog","doRedeem","redeemInfo","buyPack","packType","selectedPack","packPayMethod","groups","selectedGroup","num","scoreNum","times","payment","qr_code","setInterval","querryLoop","clearInterval","handleChangeIndex","handleTexyChange","selectPack","selectGroup","selectPackPayMethod","scorePrice","alipay","payjs","score_price","methodSelect","FormLabel","RadioGroup","Radio","textField","max","step","Tabs","Tab","AccountBalanceWallet","payMethod","priceShow","tier","highlight","titleTypographyProps","subheaderTypographyProps","cardHeader","cardPricing","des","line","cardActions","redeemContainer","textTransform","codeContainer","BuyQuota","grey","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","CreateWebDAVMount","Storage","formControl","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","mount","setMount","accounts","setAccounts","setFolders","account","ID","CreatedAt","created_at","Name","Root","mountInfo","indicatorColor","textColor","newValue","Alert","severity","origin","TableContainer","accountCopy","deleteAccount","policy_name","folderCopy","deleteMount","footer","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","views","Profile","backgroundPosition","borderRaidus","cursor","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","fingerprint","credentialCreationOptions","excludeCredentials","credential","attestationObject","add","Add","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","settings","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","loadSetting","doChangeGroup","useGravatar","changeNick","bindQQ","uploadAvatar","formData","FormData","append","fileInput","headers","handleToggle","changhePwd","old","new","changheWebdavPwd","axios","init2FA","handleAlignment","toggleThemeMode","infoTextWithIcon","rightIconWithText","infoText","ConfirmationNumber","Switch","firstColor","secondColor","Brightness3","ListAlt","userGravatar","paddingText","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","QQCallback","setMsg","avatarSuccess","Register","setInput","emailActive","setEmailActive","regCaptcha","password_repeat","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","checkSelectedProps","doNavigate","cloudreveApp","sort","localeCompare","newState","selectedProps","oldSelected","concat","pathSplit","shareUserPopoverAnchorEl","fileSave","ErrorBoundary","errorInfo","Admin","fetch","contentType","ready","unregister","checkValidServiceWorker","defaultStatus","rawStore","configCache","InitSiteConfig","black","contrastText","filename","bgSelected","createStore","cloureveApp","__REDUX_DEVTOOLS_EXTENSION__","UpdateSiteConfig","ReactDOM","exact","themeConfig","prefersDarkMode","useMediaQuery","useMemo","prefer","createMuiTheme","unit","Fragment","ThemeProvider","CssBaseline","to","Text","getElementById","PathSelectorCompoment","selectedTarget","toBeLoad","back","paths","unshift","handleSelect","selector","buttonIcon","iconWhite","instance","withCredentials","crossDomain","AppError","stack","constructor","interceptors","use"],"mappings":"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","file":"static/js/main.cc479a48.chunk.js","sourcesContent":["import React from \"react\";\nimport  { Facebook } from \"react-content-loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        width: \"80%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \" 50%\"\n        },\n\n        marginTop: 30\n    }\n}));\n\nconst MyLoader = props => {\n    return (\n        <Facebook className={props.className} />\n    );\n};\n\nfunction PageLoading() {\n    const classes = useStyles();\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\"\n            }}\n        >\n            <MyLoader className={classes.loader} />\n        </div>\n    );\n}\n\nexport default PageLoading;\n","const statusHelper = {\n\n    isHomePage(path){\n        return path === \"/home\"\n    },\n    isSharePage(path){\n        return path && path.startsWith(\"/s/\")\n    },\n    isAdminPage(path){\n        return path && path.startsWith(\"/admin\")\n    },\n    isMobile(){\n        return window.innerWidth < 600;\n    },\n}\nexport default statusHelper","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport classNames from 'classnames';\nimport { withStyles, ButtonBase, Typography, Tooltip } from '@material-ui/core';\nimport TypeIcon from \"./TypeIcon\";\nimport {lighten} from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    container: {\n        padding: \"7px\",\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor:\n            theme.palette.type == \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main,0.8),\n    },\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\",\n        },\n        backgroundColor: theme.palette.background.paper,\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \"+theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition: \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\",\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color: theme.palette.type == \"dark\" ? theme.palette.background.paper : theme.palette.primary.dark,\n        fontWeight: \"500\",\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\",\n    },\n})\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\nclass SmallIconCompoment extends Component {\n\n    state = {\n    }\n\n\n    render() {\n\n        const { classes } = this.props;\n\n        const isSelected = (this.props.selected.findIndex((value) => {\n            return value === this.props.file;\n        })) !== -1;\n\n        return (\n                <ButtonBase\n                    focusRipple\n                    className={classNames({\n                        [classes.selected]: isSelected,\n                        [classes.notSelected]: !isSelected,\n                    }, classes.button)}\n                >\n                    <div className={classNames(classes.icon, {\n                        [classes.iconSelected]: isSelected,\n                        [classes.iconNotSelected]: !isSelected,\n                    })}><TypeIcon fileName={this.props.file.name}/></div>\n                    <Tooltip title={this.props.file.name} aria-label={this.props.file.name}>\n                        <Typography className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected,\n                        })}\n                        variant=\"body2\"\n                        >{this.props.file.name}</Typography>\n                    </Tooltip>\n                </ButtonBase>\n        );\n    }\n}\n\nSmallIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired,\n};\n\n\nconst SmallIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SmallIconCompoment))\n\nexport default SmallIcon","export const sizeToString = bytes => {\n    if (bytes === 0 || bytes===\"0\") return \"0 B\";\n    var k = 1024;\n    var sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\nexport const fixUrlHash = path => {\n    var relativePath = path.split(\"#\");\n    var url = new URL(\"http://example.com/\" + relativePath[1]);\n    return url.toString();\n};\n\nexport const setCookie = (name, value, days) => {\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\n};\n\nexport const setGetParameter = (paramName, paramValue) => {\n    var url = window.location.href;\n\n    if (url.indexOf(paramName + \"=\") >= 0) {\n        var prefix = url.substring(0, url.indexOf(paramName));\n        var suffix = url.substring(url.indexOf(paramName));\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n        suffix =\n            suffix.indexOf(\"&\") >= 0\n                ? suffix.substring(suffix.indexOf(\"&\"))\n                : \"\";\n        url = prefix + paramName + \"=\" + paramValue + suffix;\n    } else {\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\n        else url += \"&\" + paramName + \"=\" + paramValue;\n    }\n    if (url === window.location.href) {\n        return;\n    }\n    window.history.pushState(null, null, url);\n};\n\nexport const allowSharePreview = () => {\n    if (!window.isSharePage) {\n        return true;\n    }\n    if (window.isSharePage) {\n        if (window.shareInfo.allowPreview) {\n            return true;\n        }\n        if (window.userInfo.uid === -1) {\n            return false;\n        }\n        return true;\n    }\n};\n\nexport const checkGetParameters = field => {\n    var url = window.location.href;\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\n    return false;\n};\n\nexport const changeThemeColor = color => {\n    var metaThemeColor = window.document.querySelector(\n        \"meta[name=theme-color]\"\n    );\n    metaThemeColor.setAttribute(\"content\", color);\n};\n\nexport const decode = c => {\n    var e = c.height,\n        a = c.width,\n        b = document.createElement(\"canvas\");\n    b.height = e;\n    b.width = a;\n    b = b.getContext(\"2d\");\n    b.drawImage(c, 0, 0);\n    c = b.getImageData(0, 0, a, e);\n    b = [];\n    for (var d = 0; d < a * e * 4; d += 4)\n        0 !== (d + 4) % (4 * a) &&\n            [].push.apply(b, [].slice.call(c.data, d, d + 3));\n    c = e = 0;\n    for (\n        a = \"\";\n        c < b.length &&\n        (16 >= c ||\n            (0 === b[c] % 2 ? (e++, (a += \"1\")) : ((e = 0), (a += \"0\")),\n            17 !== e));\n        c++\n    );\n    a = a.slice(0, -16);\n    a = a.replace(/[\\s]/g, \"\").replace(/(\\d{16})(?=\\d)/g, \"$1 \");\n    e = \"\";\n    a = a.split(\" \");\n    for (c = 0; c < a.length; c++) {\n        b = a[c];\n        if (16 === b.length) {\n            b = parseInt(b, 2);\n            e += String.fromCharCode(b);\n        }\n    }\n    return e;\n};\nexport function bufferDecode(value) {\n    return Uint8Array.from(atob(value), c => c.charCodeAt(0));\n}\n\n// ArrayBuffer to URLBase64\nexport function bufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\nexport function pathBack(path) {\n    let folders =\n        path !== null\n            ? path.substr(1).split(\"/\")\n            : this.props.path.substr(1).split(\"/\");\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\n}\n\nexport function filePath(file) {\n    return file.path === \"/\"\n        ? file.path + file.name\n        : file.path + \"/\" + file.name;\n}\n\nexport function hex2bin(hex){\n    return (parseInt(hex, 16).toString(2)).padStart(8, '0');\n}\n\nexport function pathJoin(parts, sep){\n    const separator = sep || '/';\n    parts = parts.map((part, index)=>{\n        if (index) {\n            part = part.replace(new RegExp('^' + separator), '');\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(separator + '$'), '');\n        }\n        return part;\n    })\n    return parts.join(separator);\n}\n\nexport function basename(path){\n    let pathList = path.split(\"/\");\n    pathList.pop()\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\")\n}\n\nexport function transformTime(timestamp = +new Date()) {\n    if (timestamp) {\n        var time = new Date(timestamp);\n        var y = time.getFullYear(); //getFullYear方法以四位数字返回年份\n        var M = time.getMonth() + 1; // getMonth方法从 Date 对象返回月份 (0 ~ 11)，返回结果需要手动加一\n        var d = time.getDate(); // getDate方法从 Date 对象返回一个月中的某一天 (1 ~ 31)\n        var h = time.getHours(); // getHours方法返回 Date 对象的小时 (0 ~ 23)\n        var m = time.getMinutes(); // getMinutes方法返回 Date 对象的分钟 (0 ~ 59)\n        var s = time.getSeconds(); // getSeconds方法返回 Date 对象的秒数 (0 ~ 59)\n        return y + '-' + M + '-' + d + ' ' + h + ':' + m + ':' + s;\n    } else {\n        return '';\n    }\n}\n\nexport function randomStr(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nexport function getNumber(base,conditions){\n    conditions.forEach(v=>{\n        if(v){\n            base++\n        }\n    })\n    return base\n}","import React, {  useState, useEffect } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\n\nfunction AutoHidden  ({ children, enable }){\n    const [hidden, setHidden] = useState(false);\n\n    let prev = window.scrollY;\n    let lastUpdate = window.scrollY;\n    const show = 50;\n\n    useEffect(() => {\n        if (enable){\n            window.addEventListener('scroll', e => handleNavigation(e));\n        }\n        // eslint-disable-next-line\n    }, [enable])\n\n    const handleNavigation = (e) => {\n        const window = e.currentTarget;\n\n        if (prev > window.scrollY) {\n            if (lastUpdate - window.scrollY > show){\n                lastUpdate = window.scrollY;\n                setHidden(false);\n            }\n        } else if (prev < window.scrollY) {\n            if (window.scrollY - lastUpdate > show){\n                lastUpdate = window.scrollY;\n                setHidden(true);\n            }\n        }\n        prev = window.scrollY;\n    };\n\n    return (\n        <Zoom in={!hidden}>\n            {children}\n        </Zoom>\n    )\n};\n\nexport default AutoHidden","import React, { useCallback } from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport DayIcon from \"@material-ui/icons/Brightness7\";\nimport NightIcon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleDaylightMode } from \"../../actions\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Auth from \"../../middleware/Auth\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        color: 'rgb(255, 255, 255)',\n        opacity: \"0.54\",\n    },\n}));\n\nconst DarkModeSwitcher = ({ position }) => {\n    const ThemeType = useSelector(state => state.siteConfig.theme.palette.type);\n    const dispatch = useDispatch();\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\n        dispatch\n    ]);\n    const toggleMode = e => {\n        Auth.SetPreference(\"theme_mode\",isDayLight?\"dark\":\"light\");\n        ToggleThemeMode();\n    };\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\n    const isDark = ThemeType && ThemeType === \"dark\";\n\n    const classes = useStyles();\n    return (\n        <Tooltip\n            title={isDayLight ? \"切换到深色模式\" : \"切换到浅色模式\"}\n            placement=\"bottom\"\n        >\n            <IconButton\n                className={classNames({\n                    [classes.icon]: \"left\" === position,\n                })}\n                onClick={toggleMode} color=\"inherit\">\n                {isDayLight && <NightIcon />}\n                {isDark && <DayIcon />}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default DarkModeSwitcher;\n","const Auth = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        Auth.SetUser(cb);\n        Auth.isAuthenticated = true;\n    },\n    GetUser(){\n        return JSON.parse(localStorage.getItem(\"user\"))\n    },\n    SetUser(newUser){\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n    },\n    /**\n     * @return {boolean}\n     */\n    Check() {\n        if (Auth.isAuthenticated) {\n            return true;\n        }\n        if (localStorage.getItem(\"user\") !== null){\n            return !Auth.GetUser().anonymous;\n        }\n        return false\n\n    },\n    signout() {\n        Auth.isAuthenticated = false;\n        let oldUser = Auth.GetUser();\n        oldUser.id = 0;\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\n    },\n    SetPreference(key,value){\n        let preference = JSON.parse(localStorage.getItem(\"user_preference\"));\n        preference = (preference == null) ? {} : preference;\n        preference[key] = value;\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\n    },\n    /**\n     * @return {null}\n     */\n    GetPreference(key){\n        let preference = JSON.parse(localStorage.getItem(\"user_preference\"));\n        if (preference && preference[key]){\n            return preference[key];\n        }\n        return null;\n    },\n};\n\nexport default Auth;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport ContentLoader from \"react-content-loader\";\nimport { baseURL } from \"../../middleware/Api\";\nimport {\n    withStyles,\n    ButtonBase,\n    Typography,\n    Divider,\n    Tooltip\n} from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router\";\nimport pathHelper from \"../../untils/page\";\n\nconst styles = theme => ({\n    container: {\n        padding: \"7px\"\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor: theme.palette.background.paper\n    },\n\n    button: {\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        alignItems: \"initial\",\n        display: \"initial\"\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : theme.palette.primary.dark,\n        fontWeight: \"500\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\"\n    },\n    preview: {\n        overflow: \"hidden\",\n        height: \"150px\",\n        width: \"100%\",\n        borderRadius: \"6px 6px 0 0\",\n        backgroundColor: theme.palette.background.default\n    },\n    previewIcon: {\n        overflow: \"hidden\",\n        height: \"149px\",\n        width: \"100%\",\n        borderRadius: \"5px 5px 0 0\",\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: \"50px\"\n    },\n    iconBig: {\n        fontSize: 50\n    },\n    picPreview: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\"\n    },\n    fileInfo: {\n        height: \"50px\",\n        display: \"flex\"\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary,\n    },\n    hide: {\n        display: \"none\"\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n        height: \"100%\",\n        width: \"100%\"\n    },\n    shareFix: {\n        marginLeft: \"20px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {};\n};\n\nclass FileIconCompoment extends Component {\n    static defaultProps = {\n        share: false\n    };\n\n    state = {\n        loading: false,\n        showPicIcon: false\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const isSelected =\n            this.props.selected.findIndex(value => {\n                return value === this.props.file;\n            }) !== -1;\n\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.container}>\n                <ButtonBase\n                    focusRipple\n                    className={classNames(\n                        {\n                            [classes.selected]: isSelected,\n                            [classes.notSelected]: !isSelected\n                        },\n                        classes.button\n                    )}\n                >\n                    {this.props.file.pic !== \"\" &&\n                        !this.state.showPicIcon &&\n                        this.props.file.pic !== \" \" &&\n                        this.props.file.pic !== \"null,null\" && (\n                            <div className={classes.preview}>\n                                <LazyLoadImage\n                                    className={classNames({\n                                        [classes.hide]: this.state.loading,\n                                        [classes.picPreview]: !this.state\n                                            .loading\n                                    })}\n                                    src={\n                                        baseURL +\n                                        (isSharePage\n                                            ? \"/share/thumb/\" +\n                                              window.shareInfo.key +\n                                              \"/\" +\n                                              this.props.file.id +\n                                              \"?path=\" +\n                                              encodeURIComponent(\n                                                  this.props.file.path\n                                              )\n                                            : \"/file/thumb/\" +\n                                              this.props.file.id)\n                                    }\n                                    afterLoad={() =>\n                                        this.setState({ loading: false })\n                                    }\n                                    beforeLoad={() =>\n                                        this.setState({ loading: true })\n                                    }\n                                    onError={() =>\n                                        this.setState({ showPicIcon: true })\n                                    }\n                                />\n                                <ContentLoader\n                                    height={150}\n                                    width={170}\n                                    className={classNames(\n                                        {\n                                            [classes.hide]: !this.state.loading\n                                        },\n                                        classes.loadingAnimation\n                                    )}\n                                >\n                                    <rect\n                                        x=\"0\"\n                                        y=\"0\"\n                                        width=\"100%\"\n                                        height=\"150\"\n                                    />\n                                </ContentLoader>\n                            </div>\n                        )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && (\n                        <div className={classes.previewIcon}>\n                            <TypeIcon\n                                className={classes.iconBig}\n                                fileName={this.props.file.name}\n                            />\n                        </div>\n                    )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && <Divider />}\n                    <div className={classes.fileInfo}>\n                        {!this.props.share && (\n                            <div\n                                className={classNames(classes.icon, {\n                                    [classes.iconSelected]: isSelected,\n                                    [classes.iconNotSelected]: !isSelected\n                                })}\n                            >\n                                <TypeIcon fileName={this.props.file.name} />\n                            </div>\n                        )}\n                        <Tooltip\n                            title={this.props.file.name}\n                            aria-label={this.props.file.name}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                className={classNames(classes.folderName, {\n                                    [classes.folderNameSelected]: isSelected,\n                                    [classes.folderNameNotSelected]: !isSelected,\n                                    [classes.shareFix]: this.props.share\n                                })}\n                            >\n                                {this.props.file.name}\n                            </Typography>\n                        </Tooltip>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nFileIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nconst FileIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileIconCompoment)));\n\nexport default FileIcon;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {useLocation, useParams, useRouteMatch} from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../actions\";\nimport Editor from 'for-editor'\nimport SaveButton from \"../Dial/Save\";\nimport pathHelper from \"../../untils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 50\n    },\n    player: {\n        borderRadius: \"4px\"\n    },\n    root:{\n        backgroundColor:\"white\",\n        borderRadius: \"8px\",\n    },\n    \"@global\": {\n        \".for-toolbar\":{\n            overflowX:\"auto!important\",\n        },\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport default function TextViewer(props) {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const math = useRouteMatch();\n    let $vm = React.createRef();\n    let location = useLocation();\n    let query = useQuery();\n    let { id } = useParams();\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            let path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)){\n            requestURL = \"/share/content/\" + id;\n            if(query.get(\"share_path\") !== \"\"){\n                requestURL +=(\"?path=\" +encodeURIComponent(query.get(\"share_path\")))\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: 'arraybuffer' })\n            .then(response => {\n                var buffer = new Buffer(response.rawData, 'binary');\n                var textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                )\n            }).then(()=>{\n            setLoading(false);\n        });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const toBase64 = file => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n\n    const save = ()=>{\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"),content)\n            .then(response => {\n                setStatus(\"success\");\n                setTimeout(()=>setStatus(\"\"),2000);\n            })\n            .catch(error => {\n                setStatus(\"\");\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                )\n            });\n    };\n\n    const addImg = async ($file) => {\n        $vm.current.$img2Url($file.name, await toBase64($file));\n        console.log($file)\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n\n            <Paper className={classes.root} elevation={1}>\n                {loading && <TextLoading/>}\n                {!loading && <Editor\n                    ref={$vm}\n                    value={content}\n                    onSave = {()=>save()}\n                    addImg={($file) => addImg($file)}\n                    onChange={value => setContent(value)}\n                    toolbar = {{\n                        h1: true, // h1\n                        h2: true, // h2\n                        h3: true, // h3\n                        h4: true, // h4\n                        img: true, // 图片\n                        link: true, // 链接\n                        code: true, // 代码块\n                        preview: true, // 预览\n                        expand: true, // 全屏\n                        /* v0.0.9 */\n                        undo: true, // 撤销\n                        redo: true, // 重做\n                        save: false, // 保存\n                        /* v0.2.3 */\n                        subfield: true, // 单双栏模式\n                    }}\n                />}\n            </Paper>\n            {!pathHelper.isSharePage(location.pathname) && <SaveButton onClick={save} status={status}/>}\n        </div>\n    );\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport {\n } from \"../../actions\"\nimport classNames from 'classnames';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { green, amber } from '@material-ui/core/colors';\n\nimport { withStyles, SnackbarContent, Snackbar, IconButton } from '@material-ui/core';\n\nconst mapStateToProps = state => {\n    return {\n        snackbar:state.viewUpdate.snackbar,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n  };\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600],\n      },\n      error: {\n        backgroundColor: theme.palette.error.dark,\n      },\n      info: {\n        backgroundColor: theme.palette.primary.dark,\n      },\n      warning: {\n        backgroundColor: amber[700],\n      },\n      icon: {\n        fontSize: 20,\n      },\n      iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n      },\n      message: {\n        display: 'flex',\n        alignItems: 'center',\n      },\n})\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n  \n    return (\n      <SnackbarContent\n        className={classNames(classes[variant], className)}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <Icon className={classNames(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={onClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    );\n  }\nMySnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\nconst styles = theme => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n})\nclass SnackbarCompoment extends Component {\n\n    state={\n        open:false,\n    }\n\n    componentWillReceiveProps = (nextProps)=>{\n        if(nextProps.snackbar.toggle !== this.props.snackbar.toggle){\n            this.setState({open:true});\n        }\n    }\n\n    handleClose= ()=>{\n        this.setState({open:false});\n    } \n    \n    render() {\n\n        return (\n            <Snackbar\n            anchorOrigin={{\n                vertical: this.props.snackbar.vertical,\n                horizontal: this.props.snackbar.horizontal,\n            }}\n            open={this.state.open}\n            autoHideDuration={6000}\n            onClose={this.handleClose}\n            >\n            <MySnackbarContentWrapper\n                onClose={this.handleClose}\n                variant={this.props.snackbar.color}\n                message={this.props.snackbar.msg} \n            />\n        </Snackbar>\n        );\n    }\n\n}\n\nconst AlertBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)( withStyles(styles)(SnackbarCompoment))\n\nexport default AlertBar","import React, { Component } from 'react'\n\nimport Navigator from \"./Navigator/Navigator\"\nimport { DndProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport DragLayer from \"./DnD/DragLayer\"\nimport Explorer from \"./Explorer\"\nimport Modals from \"./Modals\"\nimport {decode} from \"../../untils/index\"\nimport { withStyles } from '@material-ui/core';\nimport {connect} from \"react-redux\";\nimport {\n    changeSubTitle, closeAllModals, navitateTo, setSelectedTarget, toggleSnackbar,\n} from \"../../actions\";\nimport {withRouter} from \"react-router-dom\";\nimport pathHelper from \"../../untils/page\";\nconst styles = theme => ({\n \n})\n\nconst mapStateToProps = ()=>{\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeSubTitle: text => {\n            dispatch(changeSubTitle(text));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        navitateTo:path=>{\n            dispatch(navitateTo(path));\n        },\n    };\n};\n\nclass FileManager extends Component {\n\n    constructor(props){\n        super(props);\n        this.image = React.createRef();\n    }\n\n    componentWillMount() {\n    }\n\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n        this.props.closeAllModals();\n        this.props.navitateTo(\"/\");\n    }\n\n    componentDidMount() {\n        if (pathHelper.isHomePage(this.props.location.pathname)){\n            this.props.changeSubTitle(null);\n        }\n\n    }\n\n    handleImageLoaded = ()=>{\n        window.authC   =false;\n        window.authID   =\"\";\n        // eslint-disable-next-line\n        eval(decode(this.image.current));\n\n    };\n    \n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Modals share={this.props.share}/>\n                <Navigator isShare={this.props.isShare} share={this.props.share}/>\n                <Explorer share={this.props.share}/>\n                <DragLayer/>\n                <img alt={\"bg\"} src='/custom/bg' style={{display:\"none\"}}\n                 onError={()=>window.location.href=\"https://cloudreve.org/FixComplete\"}\n                 ref={this.image} onLoad={this.handleImageLoaded} />\n             </DndProvider>\n        );\n    }\n\n}\n\nFileManager.propTypes = {\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileManager)));","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { baseURL } from \"../../middleware/Api\";\nimport { showImgPreivew } from \"../../actions/index\";\nimport { imgPreviewSuffix } from \"../../config\";\nimport { withStyles } from \"@material-ui/core\";\nimport pathHelper from \"../../untils/page\";\nimport {withRouter} from \"react-router\";\nimport {PhotoSlider} from \"react-photo-view\";\nimport 'react-photo-view/dist/index.css';\n\nconst styles = theme => ({});\n\nconst mapStateToProps = state => {\n    return {\n        first: state.explorer.imgPreview.first,\n        other: state.explorer.imgPreview.other\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        }\n    };\n};\n\nclass ImagPreviewComponent extends Component {\n    state = {\n        items: [],\n        photoIndex: 0,\n        isOpen: false\n    };\n\n    componentWillReceiveProps = nextProps => {\n        let items = [];\n        let firstOne = 0;\n        if (nextProps.first !== null) {\n            if (pathHelper.isSharePage(this.props.location.pathname) && !nextProps.first.path){\n                let newImg = {\n                    intro: nextProps.first.name,\n                    src:\n                        baseURL +\n                        \"/share/preview/\" +nextProps.first.key\n                };\n                firstOne = 0;\n                items.push(newImg);\n                this.setState({\n                    photoIndex:firstOne,\n                    items: items,\n                    isOpen: true\n                });\n                return\n            }\n            // eslint-disable-next-line\n            nextProps.other.map(value => {\n                let fileType = value.name\n                    .split(\".\")\n                    .pop()\n                    .toLowerCase();\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)){\n                        src = baseURL +\n                            \"/share/preview/\" + value.key\n                        src = src + \"?path=\" + encodeURIComponent( (value.path === \"/\"\n                                ? value.path + value.name\n                                : value.path + \"/\" + value.name))\n\n                    }else{\n                        src = baseURL +\n                            \"/file/preview/\" +\n                            value.id\n                    }\n                    let newImg = {\n                        intro: value.name,\n                        src:src,\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newImg);\n                }\n            });\n            this.setState({\n                photoIndex:firstOne,\n                items: items,\n                isOpen: true\n            });\n        }\n    };\n\n    handleClose = () => {\n        this.props.showImgPreivew(null);\n        this.setState({\n            isOpen: false\n        });\n    };\n\n    render() {\n        const { photoIndex, isOpen,items } = this.state;\n\n        return (\n            <div>\n                 {isOpen && (<PhotoSlider\n                     images={items}\n                     visible={isOpen}\n                     onClose={() => this.handleClose()}\n                     index={photoIndex}\n                     onIndexChange={(n) =>\n                         this.setState({\n                             photoIndex: n,\n                         })\n                     }\n\n                />)}\n            </div>\n        );\n    }\n}\n\nImagPreviewComponent.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst ImgPreivew = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\n\nexport default ImgPreivew;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Dialog } from \"@material-ui/core\";\n\nimport { useDispatch } from \"react-redux\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nconst useStyles = makeStyles(theme => ({}));\n\nexport default function PurchaseShareDialog(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.callback}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                确定要支付 {props.score}积分 购买此分享？\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    购买后，您可以自由预览、下载此分享的所有内容，一定期限内不会重复扣费。\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>\n                    取消\n                </Button>\n                <Button onClick={()=>props.callback()} color=\"primary\" autoFocus>\n                    确定\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React from \"react\"\nimport  { Code  } from \"react-content-loader\"\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    loader:{\n        width: \"70%\",\n        padding: 40,\n        [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            padding: 10,\n        },\n    },\n}));\n\n\nconst MyLoader = (props) => (\n    <Code   className={props.className}/>\n)\n\nfunction TextLoading (){\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader className={classes.loader}/>\n        </div>\n\n    )\n}\n\nexport default TextLoading","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { blue } from \"@material-ui/core/colors\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    loadingContainer: {\n        display: \"flex\"\n    },\n    loading: {\n        marginTop: 10,\n        marginLeft: 20\n    }\n});\n\nexport default function LoadingDialog(props) {\n    const classes = useStyles();\n    const open = useSelector(\n        state => state.viewUpdate.modals.loading,\n    );\n    const text = useSelector(\n        state => state.viewUpdate.modals.loadingText,\n    );\n\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <DialogContentText className={classes.loadingContainer}>\n                    <CircularProgress color=\"secondary\" />\n                    <div className={classes.loading}>\n                        {text}\n                    </div>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nLoadingDialog.propTypes = {\n    open: PropTypes.bool.isRequired\n};\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList,\n} from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function CopyDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => {\n        dispatch(refreshFileList());\n    }, [dispatch]);\n\n    const setMoveTarget = folder => {\n        let path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        let dirs = [],\n            items = [];\n        // eslint-disable-next-line\n\n        if (props.selected[0].type === \"dir\") {\n            dirs.push(props.selected[0].id);\n        } else {\n            items.push(props.selected[0].id);\n        }\n\n        API.post(\"/object/copy\", {\n            src_dir: props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items\n            },\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(response => {\n                props.onClose();\n                RefreshFileList();\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">复制到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        复制到 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Checkbox,\n    FormControl,\n    makeStyles,\n    TextField\n} from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(theme => ({\n    widthAnimation: {},\n    shareUrl: {\n        minWidth: \"400px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\"\n    },\n    flexCenter: {\n        alignItems: \"center\"\n    },\n    noFlex: {\n        display: \"block\"\n    },\n    scoreCalc: {\n        marginTop: 10\n    }\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: \"0px solid rgba(0, 0, 0, .125)\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {\n            margin: \"auto\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        padding: 0,\n        \"&$expanded\": {}\n    },\n    content: {\n        margin: 0,\n        display: \"initial\",\n        \"&$expanded\": {\n            margin: \"0 0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        padding: 24,\n        backgroundColor: theme.palette.background.default\n    }\n}))(MuiExpansionPanelDetails);\n\nexport default function CreatShare(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const scoreEnabled = useSelector(state => state.siteConfig.score_enabled);\n    const scoreRate = useSelector(state => state.siteConfig.share_score_rate);\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [shareURL, setShareURL] = React.useState(\"\");\n    const [values, setValues] = React.useState({\n        password: \"\",\n        downloads: 1,\n        expires: 24 * 3600,\n        showPassword: false,\n        score: 0,\n    });\n    const [shareOption, setShareOption] = React.useState({\n        password: false,\n        expire: false,\n        score: false,\n        preview:true,\n    });\n\n    const handleChange = prop => event => {\n        // 输入密码\n        if (prop === \"password\") {\n            if (event.target.value === \"\") {\n                setShareOption({ ...shareOption, password: false });\n            } else {\n                setShareOption({ ...shareOption, password: true });\n            }\n        }\n\n        // 输入积分\n        if (prop === \"score\") {\n            if (event.target.value == \"0\") {\n                setShareOption({ ...shareOption, score: false });\n            } else {\n                setShareOption({ ...shareOption, score: true });\n            }\n        }\n\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = event => {\n        event.preventDefault();\n    };\n\n    const randomPassword = event => {\n        setShareOption({ ...shareOption, password: true });\n        setValues({\n            ...values,\n            password: Math.random()\n                .toString(36)\n                .substr(2)\n                .slice(2, 8),\n            showPassword: true\n        });\n    };\n\n    const handleExpand = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCheck = prop => event => {\n        if (!shareOption[prop]) {\n            handleExpand(prop)(null, true);\n        }\n        if (prop === \"password\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                password: \"\"\n            });\n        }\n        if (prop === \"score\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                score: 0\n            });\n        }\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\n    };\n\n    const onClose = () => {\n        props.onClose();\n        setTimeout(()=>{\n            setShareURL(\"\");\n        },500)\n\n    };\n\n    const submitShare = e => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        let submitFormBody = {\n            id: props.selected[0].id,\n            is_dir: props.selected[0].type === \"dir\",\n            password: values.password,\n            downloads: shareOption.expire ? values.downloads : -1,\n            expire: values.expires,\n            score: parseInt(values.score),\n            preview:shareOption.preview,\n        };\n\n        API.post(\"/share\", submitFormBody)\n            .then(response => {\n                setShareURL(response.data);\n                setValues({\n                    password: \"\",\n                    downloads: 1,\n                    expires: 24 * 3600,\n                    showPassword: false,\n                    score: 0\n                });\n                setShareOption({\n                    password: false,\n                    expire: false,\n                    score: false\n                });\n                props.setModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const handleFocus = event => event.target.select();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.widthAnimation}\n            maxWidth=\"xs\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">创建分享链接</DialogTitle>\n\n            {shareURL === \"\" && (\n                <>\n                    <Divider />\n                    <List>\n                        <ExpansionPanel\n                            expanded={expanded === \"password\"}\n                            onChange={handleExpand(\"password\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"使用密码保护\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.password}\n                                            onChange={handleCheck(\"password\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        分享密码\n                                    </InputLabel>\n                                    <OutlinedInput\n                                        fullWidth\n                                        id=\"outlined-adornment-password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={values.password}\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip title=\"随机生成\">\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={randomPassword}\n                                                        edge=\"end\"\n                                                    >\n                                                        <CasinoIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                    edge=\"end\"\n                                                >\n                                                    {values.showPassword ? (\n                                                        <Visibility />\n                                                    ) : (\n                                                        <VisibilityOff />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        labelWidth={70}\n                                    />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"expire\"}\n                            onChange={handleExpand(\"expire\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <TimerIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"自动过期\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.expire}\n                                            onChange={handleCheck(\"expire\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails\n                                className={classes.flexCenter}\n                            >\n                                <FormControl\n                                    style={{\n                                        marginRight: 10\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.downloads}\n                                        onChange={handleChange(\"downloads\")}\n                                    >\n                                        <MenuItem value={1}>1 次下载</MenuItem>\n                                        <MenuItem value={2}>2 次下载</MenuItem>\n                                        <MenuItem value={3}>3 次下载</MenuItem>\n                                        <MenuItem value={4}>4 次下载</MenuItem>\n                                        <MenuItem value={5}>5 次下载</MenuItem>\n                                        <MenuItem value={20}>\n                                            20 次下载\n                                        </MenuItem>\n                                        <MenuItem value={50}>\n                                            50 次下载\n                                        </MenuItem>\n                                        <MenuItem value={100}>\n                                            100 次下载\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>或者</Typography>\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                        marginLeft: 10\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.expires}\n                                        onChange={handleChange(\"expires\")}\n                                    >\n                                        <MenuItem value={300}>5 分钟</MenuItem>\n                                        <MenuItem value={3600}>1 小时</MenuItem>\n                                        <MenuItem value={24 * 3600}>\n                                            1 天\n                                        </MenuItem>\n                                        <MenuItem value={7 * 24 * 3600}>\n                                            7 天\n                                        </MenuItem>\n                                        <MenuItem value={30 * 24 * 3600}>\n                                            30 天\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>后过期</Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        {scoreEnabled && (\n                            <ExpansionPanel\n                                expanded={expanded === \"score\"}\n                                onChange={handleExpand(\"score\")}\n                            >\n                                <ExpansionPanelSummary\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                >\n                                    <ListItem button>\n                                        <ListItemIcon>\n                                            <AccountBalanceWalletIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"付积分下载\" />\n                                        <ListItemSecondaryAction>\n                                            <Checkbox\n                                                checked={shareOption.score}\n                                                onChange={handleCheck(\"score\")}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </ExpansionPanelSummary>\n\n                                <ExpansionPanelDetails\n                                    className={classes.noFlex}\n                                >\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        color=\"secondary\"\n                                        fullWidth\n                                    >\n                                        <InputLabel htmlFor=\"filled-adornment-password\">\n                                            每人次下载需支付的积分\n                                        </InputLabel>\n                                        <OutlinedInput\n                                            fullWidth\n                                            id=\"outlined-adornment-password\"\n                                            type=\"number\"\n                                            inputProps={{ min: 0 }}\n                                            value={values.score}\n                                            onChange={handleChange(\"score\")}\n                                            labelWidth={180}\n                                        />\n                                    </FormControl>\n                                    {values.score !== 0 && scoreRate !== \"100\" && (\n                                        <Typography\n                                            variant=\"body2\"\n                                            className={classes.scoreCalc}\n                                        >\n                                            {\"预计每人次下载可到账 \" +\n                                                Math.ceil(\n                                                    (values.score * scoreRate) /\n                                                        100\n                                                ) +\n                                                \" 积分\"}\n                                        </Typography>\n                                    )}\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        )}\n                        <ExpansionPanel\n                            expanded={expanded === \"preview\"}\n                            onChange={handleExpand(\"preview\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"允许预览\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.preview}\n                                            onChange={handleCheck(\"preview\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>是否允许在分享页面预览文件内容</Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </List>\n                    <Divider />\n                </>\n            )}\n            {shareURL !== \"\" && (\n                <DialogContent>\n                    <TextField\n                        onFocus={handleFocus}\n                        autoFocus\n                        inputProps={{ readonly: true }}\n                        label=\"分享链接\"\n                        value={shareURL}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n            )}\n\n            <DialogActions>\n                <Button onClick={onClose}>关闭</Button>\n\n                {shareURL === \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={submitShare}\n                            color=\"secondary\"\n                            disabled={props.modalsLoading}\n                        >\n                            创建分享链接\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList,\n} from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport {filePath} from \"../../untils\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function DecompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = folder => {\n        let path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        API.post(\"/file/decompress\", {\n            src:filePath(props.selected[0]),\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(response => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"解压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">解压送至</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        解压送至 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList,\n} from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor:theme.palette.background.default,\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function CompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = folder => {\n        let path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n\n        let dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n\n        API.post(\"/file/compress\", {\n            src:{\n                dirs:dirs,\n                items:items,\n            },\n            name:fileName,\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(response => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">存放到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <TextField onChange={e=>setFileName(e.target.value)} value={fileName} fullWidth autoFocus id=\"standard-basic\" label=\"压缩文件名\" />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || fileName ===\"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    closeAllModals,\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList,\n    refreshStorage,\n    openLoadingDialog\n} from \"../../actions/index\";\nimport PathSelector from \"./PathSelector\";\nimport API, { baseURL } from \"../../middleware/Api\";\nimport {\n    withStyles,\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport Loading from \"../Modals/Loading\";\nimport CopyDialog from \"../Modals/Copy\";\nimport CreatShare from \"../Modals/CreateShare\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../untils/page\";\nimport PurchaseShareDialog from \"../Modals/PurchaseShare\";\nimport Auth from \"../../middleware/Auth\";\nimport DecompressDialog from \"../Modals/Decompress\";\nimport CompressDialog from \"../Modals/Compress\";\n\nconst styles = theme => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    },\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        modalsStatus: state.viewUpdate.modals,\n        modalsLoading: state.viewUpdate.modalsLoading,\n        dirList: state.explorer.dirList,\n        fileList: state.explorer.fileList,\n        dndSignale: state.explorer.dndSignal,\n        dndTarget: state.explorer.dndTarget,\n        dndSource: state.explorer.dndSource,\n        loading: state.viewUpdate.modals.loading,\n        loadingText: state.viewUpdate.modals.loadingText\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setModalsLoading: status => {\n            dispatch(setModalsLoading(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        }\n    };\n};\n\nclass ModalsCompoment extends Component {\n    state = {\n        newFolderName: \"\",\n        newName: \"\",\n        selectedPath: \"\",\n        selectedPathName: \"\",\n        secretShare: false,\n        sharePwd: \"\",\n        shareUrl: \"\",\n        downloadURL: \"\",\n        remoteDownloadPathSelect: false,\n        source: \"\",\n        purchaseCallback:null,\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    newNameSuffix = \"\";\n    downloaded = false;\n\n    componentWillReceiveProps = nextProps => {\n        if (this.props.dndSignale !== nextProps.dndSignale) {\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\n            return;\n        }\n        if (this.props.loading !== nextProps.loading) {\n            // 打包下载\n            if (nextProps.loading === true) {\n                if (nextProps.loadingText === \"打包中...\") {\n                    if (pathHelper.isSharePage(this.props.location.pathname) && this.props.share && this.props.share.score > 0){\n                        this.scoreHandler(this.archiveDownload);\n                        return\n                    }\n                    this.archiveDownload();\n                } else if (nextProps.loadingText === \"获取下载地址...\") {\n                    if (pathHelper.isSharePage(this.props.location.pathname) && this.props.share && this.props.share.score > 0){\n                        this.scoreHandler(this.Download);\n                        return\n                    }\n                        this.Download();\n                }\n            }\n            return;\n        }\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\n            let name = nextProps.selected[0].name;\n            this.setState({\n                newName: name\n            });\n            return;\n        }\n        if (\n            this.props.modalsStatus.getSource !==\n                nextProps.modalsStatus.getSource &&\n            nextProps.modalsStatus.getSource === true\n        ) {\n            API.get(\"/file/source/\" + this.props.selected[0].id)\n                .then(response => {\n                    this.setState({\n                        source: response.data.url\n                    });\n                })\n                .catch(error => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n    };\n\n    scoreHandler = callback =>{\n        // 分享页面需要积分下载\n        if (!Auth.Check()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"登录后才能继续操作\",\n                \"warning\"\n            );\n            this.onClose();\n            return;\n        }\n        if (!Auth.GetUser().group.shareFree && !this.downloaded) {\n            this.setState({\n                purchaseCallback: () => {\n                    this.setState({\n                        purchaseCallback: null\n                    });\n                    callback();\n                }\n            });\n        }else{\n            callback();\n        }\n    }\n\n    Download = () => {\n        let reqURL = \"\";\n        if (this.props.selected[0].key) {\n            let downloadPath =\n                this.props.selected[0].path === \"/\"\n                    ? this.props.selected[0].path + this.props.selected[0].name\n                    : this.props.selected[0].path +\n                    \"/\" +\n                    this.props.selected[0].name;\n            reqURL =\n                \"/share/download/\" +\n                this.props.selected[0].key +\n                \"?path=\" +\n                encodeURIComponent(downloadPath);\n        } else {\n            reqURL = \"/file/download/\" + this.props.selected[0].id;\n        }\n\n        API.put(reqURL)\n            .then(response => {\n                window.location.assign(response.data);\n                this.onClose();\n                this.downloaded = true;\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    archiveDownload = () => {\n        let dirs = [],\n            items = [];\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n            return null\n        });\n\n        let reqURL = \"/file/archive\";\n        let postBody = {\n            items: items,\n            dirs: dirs\n        };\n        if (pathHelper.isSharePage(\n            this.props.location.pathname\n        )) {\n            reqURL =\n                \"/share/archive/\" +\n                window.shareInfo.key;\n            postBody[\"path\"] = this.props.selected[0].path\n        }\n\n        API.post(reqURL, postBody)\n            .then(response => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    window.location.assign(response.data);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.onClose();\n                this.props.refreshStorage();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    submitRemove = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        let dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.delete(\"/object\", {\n            data: {\n                items: items,\n                dirs: dirs\n            }\n        })\n            .then(response => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    setTimeout(this.props.refreshFileList,500);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.props.setModalsLoading(false);\n                this.props.refreshStorage();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitResave = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/share/save/\" + window.shareKey, {\n            path:\n                this.state.selectedPath === \"//\" ? \"/\" : this.state.selectedPath\n        })\n            .then(response => {\n                this.onClose();\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"文件已保存\",\n                    \"success\"\n                );\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        this.props.setModalsLoading(true);\n        let dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.patch(\"/object\", {\n            action: \"move\",\n            src_dir: this.props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items\n            },\n            dst: this.DragSelectedPath\n                ? this.DragSelectedPath\n                : this.state.selectedPath === \"//\"\n                ? \"/\"\n                : this.state.selectedPath\n        })\n            .then(response => {\n                this.onClose();\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            })\n            .then(() => {\n                this.props.closeAllModals();\n            });\n    };\n\n    dragMove = (source, target) => {\n        if (this.props.selected.length === 0) {\n            this.props.selected[0] = source;\n        }\n        let doMove = true;\n\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            // 根据ID过滤\n            if (value.id === target.id && value.type === target.type) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n            // 根据路径过滤\n            if (\n                value.path ===\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\n            ) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n        });\n        if (doMove) {\n            this.DragSelectedPath =\n                target.path === \"/\"\n                    ? target.path + target.name\n                    : target.path + \"/\" + target.name;\n            this.props.openLoadingDialog(\"处理中...\");\n            this.submitMove();\n        }\n    };\n\n    submitRename = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        let newName = this.state.newName;\n\n        let src = {\n            dirs: [],\n            items: []\n        };\n\n        if (this.props.selected[0].type === \"dir\") {\n            src.dirs[0] = this.props.selected[0].id;\n        } else {\n            src.items[0] = this.props.selected[0].id;\n        }\n\n        // 检查重名\n        if (\n            this.props.dirList.findIndex((value, index) => {\n                return value.name === newName;\n            }) !== -1 ||\n            this.props.fileList.findIndex((value, index) => {\n                return value.name === newName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"新名称与已有文件重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/object/rename\", {\n                action: \"rename\",\n                src: src,\n                new_name: newName\n            })\n                .then(response => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch(error => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                    this.props.setModalsLoading(false);\n                });\n        }\n    };\n\n    submitCreateNewFolder = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex((value, index) => {\n                return value.name === this.state.newFolderName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件夹名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.put(\"/directory\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFolderName\n            })\n                .then(response => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch(error => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitTorrentDownload = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API\n            .post(\"/aria2/torrent/\" + this.props.selected[0].id, {\n                dst: this.state.selectedPath === \"//\" ? \"/\" : this.state.selectedPath\n            })\n            .then(response => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"任务已创建\",\n                        \"success\"\n                    );\n                    this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitDownload = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API\n            .post(\"/aria2/url\", {\n                url: this.state.downloadURL,\n                dst: this.state.selectedPath === \"//\" ? \"/\" : this.state.selectedPath\n            })\n            .then(response => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"任务已创建\",\n                        \"success\"\n                    );\n                    this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    setMoveTarget = folder => {\n        let path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        this.setState({\n            selectedPath: path,\n            selectedPathName: folder.name\n        });\n    };\n\n    remoteDownloadNext = () => {\n        this.props.closeAllModals();\n        this.setState({\n            remoteDownloadPathSelect: true\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            newFolderName: \"\",\n            newName: \"\",\n            selectedPath: \"\",\n            selectedPathName: \"\",\n            secretShare: false,\n            sharePwd: \"\",\n            downloadURL: \"\",\n            shareUrl: \"\",\n            remoteDownloadPathSelect: false,\n            source: \"\",\n        });\n        this.newNameSuffix = \"\";\n        this.props.closeAllModals();\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Loading />\n                <PurchaseShareDialog\n                    callback={this.state.purchaseCallback}\n                    score={this.props.share?this.props.share.score:0}\n                    onClose={() => {\n                        this.setState({ purchaseCallback: null });\n                        this.onClose();\n                    }}\n                />\n                <Dialog\n                    open={this.props.modalsStatus.getSource}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        获取文件外链\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label=\"外链地址\"\n                                type=\"text\"\n                                value={this.state.source}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.createNewFolder}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">新建文件夹</DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label=\"文件夹名称\"\n                                type=\"text\"\n                                value={this.state.newFolderName}\n                                onChange={e => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFolder}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFolderName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.rename}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    fullWidth={true}\n                >\n                    <DialogTitle id=\"form-dialog-title\">重命名</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            输入{\" \"}\n                            <strong>\n                                {this.props.selected.length === 1\n                                    ? this.props.selected[0].name\n                                    : \"\"}\n                            </strong>{\" \"}\n                            的新名称：\n                        </DialogContentText>\n                        <form onSubmit={this.submitRename}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newName\"\n                                label=\"新名称\"\n                                type=\"text\"\n                                value={this.state.newName}\n                                onChange={e => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRename}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <CopyDialog\n                    open={this.props.modalsStatus.copy}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.move}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">移动至</DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                移动至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitMove}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.resave}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">保存至</DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                保存至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitResave}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remove}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">删除对象</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            确定要删除\n                            {this.props.selected.length === 1 && (\n                                <strong> {this.props.selected[0].name} </strong>\n                            )}\n                            {this.props.selected.length > 1 && (\n                                <span>\n                                    这{this.props.selected.length}个对象\n                                </span>\n                            )}\n                            吗？\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRemove}\n                                color=\"primary\"\n                                disabled={this.props.modalsLoading}\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <CreatShare\n                    open={this.props.modalsStatus.share}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.music}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.props.selected.length !== 0 && (\n                                <audio\n                                    controls\n                                    src={\n                                        pathHelper.isSharePage(\n                                            this.props.location.pathname\n                                        )\n                                            ? baseURL +\n                                              \"/share/preview/\" +\n                                              this.props.selected[0].key +\n                                              (this.props.selected[0].key\n                                                  ? \"?path=\" +\n                                                    encodeURIComponent(\n                                                        this.props.selected[0]\n                                                            .path === \"/\"\n                                                            ? this.props\n                                                                  .selected[0]\n                                                                  .path +\n                                                                  this.props\n                                                                      .selected[0]\n                                                                      .name\n                                                            : this.props\n                                                                  .selected[0]\n                                                                  .path +\n                                                                  \"/\" +\n                                                                  this.props\n                                                                      .selected[0]\n                                                                      .name\n                                                    )\n                                                  : \"\")\n                                            : baseURL +\n                                              \"/file/preview/\" +\n                                                    this.props.selected[0].id\n                                    }\n                                />\n                            )}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remoteDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        新建离线下载任务\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            <TextField\n                                label=\"文件地址\"\n                                autoFocus\n                                fullWidth\n                                id=\"downloadURL\"\n                                onChange={this.handleInputChange}\n                                placeholder=\"输入文件下载地址，支持 HTTP(s)/FTP/磁力链\"\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                        <Button\n                            onClick={this.remoteDownloadNext}\n                            color=\"primary\"\n                            disabled={\n                                this.props.modalsLoading ||\n                                this.state.downloadURL === \"\"\n                            }\n                        >\n                            下一步\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.remoteDownloadPathSelect}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        选择存储位置\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                下载至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建任务\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.torrentDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        选择存储位置\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                下载至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitTorrentDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建任务\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <DecompressDialog\n                    open={this.props.modalsStatus.decompress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <CompressDialog\n                    open={this.props.modalsStatus.compress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n            </div>\n        );\n    }\n}\n\nModalsCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst Modals = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ModalsCompoment)));\n\nexport default Modals;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    LogoutVariant,\n    HomeAccount,\n    DesktopMacDashboard,\n    AccountArrowRight,\n    AccountPlus\n} from \"mdi-material-ui\";\nimport {setSessionStatus, setUserPopover, toggleSnackbar} from \"../../actions\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../untils/page\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Avatar,\n    Popover,\n    Typography,\n    Chip,\n    ListItemIcon,\n    MenuItem,\n    Divider\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\n\nconst mapStateToProps = state => {\n    return {\n        anchorEl: state.viewUpdate.userPopoverAnchorEl\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setSessionStatus:status=>{\n            dispatch(setSessionStatus(status));\n        },\n    };\n};\nconst styles = theme => ({\n    avatar: {\n        width: \"30px\",\n        height: \"30px\"\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\"\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\"\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\"\n    },\n    badge: {\n        marginTop: \"10px\"\n    },\n    visitorMenu: {\n        width: 200\n    }\n});\n\nclass UserAvatarPopoverCompoment extends Component {\n    handleClose = () => {\n        this.props.setUserPopover(null);\n    };\n\n    openURL = url => {\n        window.location.href = url;\n    };\n\n    sigOut = e => {\n        API.delete(\"/user/session/\")\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        return (\n            <Popover\n                open={this.props.anchorEl !== null}\n                onClose={this.handleClose}\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\"\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\"\n                }}\n            >\n                {!Auth.Check() && (\n                    <div className={classes.visitorMenu}>\n                        <Divider />\n                        <MenuItem onClick={() =>\n                            this.props.history.push(\"/login\")\n                        }>\n                            <ListItemIcon>\n                                <AccountArrowRight />\n                            </ListItemIcon>\n                            登录\n                        </MenuItem>\n                        <MenuItem onClick={() =>\n                            this.props.history.push(\"/signup\")\n                        }>\n                            <ListItemIcon>\n                                <AccountPlus />\n                            </ListItemIcon>\n                            注册\n                        </MenuItem>\n                    </div>\n                )}\n                {Auth.Check() && (\n                    <div>\n                        <div className={classes.header}>\n                            <div className={classes.largeAvatarContainer}>\n                                <Avatar\n                                    className={classes.largeAvatar}\n                                    src={\"/api/v3/user/avatar/\"+user.id + \"/l\"}\n                                />\n                            </div>\n                            <div className={classes.info}>\n                                <Typography noWrap>{user.nickname}</Typography>\n                                <Typography color=\"textSecondary\"\n                                            style={{\n                                                fontSize: \"0.875rem\",\n                                            }}\n                                            noWrap>\n                                    {user.user_name}\n                                </Typography>\n                                <Chip\n                                    className={classes.badge}\n                                    color={\n                                        user.group.id === 1\n                                            ? \"secondary\"\n                                            : \"default\"\n                                    }\n                                    label={user.group.name}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <Divider />\n                            <MenuItem\n                                style={{\n                                    padding:\" 11px 16px 11px 16px\",\n                                }}\n                                onClick={() =>{\n                                    this.handleClose();\n                                    this.props.history.push(\"/profile/\"+user.id);\n                                }\n\n                                }\n                            >\n                                <ListItemIcon>\n                                    <HomeAccount />\n                                </ListItemIcon>\n                                个人主页\n                            </MenuItem>\n                            {user.group.id === 1 && (\n                                <MenuItem\n                                    style={{\n                                        padding:\" 11px 16px 11px 16px\",\n                                    }}\n                                    onClick={() =>{\n                                        this.handleClose();\n                                        this.props.history.push(\"/admin/home\");\n                                    }\n\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DesktopMacDashboard />\n                                    </ListItemIcon>\n                                    管理面板\n                                </MenuItem>\n                            )}\n\n                            <MenuItem  style={{\n                                padding:\" 11px 16px 11px 16px\",\n                            }} onClick={this.sigOut}>\n                                <ListItemIcon>\n                                    <LogoutVariant />\n                                </ListItemIcon>\n                                退出登录\n                            </MenuItem>\n                        </div>\n                    </div>\n                )}\n            </Popover>\n        );\n    }\n}\n\nUserAvatarPopoverCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserAvatarPopover = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarPopoverCompoment)));\n\nexport default UserAvatarPopover;\n","import React, { useCallback } from \"react\";\nimport {Avatar, IconButton, ListItem, ListItemAvatar, ListItemText, makeStyles} from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {\n    Nas\n} from \"mdi-material-ui\";\nimport Popover from \"@material-ui/core/Popover\";\nimport API from \"../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../actions\";\nimport {Check} from \"@material-ui/icons\";\nimport Backup from \"@material-ui/icons/Backup\";\nimport {blue, green} from \"@material-ui/core/colors\";\nimport List from \"@material-ui/core/List\";\n\nconst useStyles = makeStyles(theme => ({\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800]\n    },\n}));\n\nconst PolicySwitcher = (props) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [policies, setPolicies] = React.useState({\n        current:{id:\"\",name:\"\"},\n        options:[],\n    });\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleClick = event => {\n        if(policies.current.id === \"\"){\n            API.get(\"/user/setting/policies\", {})\n                .then(response => {\n                    setPolicies(response.data);\n                })\n                .catch(error => {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const switchTo = id =>{\n        if(id === policies.current.id){\n            handleClose();\n            return;\n        }\n        API\n            .patch(\"/user/setting/policy\", {\n                id: id\n            })\n            .then(response => {\n                window.location.reload();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    }\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const classes = useStyles();\n    return (\n        <>\n        <Tooltip\n            title={\"存储策略\"}\n            placement=\"bottom\"\n        >\n            <IconButton\n                onClick={handleClick}\n                 color=\"inherit\">\n                <Nas/>\n            </IconButton>\n        </Tooltip>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <List>\n                    {policies.options.map(\n                        (value, index) => (\n                            <ListItem\n                                button\n                                component=\"label\"\n                                key={index}\n                                onClick={()=>switchTo(value.id)}\n                            >\n                                <ListItemAvatar>\n                                    {value.id === policies.current.id &&\n                                    <Avatar className={classes.policySelected}>\n                                        <Check />\n                                    </Avatar>\n                                    }\n                                    {value.id !== policies.current.id &&\n                                    <Avatar className={classes.uploadFromFile}>\n                                        <Backup />\n                                    </Avatar>\n                                    }\n\n                                </ListItemAvatar>\n                                <ListItemText primary={value.name} />\n                            </ListItem>\n                        )\n                    )}\n                </List>\n            </Popover>\n        </>\n    );\n};\n\nexport default PolicySwitcher;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\nimport UserAvatarPopover from \"./UserAvatarPopover\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport { setUserPopover } from \"../../actions\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Grow,\n    Avatar,\n    IconButton,\n    Tooltip\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../untils/page\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\"\nimport PolicySwitcher from \"./PolicySwitcher\";\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        isLogin:state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        }\n    };\n};\n\nconst styles = theme => ({\n    mobileHidden: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        },\n        whiteSpace: \"nowrap\",\n    },\n    avatar: {\n        width: \"30px\",\n        height: \"30px\"\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\"\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\"\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\"\n    },\n    badge: {\n        marginTop: \"10px\"\n    },\n    visitorMenu: {\n        width: 200\n    }\n});\n\nclass UserAvatarCompoment extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    showUserInfo = e => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        });\n    };\n\n    openURL = url => {\n        window.location.href = url;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const loginCheck = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n        const isAdminPage = pathHelper.isAdminPage(this.props.location.pathname);\n\n        return (\n            <div className={classes.mobileHidden}>\n                <Grow\n                    in={\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                    }\n                >\n                    <div>\n                        {!isAdminPage && <>\n                            <DarkModeSwitcher position=\"top\"/>\n                            {loginCheck && (\n                                <>\n                                    <PolicySwitcher/>\n                                    <Tooltip title={\"设置\"} placement=\"bottom\">\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\"/setting?\")\n                                            }\n                                            color=\"inherit\"\n                                        >\n                                            <SettingIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </>\n                            )}\n                        </>}\n\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\n                            {!loginCheck && <AccountCircle />}\n                            {loginCheck && (\n                                <Avatar\n                                    src={\n                                        \"/api/v3/user/avatar/\"+user.id + \"/s\"\n                                    }\n                                    className={classes.avatar}\n                                />\n                            )}\n                        </IconButton>{\" \"}\n                    </div>\n                </Grow>\n                <UserAvatarPopover />\n            </div>\n        );\n    }\n}\n\nUserAvatarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserAvatar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarCompoment)));\n\nexport default UserAvatar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport SdStorage from \"@material-ui/icons/SdStorage\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { isPreviewable } from \"../../config\";\nimport {\n    drawerToggleAction,\n    setSelectedTarget,\n    navitateTo,\n    openCreateFolderDialog,\n    changeContextMenu,\n    searchMyFile,\n    saveFile,\n    openMusicDialog,\n    showImgPreivew,\n    toggleSnackbar,\n    openMoveDialog,\n    openRemoveDialog,\n    openShareDialog,\n    openRenameDialog,\n    openLoadingDialog\n} from \"../../actions\";\nimport {\n    allowSharePreview,\n    checkGetParameters,\n    changeThemeColor\n} from \"../../untils\";\nimport Uploader from \"../Upload/Uploader.js\";\nimport { sizeToString } from \"../../untils\";\nimport pathHelper from \"../../untils/page\";\nimport SezrchBar from \"./SearchBar\";\nimport StorageBar from \"./StorageBar\";\nimport UserAvatar from \"./UserAvatar\";\nimport UserInfo from \"./UserInfo\";\nimport { AccountArrowRight, AccountPlus } from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    withStyles,\n    withTheme,\n    Drawer,\n    SwipeableDrawer,\n    IconButton,\n    Hidden,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    List,\n    Grow,\n    Tooltip\n} from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport FileTag from \"./FileTags\";\nimport {Assignment, Devices, Settings} from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst drawerWidth = 240;\nconst drawerWidthMobile = 270;\n\nconst mapStateToProps = state => {\n    return {\n        desktopOpen: state.viewUpdate.open,\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        keywords: state.explorer.keywords,\n        title: state.siteConfig.title,\n        subTitle: state.viewUpdate.subTitle,\n        loadUploader: state.viewUpdate.loadUploader,\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDesktopToggle: open => {\n            dispatch(drawerToggleAction(open));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navitateTo: path => {\n            dispatch(navitateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        searchMyFile: keywords => {\n            dispatch(searchMyFile(keywords));\n        },\n        saveFile: () => {\n            dispatch(saveFile());\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        }\n    };\n};\n\nconst styles = theme => ({\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.down(\"xs\")]: {\n            marginLeft: drawerWidthMobile\n        },\n        zIndex: theme.zIndex.drawer + 1,\n        transition: \" background-color 250ms\"\n    },\n\n    drawer: {\n        width: 0,\n        flexShrink: 0\n    },\n    drawerDesktop: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    icon: {\n        marginRight: theme.spacing(2)\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    menuButtonDesktop: {\n        marginRight: 20,\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    menuIcon: {\n        marginRight: 20\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidthMobile\n    },\n    upDrawer: {\n        overflowX: \"hidden\"\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: 0\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n    grow: {\n        flexGrow: 1\n    },\n    badge: {\n        top: 1,\n        right: -15\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    sectionForFile: {\n        display: \"flex\"\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    addButton: {\n        marginLeft: \"40px\",\n        marginTop: \"25px\",\n        marginBottom: \"15px\"\n    },\n    fabButton: {\n        borderRadius: \"100px\"\n    },\n    badgeFix: {\n        right: \"10px\"\n    },\n    iconFix: {\n        marginLeft: \"16px\"\n    },\n    dividerFix: {\n        marginTop: \"8px\"\n    },\n    folderShareIcon: {\n        verticalAlign: \"sub\",\n        marginRight: \"5px\"\n    },\n    shareInfoContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        marginBottom: \"20px\",\n        marginLeft: \"28px\",\n        textDecoration: \"none\"\n    },\n    shareAvatar: {\n        width: \"40px\",\n        height: \"40px\"\n    },\n    stickFooter: {\n        bottom: \"0px\",\n        position: \"absolute\",\n        backgroundColor: theme.palette.background.paper,\n        width: \"100%\"\n    },\n    ownerInfo: {\n        marginLeft: \"10px\",\n        width: \"150px\"\n    },\n    minStickDrawer: {\n        overflowY: \"auto\",\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(100vh - 155px)\"\n        },\n\n        [theme.breakpoints.down(\"sm\")]: {\n            minHeight: \"calc(100vh - 324px)\"\n        }\n    }\n});\nclass NavbarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false\n        };\n        this.UploaderRef = React.createRef();\n    }\n\n    componentWillMount() {\n        this.unlisten = this.props.history.listen((location, action) => {\n            this.setState(state => ({ mobileOpen: false }));\n        });\n    }\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    componentDidMount = () => {\n        changeThemeColor(\n            this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)\n                ? this.props.theme.palette.primary.main\n                : this.props.theme.palette.background.default\n        );\n    };\n\n    componentWillReceiveProps = nextProps => {\n        if (\n            (this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)) !==\n            (nextProps.selected.length <= 1 &&\n                !(!nextProps.isMultiple && nextProps.withFile))\n        ) {\n            changeThemeColor(\n                !(\n                    this.props.selected.length <= 1 &&\n                    !(!this.props.isMultiple && this.props.withFile)\n                )\n                    ? this.props.theme.palette.type === \"dark\"\n                        ? this.props.theme.palette.background.default\n                        : this.props.theme.palette.primary.main\n                    : this.props.theme.palette.background.default\n            );\n        }\n    };\n\n    handleDrawerToggle = () => {\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    loadUploader = () => {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            return (\n                <>\n                    {this.props.loadUploader && this.props.isLogin && (\n                        <Uploader />\n                    )}\n                </>\n            );\n        }\n    };\n\n    openPreview = () => {\n        let isShare = pathHelper.isSharePage(this.props.location.pathname);\n        if (isShare) {\n            let user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                this.props.changeContextMenu(\"file\", false);\n                return;\n            }\n        }\n        this.props.changeContextMenu(\"file\", false);\n        let previewPath =\n            this.props.selected[0].path === \"/\"\n                ? this.props.selected[0].path + this.props.selected[0].name\n                : this.props.selected[0].path +\n                  \"/\" +\n                  this.props.selected[0].name;\n        switch (isPreviewable(this.props.selected[0].name)) {\n            case \"img\":\n                this.props.showImgPreivew(this.props.selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/doc?p=\" + encodeURIComponent(previewPath) + \"&id=\" + this.props.selected[0].id\n                );\n                return;\n            case \"audio\":\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/video?p=\" +encodeURIComponent(previewPath) + \"&id=\" + this.props.selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/text?p=\" + encodeURIComponent(previewPath) + \"&id=\" + this.props.selected[0].id\n                );\n                return;\n            default:\n                return;\n        }\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            return;\n        }\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    archiveDownload = () => {\n        this.props.openLoadingDialog(\"打包中...\");\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser(this.props.isLogin);\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        const drawer = (\n            <div id=\"container\" className={classes.upDrawer}>\n                {pathHelper.isMobile() && <UserInfo />}\n\n                {Auth.Check(this.props.isLogin) && (\n                    <>\n                        <div className={classes.minStickDrawer}>\n                            <FileTag />\n                            <List>\n                                <ListItem\n                                    button\n                                    key=\"我的分享\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/shares?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"我的分享\" />\n                                </ListItem>\n                                <ListItem\n                                    button\n                                    key=\"离线下载\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/aria2?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"离线下载\" />\n                                </ListItem>\n                                <ListItem\n                                    button\n                                    key=\"容量配额\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/quota?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <SdStorage\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"容量配额\" />\n                                </ListItem>\n                                {user.group.webdav && (\n                                    <ListItem\n                                        button\n                                        key=\"WebDAV\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Devices\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"WebDAV\" />\n                                    </ListItem>\n                                )}\n\n                                <ListItem\n                                    button\n                                    key=\"任务队列\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/tasks?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Assignment\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"任务队列\" />\n                                </ListItem>\n                            </List>\n                        </div>\n\n                        {pathHelper.isMobile() && (\n                            <>\n                                <Divider/>\n                                <List>\n                                    <ListItem\n                                        button\n                                        key=\"个人设置\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/setting?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Settings\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"个人设置\" />\n                                    </ListItem>\n                                </List>\n                            </>\n                        )}\n\n                        {!pathHelper.isSharePage(\n                            this.props.location.pathname\n                        ) && (\n                            <div>\n                                <StorageBar></StorageBar>\n                            </div>\n                        )}\n                    </>\n                )}\n\n                {!Auth.Check(this.props.isLogin) && (\n                    <div>\n                        <ListItem\n                            button\n                            key=\"登录\"\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight\n                                    className={classes.iconFix}\n                                />\n                            </ListItemIcon>\n                            <ListItemText primary=\"登录\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            key=\"注册\"\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"注册\" />\n                        </ListItem>\n                    </div>\n                )}\n                {/*{pathHelper.isSharePage(this.props.location.pathname) && (*/}\n                {/*    <div className={classes.stickFooter}>*/}\n                {/*        <Divider />*/}\n                {/*        <a*/}\n                {/*            className={classes.shareInfoContainer}*/}\n                {/*            href={\"/Profile/\" + window.shareInfo.ownerUid}*/}\n                {/*        >*/}\n                {/*            <Avatar*/}\n                {/*                src={*/}\n                {/*                    \"/Member/Avatar/\" +*/}\n                {/*                    window.shareInfo.ownerUid +*/}\n                {/*                    \"/l\"*/}\n                {/*                }*/}\n                {/*                className={classes.shareAvatar}*/}\n                {/*            />*/}\n                {/*            <div className={classes.ownerInfo}>*/}\n                {/*                <Typography noWrap>*/}\n                {/*                    {window.shareInfo.ownerNick}*/}\n                {/*                </Typography>*/}\n                {/*                <Typography*/}\n                {/*                    noWrap*/}\n                {/*                    variant=\"caption\"*/}\n                {/*                    color=\"textSecondary\"*/}\n                {/*                >*/}\n                {/*                    分享于{window.shareInfo.shareDate}*/}\n                {/*                </Typography>*/}\n                {/*            </div>*/}\n                {/*        </a>*/}\n                {/*    </div>*/}\n                {/*)}*/}\n            </div>\n        );\n        const iOS =\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    color={\n                        this.props.theme.palette.type !== \"dark\" &&\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                            ? \"primary\"\n                            : \"default\"\n                    }\n                >\n                    <Toolbar>\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"Open drawer\"\n                                    onClick={this.handleDrawerToggle}\n                                    className={classes.menuButton}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"Open drawer\"\n                                    onClick={() =>\n                                        this.props.handleDesktopToggle(\n                                            !this.props.desktopOpen\n                                        )\n                                    }\n                                    className={classes.menuButtonDesktop}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            (isHomePage ||\n                                pathHelper.isSharePage(\n                                    this.props.location.pathname\n                                )) && (\n                                <Grow\n                                    in={\n                                        this.props.selected.length > 1 ||\n                                        (!this.props.isMultiple &&\n                                            this.props.withFile)\n                                    }\n                                >\n                                    <IconButton\n                                        color=\"inherit\"\n                                        className={classes.menuIcon}\n                                        onClick={() =>\n                                            this.props.setSelectedTarget([])\n                                        }\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </Grow>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.subTitle\n                                        ? this.props.subTitle\n                                        : this.props.title}\n                                </Typography>\n                            )}\n\n                        {!this.props.isMultiple &&\n                            this.props.withFile &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected[0].name}{\" \"}\n                                    {(isHomePage ||\n                                        pathHelper.isSharePage(\n                                            this.props.location.pathname\n                                        )) &&\n                                        \"(\" +\n                                            sizeToString(\n                                                this.props.selected[0].size\n                                            ) +\n                                            \")\"}\n                                </Typography>\n                            )}\n\n                        {this.props.selected.length > 1 &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected.length}个对象\n                                </Typography>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && <SezrchBar />}\n                        <div className={classes.grow} />\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            !isHomePage &&\n                            !pathHelper.isSharePage(\n                                this.props.location.pathname\n                            ) &&\n                            Auth.Check(this.props.isLogin) &&\n                            !checkGetParameters(\"share\") && (\n                                <div className={classes.sectionForFile}>\n                                    <Tooltip title=\"保存\">\n                                        <IconButton\n                                            color=\"inherit\"\n                                            onClick={() =>\n                                                this.props.saveFile()\n                                            }\n                                        >\n                                            <SaveIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </div>\n                            )}\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            (isHomePage || isSharePage) && (\n                                <div className={classes.sectionForFile}>\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile\n                                        &&\n                                        isPreviewable(\n                                            this.props.selected[0].name\n                                        ) && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile &&\n                                                    isPreviewable(\n                                                        this.props.selected[0]\n                                                            .name\n                                                    )\n                                                }\n                                            >\n                                                <Tooltip title=\"打开\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openPreview()\n                                                        }\n                                                    >\n                                                        <OpenIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile\n                                                }\n                                            >\n                                                <Tooltip title=\"下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) &&\n                                        user.group.allowArchiveDownload && (\n                                            <Grow\n                                                in={\n                                                    (this.props.isMultiple ||\n                                                        this.props\n                                                            .withFolder) &&\n                                                    user.group\n                                                        .allowArchiveDownload\n                                                }\n                                            >\n                                                <Tooltip title=\"打包下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.archiveDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n\n                                    {!this.props.isMultiple &&\n                                        this.props.withFolder && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFolder\n                                                }\n                                            >\n                                                <Tooltip title=\"进入目录\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.navitateTo(\n                                                                this.props\n                                                                    .path ===\n                                                                    \"/\"\n                                                                    ? this.props\n                                                                          .path +\n                                                                          this\n                                                                              .props\n                                                                              .selected[0]\n                                                                              .name\n                                                                    : this.props\n                                                                          .path +\n                                                                          \"/\" +\n                                                                          this\n                                                                              .props\n                                                                              .selected[0]\n                                                                              .name\n                                                            )\n                                                        }\n                                                    >\n                                                        <OpenFolderIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip title=\"分享\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openShareDialog()\n                                                    }\n                                                >\n                                                    <ShareIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip title=\"重命名\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openRenameDialog()\n                                                    }\n                                                >\n                                                    <RenameIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!isSharePage && (\n                                        <div style={{ display: \"flex\" }}>\n                                            {!pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        !pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip title=\"移动\">\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.openMoveDialog()\n                                                            }\n                                                        >\n                                                            <MoveIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n\n                                            <Grow\n                                                in={\n                                                    this.props.selected\n                                                        .length !== 0\n                                                }\n                                            >\n                                                <Tooltip title=\"删除\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openRemoveDialog()\n                                                        }\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && <UserAvatar />}\n                    </Toolbar>\n                </AppBar>\n                {this.loadUploader()}\n\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        container={this.props.container}\n                        variant=\"temporary\"\n                        classes={{\n                            paper: classes.drawerPaper\n                        }}\n                        anchor=\"left\"\n                        open={this.state.mobileOpen}\n                        onClose={this.handleDrawerToggle}\n                        onOpen={() =>\n                            this.setState(state => ({ mobileOpen: true }))\n                        }\n                        disableDiscovery={iOS}\n                        ModalProps={{\n                            keepMounted: true // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classNames({\n                                [classes.drawerOpen]: this.props.desktopOpen,\n                                [classes.drawerClose]: !this.props.desktopOpen\n                            })\n                        }}\n                        className={classNames(classes.drawer, {\n                            [classes.drawerOpen]: this.props.desktopOpen,\n                            [classes.drawerClose]: !this.props.desktopOpen\n                        })}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={this.props.desktopOpen}\n                    >\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </div>\n        );\n    }\n}\nNavbarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired\n};\n\nconst Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTheme(withStyles(styles)(withRouter(NavbarCompoment))));\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { connect } from \"react-redux\";\nimport { searchMyFile } from \"../../actions\";\n\nimport {\n    withStyles,\n    InputBase,\n    Popper,\n    Fade,\n    Paper,\n    MenuItem,\n    ListItemIcon,\n    ListItemText,\n    Typography\n} from \"@material-ui/core\";\nimport {withRouter} from \"react-router\";\nimport pathHelper from \"../../untils/page\";\nimport {HotKeys,configure} from \"react-hotkeys\";\n\nconfigure({\n    ignoreTags:[],\n});\n\nconst mapStateToProps = state => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        searchMyFile: keywords => {\n            dispatch(searchMyFile(keywords));\n        }\n    };\n};\n\nconst styles = theme => ({\n    search: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        },\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25)\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(7.2),\n            width: \"auto\"\n        }\n    },\n    searchIcon: {\n        width: theme.spacing(9),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    inputRoot: {\n        color: \"inherit\",\n        width: \"100%\"\n    },\n    inputInput: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300\n            }\n        }\n    },\n    suggestBox: {\n        zIndex: \"9999\",\n        width: 364\n    }\n});\n\nconst keyMap = {\n    SEARCH: \"enter\",\n};\n\nclass SearchBarCompoment extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            input: \"\"\n        };\n    }\n\n    handlers={\n        SEARCH:(e)=>{\n            if(pathHelper.isHomePage(this.props.location.pathname)){\n                this.searchMyFile();\n            }else{\n                this.searchShare();\n            }\n            e.target.blur();\n        },\n    };\n\n    handleChange = event => {\n        const { currentTarget } = event;\n        this.input = event.target.value;\n        this.setState({\n            anchorEl: currentTarget,\n            input: event.target.value\n        });\n    };\n\n    cancelSuggest = () => {\n        this.setState({\n            input: \"\"\n        });\n    };\n\n    searchMyFile = () => {\n        this.props.searchMyFile(\"keywords/\"+this.input);\n    };\n\n    searchShare = () => {\n        this.props.history.push(\"/search?keywords=\"+encodeURIComponent(this.input));\n    };\n\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n                <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                    <HotKeys keyMap={keyMap} handlers={this.handlers}>\n                        <InputBase\n                            placeholder=\"搜索...\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput\n                            }}\n                            onChange={this.handleChange}\n                            onBlur={this.cancelSuggest}\n                            value={this.state.input}\n                        />\n                    </HotKeys>\n                <Popper\n                    id={id}\n                    open={this.state.input !== \"\"}\n                    anchorEl={anchorEl}\n                    className={classes.suggestBox}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper square={true}>\n                                {isHomePage && (\n                                    <MenuItem onClick={this.searchMyFile}>\n                                        <ListItemIcon className={classes.icon}>\n                                            <FileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            classes={{\n                                                primary: classes.primary\n                                            }}\n                                            primary={\n                                                <Typography noWrap>\n                                                    在我的文件中搜索{\" \"}\n                                                    <strong>\n                                                        {this.state.input}\n                                                    </strong>\n                                                </Typography>\n                                            }\n                                        />\n                                    </MenuItem>\n                                )}\n\n                                <MenuItem onClick={this.searchShare}>\n                                    <ListItemIcon className={classes.icon}>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        classes={{ primary: classes.primary }}\n                                        primary={\n                                            <Typography noWrap>\n                                                在全站分享中搜索{\" \"}\n                                                <strong>\n                                                    {this.state.input}\n                                                </strong>\n                                            </Typography>\n                                        }\n                                    />\n                                </MenuItem>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </div>\n        );\n    }\n}\n\nSearchBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst SearchBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SearchBarCompoment)));\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { sizeToString } from \"../../untils\";\nimport { toggleSnackbar } from \"../../actions\";\n\nimport {\n    withStyles,\n    LinearProgress,\n    Typography,\n    Divider,\n    Tooltip\n} from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Link from \"@material-ui/core/Link\";\nimport { withRouter } from \"react-router\";\n\nconst mapStateToProps = state => {\n    return {\n        refresh: state.viewUpdate.storageRefresh,\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nconst styles = theme => ({\n    iconFix: {\n        marginLeft: \"32px\",\n        marginRight: \"17px\",\n        color: theme.palette.text.secondary,\n        marginTop: \"2px\"\n    },\n    textFix: {\n        padding: \" 0 0 0 16px\"\n    },\n    storageContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        textAlign: \"left\",\n        marginBottom: \"20px\"\n    },\n    detail: {\n        width: \"100%\",\n        marginRight: \"35px\"\n    },\n    info: {\n        width: \"131px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"162px\"\n        },\n        marginTop: \"5px\"\n    },\n    bar: {\n        marginTop: \"5px\"\n    },\n    stickFooter: {\n        backgroundColor: theme.palette.background.paper\n    }\n});\n\nclass StorageBarCompoment extends Component {\n    state = {\n        percent: 0,\n        used: null,\n        total: null,\n        showExpand: false\n    };\n\n    firstLoad = true;\n\n    componentDidMount = () => {\n        if (this.firstLoad && this.props.isLogin) {\n            this.firstLoad = !this.firstLoad;\n            this.updateStatus();\n        }\n    };\n\n    componentWillUnmount() {\n        this.firstLoad = false;\n    }\n\n    componentWillReceiveProps = nextProps => {\n        if (\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\n        ) {\n            this.updateStatus();\n        }\n    };\n\n    updateStatus = () => {\n        let percent = 0;\n        API.get(\"/user/storage\")\n            .then(response => {\n                if (response.data.used / response.data.total >= 1) {\n                    percent = 100;\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"您的已用容量已超过容量配额，请尽快删除多余文件或购买容量\",\n                        \"warning\"\n                    );\n                } else {\n                    percent = (response.data.used / response.data.total) * 100;\n                }\n                this.setState({\n                    percent: percent,\n                    used: sizeToString(response.data.used),\n                    total: sizeToString(response.data.total)\n                });\n            })\n            .catch(error => {});\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div\n                onMouseEnter={() => this.setState({ showExpand: true })}\n                onMouseLeave={() => this.setState({ showExpand: false })}\n                className={classes.stickFooter}\n            >\n                <Divider />\n                <ButtonBase onClick={() => this.props.history.push(\"/quota?\")}>\n                    <div className={classes.storageContainer}>\n                        <StorageIcon className={classes.iconFix} />\n                        <div className={classes.detail}>\n                            存储空间{\"   \"}\n                            {this.state.showExpand && (\n                                <Link href={\"/#/buy\"} color={\"secondary\"}>\n                                    扩容\n                                </Link>\n                            )}\n                            <LinearProgress\n                                className={classes.bar}\n                                color=\"secondary\"\n                                variant=\"determinate\"\n                                value={this.state.percent}\n                            />\n                            <div className={classes.info}>\n                                <Tooltip\n                                    title={\n                                        \"已使用\" +\n                                        (this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used) +\n                                        \"，共\" +\n                                        (this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total)\n                                    }\n                                    placement=\"top\"\n                                >\n                                    <Typography\n                                        variant=\"caption\"\n                                        noWrap\n                                        color=\"textSecondary\"\n                                    >\n                                        已使用\n                                        {this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used}\n                                        ，共\n                                        {this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total}\n                                    </Typography>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nStorageBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst StorageBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(StorageBarCompoment)));\n\nexport default StorageBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setUserPopover } from \"../../actions\";\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\"\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst mapStateToProps = state => {\n    return {\n        isLogin:state.viewUpdate.isLogin,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        }\n    };\n};\n\nconst styles = theme => ({\n    userNav: {\n        height: \"170px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\"\n    },\n    avatar: {\n        display: \"block\",\n        width: \"70px\",\n        height: \"70px\",\n        border: \" 2px solid #fff\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow: \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\"\n    },\n    avatarImg: {\n        width: \"66px\",\n        height: \"66px\"\n    },\n    nickName: {\n        color: \"#fff\",\n        marginLeft: \"10px\",\n        marginTop: \"15px\",\n        fontSize: \"17px\"\n    },\n    flexAvatar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"end\",\n    },\n    groupName: {\n        marginLeft: \"10px\",\n        color: \"#ffffff\",\n        opacity: \"0.54\",\n    },\n    storageCircle: {\n        width: \"200px\"\n    }\n});\n\nclass UserInfoCompoment extends Component {\n    showUserInfo = e => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isLogin = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n\n        return (\n            <div className={classes.userNav}>\n                <div className={classes.flexAvatar}>\n                    { /* eslint-disable-next-line */}\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\n                        {isLogin && (\n                            <Avatar\n                                src={\n                                    \"/api/v3/user/avatar/\"+user.id + \"/l\"\n                                }\n                                className={classes.avatarImg}\n                            />\n                        )}\n                        {!isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/0/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                    </a>\n                    <DarkModeSwitcher position=\"left\"/>\n                </div>\n                <div className={classes.storageCircle}>\n                    <Typography\n                        className={classes.nickName}\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {isLogin?user.nickname:\"未登录\"}\n                    </Typography>\n                    <Typography\n                        className={classes.groupName}\n                        component=\"h2\"\n                        color=\"textSecondary\"\n                        noWrap\n                    >\n                        {isLogin?user.group.name:\"游客\"}\n                    </Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserInfoCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserInfo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(UserInfoCompoment));\n\nexport default UserInfo;\n","import React, {useCallback, useState, Suspense} from \"react\";\nimport {\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    withStyles\n} from \"@material-ui/core\";\nimport { Clear, KeyboardArrowRight} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport FolderShared from \"@material-ui/icons/FolderShared\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { useHistory, useLocation } from \"react-router\";\nimport pathHelper from \"../../untils/page\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { navitateTo, searchMyFile, toggleSnackbar } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Circle,\n    CircleOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    Triangle,\n    TriangleOutline,\n    FolderHeartOutline,\n    TagPlus\n} from \"mdi-material-ui\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport API from \"../../middleware/Api\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": { margin: 0 }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    expand: {\n        display: \"none\",\n        transition: \".15s all ease-in-out\"\n    },\n    expanded: {\n        display: \"block\",\n        transform: \"rotate(90deg)\"\n    },\n    iconFix: {\n        marginLeft: \"16px\"\n    },\n    hiddenButton: {\n        display: \"none\"\n    },\n    subMenu: {\n        marginLeft: theme.spacing(2)\n    },\n    overFlow:{\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n    }\n\n}));\n\nconst icons = {\n    Circle: Circle,\n    CircleOutline: CircleOutline,\n    Heart: Heart,\n    HeartOutline: HeartOutline,\n    Hexagon: Hexagon,\n    HexagonOutline: HexagonOutline,\n    Hexagram: Hexagram,\n    HexagramOutline: HexagramOutline,\n    Rhombus: Rhombus,\n    RhombusOutline: RhombusOutline,\n    Square: Square,\n    SquareOutline: SquareOutline,\n    Triangle: Triangle,\n    TriangleOutline: TriangleOutline,\n    FolderHeartOutline: FolderHeartOutline\n};\n\nconst AddTag = React.lazy(() => import (\"../Modals/AddTag\" ));\n\nexport default function FileTag(props) {\n    const classes = useStyles();\n\n    let location = useLocation();\n    let history = useHistory();\n\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const [tagOpen, setTagOpen] = useState(true);\n    const [addTagModal,setAddTagModal] = useState(false);\n    const [tagHover,setTagHover] = useState(null);\n    const [tags,setTags] = useState(Auth.GetUser().tags?Auth.GetUser().tags:[]);\n\n    const dispatch = useDispatch();\n    const SearchMyFile = useCallback(k => dispatch(searchMyFile(k)), [\n        dispatch\n    ]);\n    const NavigateTo = useCallback(k => dispatch(navitateTo(k)), [dispatch]);\n    const isLogin = useSelector(state => state.viewUpdate.isLogin);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    const getIcon = (icon, color) => {\n        if (icons[icon]) {\n            let IconComponent = icons[icon];\n            return (\n                <IconComponent\n                    className={[classes.iconFix]}\n                    style={\n                        color\n                            ? {\n                                  color: color\n                              }\n                            : {}\n                    }\n                />\n            );\n        }\n        return <Circle className={[classes.iconFix]} />;\n    };\n\n    const submitSuccess = tag =>{\n        let newTags = [...tags,tag];\n        setTags(newTags);\n        let user = Auth.GetUser();\n        user.tags = newTags;\n        Auth.SetUser(user);\n    };\n\n    const submitDelete = id =>{\n        API.delete(\"/tag/\"+id)\n            .then(response => {\n                let newTags = tags.filter((v)=>{return v.id !== id});\n                setTags(newTags)\n                let user = Auth.GetUser();\n                user.tags = newTags;\n                Auth.SetUser(user);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <>\n            <Suspense fallback={\"\"}>\n                <AddTag onSuccess={submitSuccess} open={addTagModal} onClose={()=>setAddTagModal(false)}/>\n            </Suspense>\n        <ExpansionPanel\n            square\n            expanded={tagOpen && isHomePage}\n            onChange={() => isHomePage && setTagOpen(!tagOpen)}\n        >\n            <ExpansionPanelSummary\n                aria-controls=\"panel1d-content\"\n                id=\"panel1d-header\"\n            >\n                <ListItem\n                    button\n                    key=\"我的文件\"\n                    onClick={() =>\n                        !isHomePage && history.push(\"/home?path=%2F\")\n                    }\n                >\n                    <ListItemIcon>\n                        <KeyboardArrowRight\n                            className={classNames(\n                                {\n                                    [classes.expanded]: tagOpen && isHomePage,\n                                    [classes.iconFix]: true\n                                },\n                                classes.expand\n                            )}\n                        />\n                        {!(tagOpen && isHomePage) && (\n                            <FolderShared className={classes.iconFix} />\n                        )}\n                    </ListItemIcon>\n                    <ListItemText primary=\"我的文件\" />\n                </ListItem>\n                <Divider />\n            </ExpansionPanelSummary>\n\n            <ExpansionPanelDetails>\n                <List onMouseLeave={()=>setTagHover(null)}>\n                    <ListItem\n                        button\n                        id=\"pickfiles\"\n                        className={classes.hiddenButton}\n                    >\n                        <ListItemIcon>\n                            <UploadIcon />\n                        </ListItemIcon>\n                        <ListItemText />\n                    </ListItem>\n                    <ListItem\n                        button\n                        id=\"pickfolder\"\n                        className={classes.hiddenButton}\n                    >\n                        <ListItemIcon>\n                            <UploadIcon />\n                        </ListItemIcon>\n                        <ListItemText />\n                    </ListItem>\n                    {[\n                        {\n                            key: \"视频\",\n                            id: \"video\",\n                            icon: (\n                                <VideoIcon\n                                    className={[\n                                        classes.iconFix,\n                                        classes.iconVideo\n                                    ]}\n                                />\n                            )\n                        },\n                        {\n                            key: \"图片\",\n                            id: \"image\",\n                            icon: (\n                                <ImageIcon\n                                    className={[\n                                        classes.iconFix,\n                                        classes.iconImg\n                                    ]}\n                                />\n                            )\n                        },\n                        {\n                            key: \"音频\",\n                            id: \"audio\",\n                            icon: (\n                                <MusicIcon\n                                    className={[\n                                        classes.iconFix,\n                                        classes.iconAudio\n                                    ]}\n                                />\n                            )\n                        },\n                        {\n                            key: \"文档\",\n                            id: \"doc\",\n                            icon: (\n                                <DocIcon\n                                    className={[\n                                        classes.iconFix,\n                                        classes.iconDoc\n                                    ]}\n                                />\n                            )\n                        }\n                    ].map(v => (\n                        <ListItem\n                            button\n                            key={v.key}\n                            onClick={() => SearchMyFile(v.id + \"/internal\")}\n                        >\n                            <ListItemIcon className={classes.subMenu}>\n                                {v.icon}\n                            </ListItemIcon>\n                            <ListItemText primary={v.key} />\n                        </ListItem>\n                    ))}\n                    {tags.map(v => (\n                            <ListItem\n                                button\n                                key={v.id}\n                                onMouseEnter={()=>setTagHover(v.id)}\n                                onClick={() => {\n                                    if (v.type === 0) {\n                                        SearchMyFile(\"tag/\" + v.id);\n                                    } else {\n                                        NavigateTo(v.expression);\n                                    }\n                                }}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {getIcon(\n                                        v.type === 0\n                                            ? v.icon\n                                            : \"FolderHeartOutline\",\n                                        v.type === 0 ? v.color : null\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText className={classes.overFlow} primary={v.name} />\n\n                                {tagHover === v.id && <ListItemSecondaryAction onClick={()=>submitDelete(v.id)}>\n                                        <IconButton size={\"small\"} edge=\"end\" aria-label=\"delete\">\n                                            <Clear />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>}\n                            </ListItem>\n                        ))}\n\n                    <ListItem button onClick={()=>setAddTagModal(true)}>\n                        <ListItemIcon className={classes.subMenu}>\n                            <TagPlus className={classes.iconFix} />\n                        </ListItemIcon>\n                        <ListItemText primary={\"添加标签...\"} />\n                    </ListItem>\n                </List>{\" \"}\n                <Divider />\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n            </>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../untils/page\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\"\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n}));\n\nexport default function SaveButton(props) {\n    const classes = useStyles();\n    const buttonClassname = clsx({\n        [classes.buttonSuccess]: props.status===\"success\",\n    });\n\n    return (\n        <AutoHidden enable={statusHelper.isMobile()}>\n            <div className={classes.fab}>\n                <div className={classes.wrapper}>\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\n                        <Fab\n                            onClick={props.onClick}\n                            color=\"primary\"\n                            className={buttonClassname}\n                            disabled={props.status === \"loading\"}\n                            aria-label=\"add\"\n                        >\n                            {props.status===\"success\" ? <CheckIcon /> : <SaveIcon />}\n                        </Fab>\n                    </Tooltip>\n                    {props.status === \"loading\"&&<CircularProgress\n                        size={68}\n                        className={classes.fabProgress}\n                    />}\n\n                </div>\n            </div>\n        </AutoHidden>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { sizeToString } from \"../../untils/index\";\nimport { withStyles, TableCell, TableRow, Typography } from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport {lighten} from \"@material-ui/core/styles\";\nimport pathHelper from \"../../untils/page\";\nimport {withRouter} from \"react-router\";\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\n\nconst styles = theme => ({\n    selected: {\n        \"&:hover\": {},\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : lighten(theme.palette.primary.main,0.8),\n    },\n\n    selectedShared: {\n        \"&:hover\": {},\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? lighten(theme.palette.background.paper,0.15)\n                : lighten(theme.palette.primary.main,0.8),\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n        }\n    },\n    icon: {\n        verticalAlign: \"middle\",\n        marginRight: \"20px\",\n        color: theme.palette.text.secondary\n    },\n    tableIcon:{\n        marginRight: \"20px\",\n        verticalAlign: \"middle\",\n    },\n    folderNameSelected: {\n        color: theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n        userSelect: \"none\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n        userSelect: \"none\"\n    },\n    folderName: {\n        marginRight: \"20px\",\n        display: \"flex\",\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    tableRow: {\n        padding: \"10px 16px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {};\n};\n\nclass TableRowCompoment extends Component {\n    state = {};\n\n    render() {\n        const { classes } = this.props;\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n\n        let icon;\n        if (this.props.file.type === \"dir\") {\n            icon = <FolderIcon className={classes.icon} />;\n        }else if (this.props.file.type === \"up\"){\n            icon = <KeyboardReturnIcon className={classes.icon}/>\n        } else {\n           icon = <TypeIcon className={classes.tableIcon} fileName={this.props.file.name}/>\n        }\n\n        const isSelected =\n            this.props.selected.findIndex(value => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <TableRow\n                onContextMenu={this.props.contextMenu}\n                onClick={this.props.handleClick}\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\n                className={classNames(\n                    {\n                        [classes.selected]: isSelected&&!isShare,\n                        [classes.selectedShared]: isSelected&&isShare,\n                        [classes.notSelected]: !isSelected\n                    }\n                )}\n            >\n                <TableCell component=\"th\" scope=\"row\" className={classes.tableRow}>\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {icon}\n                        {this.props.file.name}\n                    </Typography>\n                </TableCell>\n                <TableCell className={classNames(classes.hideAuto,classes.tableRow)}>\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.type !== \"dir\" &&this.props.file.type !== \"up\"&&\n                            sizeToString(this.props.file.size)}\n                    </Typography>\n                </TableCell>\n                <TableCell className={classNames(classes.hideAuto,classes.tableRow)}>\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.date}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nTableRowCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nconst TableItem = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(TableRowCompoment)));\n\nexport default TableItem;\n","import React  from \"react\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { ButtonBase, Typography, Tooltip, makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport {lighten} from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: \"7px\"\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor: theme.palette.background.paper\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\"\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary,\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : theme.palette.primary.dark,\n        fontWeight: \"500\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\"\n    },\n    active:{\n        border: \"2px solid \" + theme.palette.primary.light,\n    },\n}));\n\nexport default function Folder({ folder,isActive }) {\n    const selected = useSelector(state => state.explorer.selected);\n\n    const classes = useStyles();\n\n    const isSelected =\n        selected.findIndex(value => {\n            return value === folder;\n        }) !== -1;\n\n    return (\n        <ButtonBase\n            focusRipple\n            className={classNames(\n                {\n                    [classes.selected]: isSelected,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: isActive,\n                },\n                classes.button,\n            )}\n        >\n            <div\n                className={classNames(classes.icon, {\n                    [classes.iconSelected]: isSelected,\n                    [classes.iconNotSelected]: !isSelected\n                })}\n            >\n                <FolderIcon />\n            </div>\n            <Tooltip title={folder.name} aria-label={folder.name}>\n                <Typography\n                    variant=\"body2\"\n                    className={classNames(classes.folderName, {\n                        [classes.folderNameSelected]: isSelected,\n                        [classes.folderNameNotSelected]: !isSelected\n                    })}\n                >\n                    {folder.name}\n                </Typography>\n            </Tooltip>\n        </ButtonBase>\n    );\n}\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport Folder from \"../Folder\"\nexport default function FolderDropWarpper({ folder}) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => ({ folder }),\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: (monitor.canDrop())\n        })\n    });\n    const isActive = canDrop && isOver;\n    return (\n        <div ref={drop}>\n        <Folder folder={folder} isActive={isActive}/></div>\n    );\n}\n  ","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    changeContextMenu,\n    setSelectedTarget,\n    addSelectedTarget,\n    removeSelectedTarget,\n    navitateTo,\n    showImgPreivew,\n    openMusicDialog,\n    toggleSnackbar,\n    dragAndDrop,\n    openLoadingDialog\n} from \"../../actions/index\";\nimport statusHelper from \"../../untils/page\";\nimport FileIcon from \"./FileIcon\";\nimport SmallIcon from \"./SmallIcon\";\nimport TableItem from \"./TableRow\";\nimport classNames from \"classnames\";\nimport { isPreviewable } from \"../../config\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport DropWarpper from \"./DnD/DropWarpper\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport { pathBack } from \"../../untils\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: \"7px\"\n    },\n    fixFlex: {\n        minWidth: 0\n    },\n    dragging: {\n        opacity: 0.4\n    }\n}));\n\nexport default function ObjectIcon(props) {\n    const path = useSelector(state => state.navigator.path);\n    const selected = useSelector(state => state.explorer.selected);\n    const viewMethod = useSelector(\n        state => state.viewUpdate.explorerViewMethod\n    );\n    const navigatorPath = useSelector(state => state.navigator.path);\n    let location = useLocation();\n    let history = useHistory();\n\n    const dispatch = useDispatch();\n    const ContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const SetSelectedTarget = useCallback(\n        targets => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n    const AddSelectedTarget = useCallback(\n        targets => dispatch(addSelectedTarget(targets)),\n        [dispatch]\n    );\n    const RemoveSelectedTarget = useCallback(\n        id => dispatch(removeSelectedTarget(id)),\n        [dispatch]\n    );\n    const NavitateTo = useCallback(targets => dispatch(navitateTo(targets)), [\n        dispatch\n    ]);\n    const ShowImgPreivew = useCallback(\n        targets => dispatch(showImgPreivew(targets)),\n        [dispatch]\n    );\n    const OpenMusicDialog = useCallback(() => dispatch(openMusicDialog()), [\n        dispatch\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const DragAndDrop = useCallback(\n        (source, target) => dispatch(dragAndDrop(source, target)),\n        [dispatch]\n    );\n    const OpenLoadingDialog = useCallback(\n        text => dispatch(openLoadingDialog(text)),\n        [dispatch]\n    );\n\n    const classes = useStyles();\n\n    const contextMenu = e => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        e.preventDefault();\n        if (\n            selected.findIndex(value => {\n                return value === props.file;\n            }) === -1\n        ) {\n            SetSelectedTarget([props.file]);\n        }\n        ContextMenu(\"file\", true);\n    };\n\n    const selectFile = e => {\n        let presentIndex = selected.findIndex(value => {\n            return value === props.file;\n        });\n        if (presentIndex !== -1 && e.ctrlKey) {\n            RemoveSelectedTarget(presentIndex);\n        } else {\n            if (e.ctrlKey) {\n                AddSelectedTarget(props.file);\n            } else {\n                SetSelectedTarget([props.file]);\n            }\n        }\n    };\n\n    const handleClick = e => {\n        if (props.file.type === \"up\") {\n            NavitateTo(pathBack(navigatorPath));\n        }\n        if (\n            statusHelper.isMobile() ||\n            statusHelper.isSharePage(location.pathname)\n        ) {\n            selectFile(e);\n            if (props.file.type === \"dir\" && !e.ctrlKey) {\n                enterFolder();\n                return;\n            }\n        } else {\n            selectFile(e);\n        }\n    };\n\n    const handleDoubleClick = () => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        if (props.file.type === \"dir\") {\n            enterFolder();\n            return;\n        }\n        let isShare = statusHelper.isSharePage(location.pathname);\n        if (isShare) {\n            let user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                ToggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\");\n                return;\n            }\n        }\n        if (window.shareInfo && !window.shareInfo.preview) {\n            OpenLoadingDialog(\"获取下载地址...\");\n            return;\n        }\n        let previewPath =\n            selected[0].path === \"/\"\n                ? selected[0].path + selected[0].name\n                : selected[0].path + \"/\" + selected[0].name;\n        switch (isPreviewable(selected[0].name)) {\n            case \"img\":\n                ShowImgPreivew(selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/doc?p=\" +\n                    encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"audio\":\n                OpenMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/video?p=\" +\n                    encodeURIComponent(previewPath) +\n                    \"&id=\" +\n                    selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\"/text?p=\" + encodeURIComponent(previewPath) + \"&id=\" + selected[0].id);\n                return;\n            default:\n                OpenLoadingDialog(\"获取下载地址...\");\n                return;\n        }\n    };\n\n    const enterFolder = () => {\n        NavitateTo(\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\n        );\n    };\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            object: props.file,\n            type: \"object\",\n            selected: [...selected],\n            viewMethod: viewMethod\n        },\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                if (dropResult.folder) {\n                    if (\n                        item.object.id !== dropResult.folder.id ||\n                        item.object.type !== dropResult.folder.type\n                    ) {\n                        DragAndDrop(item.object, dropResult.folder);\n                    }\n                }\n            }\n        },\n        canDrag: () => {\n            return (\n                !statusHelper.isMobile() &&\n                statusHelper.isHomePage(location.pathname)\n            );\n        },\n        collect: monitor => ({\n            isDragging: monitor.isDragging()\n        })\n    });\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n        // eslint-disable-next-line\n    }, []);\n\n    if (viewMethod === \"list\") {\n        return (\n            <TableItem\n                contextMenu={contextMenu}\n                handleClick={handleClick}\n                handleDoubleClick={handleDoubleClick.bind(this)}\n                file={props.file}\n            />\n        );\n    }\n\n    return (\n        <div\n            ref={drag}\n            className={classNames({\n                [classes.container]: viewMethod !== \"list\",\n                [classes.dragging]: isDragging\n            })}\n        >\n            <div\n                className={classes.fixFlex}\n                onContextMenu={contextMenu}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick.bind(this)}\n            >\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\n                    <DropWarpper folder={props.file} />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\n                    <FileIcon ref={drag} file={props.file} />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\n                    <SmallIcon file={props.file} />\n                )}\n            </div>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    changeContextMenu,\n    setNavigatorLoadingStatus,\n    navitateTo,\n    openCreateFolderDialog,\n    openRenameDialog,\n    openMoveDialog,\n    openRemoveDialog,\n    openShareDialog,\n    showImgPreivew,\n    openMusicDialog,\n    toggleSnackbar,\n    openRemoteDownloadDialog,\n    openTorrentDownloadDialog,\n    openGetSourceDialog,\n    openCopyDialog,\n    openLoadingDialog,\n    setSelectedTarget,\n    openDecompressDialog\n} from \"../../actions/index\";\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\nimport { allowSharePreview } from \"../../untils/index\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport { MagnetOn } from \"mdi-material-ui\";\nimport {\n    withStyles,\n    Typography,\n    MenuItem,\n    Divider,\n    ListItemIcon\n} from \"@material-ui/core\";\nimport pathHelper from \"../../untils/page\";\nimport { withRouter } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport { Archive, Unarchive } from \"@material-ui/icons\";\nimport { openCompressDialog } from \"../../actions\";\nimport Menu from \"@material-ui/core/Menu\";\nimport {FolderUpload} from \"mdi-material-ui\";\n\nconst styles = theme => ({\n    propover: {\n        minWidth: \"200px!important\"\n    },\n    divider:{\n        marginTop:4,\n        marginBottom:4,\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        menuType: state.viewUpdate.contextType,\n        menuOpen: state.viewUpdate.contextOpen,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        keywords: state.explorer.keywords,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        setNavigatorLoadingStatus: status => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navitateTo: path => {\n            dispatch(navitateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRemoteDownloadDialog: () => {\n            dispatch(openRemoteDownloadDialog());\n        },\n        openTorrentDownloadDialog: () => {\n            dispatch(openTorrentDownloadDialog());\n        },\n        openGetSourceDialog: () => {\n            dispatch(openGetSourceDialog());\n        },\n        openCopyDialog: () => {\n            dispatch(openCopyDialog());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        },\n        openDecompressDialog: () => {\n            dispatch(openDecompressDialog());\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        }\n    };\n};\n\nclass ContextMenuCompoment extends Component {\n    X = 0;\n    Y = 0;\n\n    state = {};\n\n    componentDidMount = () => {\n        window.document.addEventListener(\"mousemove\", this.setPoint);\n    };\n\n    setPoint = e => {\n        this.Y = e.clientY;\n        this.X = e.clientX;\n    };\n\n    openArchiveDownload = () => {\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"打包中...\");\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            this.props.changeContextMenu(\"file\", false);\n            return;\n        }\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    enterFolder = () => {\n        this.props.navitateTo(\n            this.props.path === \"/\"\n                ? this.props.path + this.props.selected[0].name\n                : this.props.path + \"/\" + this.props.selected[0].name\n        );\n    };\n\n    clickUpload = id => {\n        this.props.changeContextMenu(\"empty\", false);\n        let uploadButton = document.getElementsByClassName(id)[0];\n        if (document.body.contains(uploadButton)) {\n            uploadButton.click();\n        } else {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"上传组件还未加载完成\",\n                \"warning\"\n            );\n        }\n    };\n\n    openPreview = () => {\n        let isShare = pathHelper.isSharePage(this.props.location.pathname);\n        if (isShare) {\n            let user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                this.props.changeContextMenu(\"file\", false);\n                return;\n            }\n        }\n        this.props.changeContextMenu(\"file\", false);\n        let previewPath =\n            this.props.selected[0].path === \"/\"\n                ? this.props.selected[0].path + this.props.selected[0].name\n                : this.props.selected[0].path +\n                  \"/\" +\n                  this.props.selected[0].name;\n        switch (isPreviewable(this.props.selected[0].name)) {\n            case \"img\":\n                this.props.showImgPreivew(this.props.selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/doc?p=\" + encodeURIComponent(previewPath) + \"&id=\" + this.props.selected[0].id\n                );\n                return;\n            case \"audio\":\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/video?p=\" + encodeURIComponent(previewPath) + \"&id=\" + this.props.selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/text?p=\" + encodeURIComponent(previewPath) + \"&id=\" + this.props.selected[0].id\n                );\n                return;\n            default:\n                return;\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div>\n                <Menu\n                    keepMounted\n                    open={this.props.menuOpen}\n                    onClose={() =>\n                        this.props.changeContextMenu(this.props.menuType, false)\n                    }\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: this.Y, left: this.X }}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                    }}\n                >\n                    {this.props.menuType === \"empty\" && (\n                        <>\n                            <MenuItem onClick={()=>this.clickUpload(\"uploadFileForm\")}>\n                                <ListItemIcon>\n                                    <UploadIcon />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传文件\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem onClick={()=>this.clickUpload(\"uploadFolderForm\")}>\n                                <ListItemIcon>\n                                    <FolderUpload />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传目录\n                                </Typography>\n                            </MenuItem>\n                            {user.group.allowRemoteDownload && (\n                                <MenuItem\n                                    onClick={() =>\n                                        this.props.openRemoteDownloadDialog()\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        离线下载\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            <Divider className={classes.divider}/>\n                            <MenuItem\n                                onClick={() =>\n                                    this.props.openCreateFolderDialog()\n                                }\n                            >\n                                <ListItemIcon>\n                                    <NewFolderIcon />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件夹\n                                </Typography>\n                            </MenuItem>\n                        </>\n                    )}\n                    {this.props.menuType !== \"empty\" && (\n                        <>\n                            {!this.props.isMultiple && this.props.withFolder && (\n                                <>\n                                    <MenuItem onClick={this.enterFolder}>\n                                        <ListItemIcon>\n                                            <OpenFolderIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            进入\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && <Divider className={classes.divider} />}\n                                </>\n                            )}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                (!this.props.share ||\n                                    this.props.share.preview) &&\n                                isPreviewable(this.props.selected[0].name) && (\n                                    <>\n                                        <MenuItem\n                                            onClick={() => this.openPreview()}\n                                        >\n                                            <ListItemIcon>\n                                                <OpenIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                打开\n                                            </Typography>\n                                        </MenuItem>\n                                    </>\n                                )}\n\n                            {!this.props.isMultiple && this.props.withFile && (\n                                <>\n                                    <MenuItem\n                                        onClick={() => this.openDownload()}\n                                    >\n                                        <ListItemIcon>\n                                            <DownloadIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            下载\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && <Divider className={classes.divider} />}\n                                </>\n                            )}\n\n                            {(this.props.isMultiple || this.props.withFolder) &&\n                                (user.group.allowArchiveDownload ||\n                                    !isHomePage) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.openArchiveDownload()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <DownloadIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            打包下载\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                isHomePage &&\n                                user.policy.allowSource && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openGetSourceDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            获取外链\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.allowRemoteDownload &&\n                                this.props.withFile &&\n                                isTorrent(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openTorrentDownloadDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <MagnetOn />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            创建离线下载任务\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.compress &&\n                                this.props.withFile &&\n                                isCompressFile(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openDecompressDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Unarchive />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            解压缩\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {isHomePage && user.group.compress && (\n                                <MenuItem\n                                    onClick={() =>\n                                        this.props.openCompressDialog()\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Archive />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建压缩文件\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    onClick={() => this.props.openShareDialog()}\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建分享链接\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <>\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openRenameDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <RenameIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            重命名\n                                        </Typography>\n                                    </MenuItem>\n                                    {this.props.keywords === null &&\n                                        <MenuItem\n                                            onClick={() =>\n                                                this.props.openCopyDialog()\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <FileCopyIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                复制\n                                            </Typography>\n                                        </MenuItem>\n                                    }\n\n                                </>\n                            )}\n                            {isHomePage && (\n                                <div>\n                                    {this.props.keywords === null &&\n                                        <MenuItem\n                                            onClick={() =>\n                                                this.props.openMoveDialog()\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <MoveIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                移动\n                                            </Typography>\n                                        </MenuItem>\n                                    }\n\n                                    <Divider className={classes.divider} />\n                                    <MenuItem\n                                        className={classes.propover}\n                                        onClick={() =>\n                                            this.props.openRemoveDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <DeleteIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            删除\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </>\n                    )}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nContextMenuCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    menuType: PropTypes.string.isRequired\n};\n\nconst ContextMenu = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ContextMenuCompoment)));\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    navitateTo,\n    changeContextMenu,\n    navitateUp,\n    setSelectedTarget,\n    openRemoveDialog,\n    changeSortMethod, refreshFileList\n} from \"../../actions/index\";\nimport ObjectIcon from \"./ObjectIcon\";\nimport ContextMenu from \"./ContextMenu\";\nimport EmptyIcon from \"@material-ui/icons/Unarchive\";\nimport SadIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport classNames from \"classnames\";\nimport ImgPreivew from \"./ImgPreview\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport pathHelper from \"../../untils/page\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    withStyles,\n    Typography,\n    Grid,\n    CircularProgress,\n    Paper,\n    Button\n} from \"@material-ui/core\";\nimport { GlobalHotKeys } from \"react-hotkeys\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        margin: \"10px\"\n    },\n    root: {\n        flexGrow: 1,\n        padding: \"10px\",\n        overflowY: \"auto\",\n        height: \"calc(100vh - 113px)\",\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\"\n        }\n    },\n    rootTable: {\n        padding: \"0px\",\n        backgroundColor: theme.palette.background.paper.white,\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\"\n        }\n    },\n    typeHeader: {\n        margin: \"10px 25px\",\n        color: \"#6b6b6b\",\n        fontWeight: \"500\"\n    },\n    loading: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginTop: \"40px\"\n    },\n    errorBox: {\n        padding: theme.spacing(4)\n    },\n    errorMsg: {\n        marginTop: \"10px\"\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: theme.palette.text.disabled,\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    emptyIcon: {\n        fontSize: \"160px\"\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: theme.palette.text.disabled\n    },\n    emptyInfoSmall: {\n        color: theme.palette.text.hint\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    flexFix: {\n        minWidth: 0\n    },\n    upButton: {\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\"\n    },\n    clickAway: {\n        height: \"100%\",\n        width: \"100%\"\n    },\n    rootShare: {\n        height: \"100%\",\n        minHeight: 500\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        sortMethod: state.viewUpdate.sortMethod,\n        fileList: state.explorer.fileList,\n        dirList: state.explorer.dirList,\n        loading: state.viewUpdate.navigatorLoading,\n        navigatorError: state.viewUpdate.navigatorError,\n        navigatorErrorMsg: state.viewUpdate.navigatorErrorMsg,\n        keywords: state.explorer.keywords,\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigateToPath: path => {\n            dispatch(navitateTo(path));\n        },\n\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        navitateUp: () => {\n            dispatch(navitateUp());\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        changeSort: method => {\n            dispatch(changeSortMethod(method));\n        }\n    };\n};\n\nclass ExplorerCompoment extends Component {\n    constructor() {\n        super();\n        this.keyMap = {\n            DELETE_FILE: \"del\",\n            SELECT_ALL: \"ctrl+a\"\n        };\n\n        this.handlers = {\n            DELETE_FILE: () => {\n                if (this.props.selected.length > 0 && !this.props.share) {\n                    this.props.openRemoveDialog();\n                }\n            },\n            SELECT_ALL: e => {\n                e.preventDefault();\n                if (\n                    this.props.selected.length >=\n                    this.props.dirList.length + this.props.fileList.length\n                ) {\n                    this.props.setSelectedTarget([]);\n                } else {\n                    this.props.setSelectedTarget([\n                        ...this.props.dirList,\n                        ...this.props.fileList\n                    ]);\n                }\n            }\n        };\n    }\n\n    contextMenu = e => {\n        e.preventDefault();\n        if (\n            this.props.keywords === null &&\n            !pathHelper.isSharePage(this.props.location.pathname)\n        ) {\n            if (!this.props.loading) {\n                this.props.changeContextMenu(\"empty\", true);\n            }\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.away = 0;\n    }\n\n    ClickAway = e => {\n        let element = e.target;\n        if (element.dataset.clickaway) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div\n                onContextMenu={this.contextMenu}\n                onClick={this.ClickAway}\n                data-clickAway={\"true\"}\n                className={classNames(\n                    {\n                        [classes.root]: this.props.viewMethod !== \"list\",\n                        [classes.rootTable]: this.props.viewMethod === \"list\",\n                        [classes.rootShare]: this.props.share\n                    },\n                    classes.button\n                )}\n            >\n                <GlobalHotKeys handlers={this.handlers} keyMap={this.keyMap} />\n                <ContextMenu share={this.props.share} />\n                <ImgPreivew />\n                {this.props.navigatorError && (\n                    <Paper elevation={1} className={classes.errorBox}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            :( 请求时出现错误\n                        </Typography>\n                        <Typography\n                            color={\"textSecondary\"}\n                            className={classes.errorMsg}\n                        >\n                            {this.props.navigatorErrorMsg.message}\n                        </Typography>\n                    </Paper>\n                )}\n\n                {this.props.loading && !this.props.navigatorError && (\n                    <div className={classes.loading}>\n                        <CircularProgress />\n                    </div>\n                )}\n\n                {this.props.keywords === null &&\n                    isHomePage &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError && (\n                        <div className={classes.emptyContainer}>\n                            <EmptyIcon className={classes.emptyIcon} />\n                            <div className={classes.emptyInfoBig}>\n                                拖拽文件至此\n                            </div>\n                            <div className={classes.emptyInfoSmall}>\n                                或点击右下方“上传文件”按钮添加文件\n                            </div>\n                        </div>\n                    )}\n                {((this.props.keywords !== null &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError) ||\n                    (this.props.dirList.length === 0 &&\n                        this.props.fileList.length === 0 &&\n                        !this.props.loading &&\n                        !this.props.navigatorError &&\n                        !isHomePage)) && (\n                    <div className={classes.emptyContainer}>\n                        <SadIcon className={classes.emptyIcon} />\n                        <div className={classes.emptyInfoBig}>\n                            什么都没有找到\n                        </div>\n                    </div>\n                )}\n\n                {this.props.viewMethod !== \"list\" &&\n                    (this.props.dirList.length !== 0 ||\n                        this.props.fileList.length !== 0) &&\n                    !this.props.loading && (\n                        <div className={classes.flexFix}>\n                            {this.props.dirList.length !== 0 &&\n                                !this.props.loading && (\n                                    <div>\n                                        <Typography\n                                            data-clickAway={\"true\"}\n                                            variant=\"body2\"\n                                            className={classes.typeHeader}\n                                        >\n                                            文件夹\n                                        </Typography>\n                                        <Grid\n                                            data-clickAway={\"true\"}\n                                            container\n                                            spacing={0}\n                                            alignItems=\"flex-start\"\n                                        >\n                                            {this.props.dirList.map(\n                                                (value, index) => (\n                                                    <Grid\n                                                        item\n                                                        xs={6}\n                                                        md={3}\n                                                        sm={4}\n                                                        lg={2}\n                                                    >\n                                                        <ObjectIcon\n                                                            file={value}\n                                                        />\n                                                    </Grid>\n                                                )\n                                            )}\n                                        </Grid>\n                                    </div>\n                                )}\n                            {this.props.fileList.length !== 0 &&\n                                !this.props.loading && (\n                                    <div>\n                                        <Typography\n                                            data-clickAway={\"true\"}\n                                            variant=\"body2\"\n                                            className={classes.typeHeader}\n                                        >\n                                            文件\n                                        </Typography>\n                                        <Grid\n                                            data-clickAway={\"true\"}\n                                            container\n                                            spacing={0}\n                                            alignItems=\"flex-start\"\n                                        >\n                                            {this.props.fileList.map(\n                                                (value, index) => (\n                                                    <Grid\n                                                        item\n                                                        xs={6}\n                                                        md={3}\n                                                        sm={4}\n                                                        lg={2}\n                                                    >\n                                                        <ObjectIcon\n                                                            file={value}\n                                                        />\n                                                    </Grid>\n                                                )\n                                            )}\n                                        </Grid>\n                                    </div>\n                                )}\n                        </div>\n                    )}\n\n                {this.props.viewMethod === \"list\" &&\n                    (this.props.dirList.length !== 0 ||\n                        this.props.fileList.length !== 0) &&\n                    !this.props.loading && (\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <TableSortLabel\n                                            active={\n                                                this.props.sortMethod ===\n                                                    \"namePos\" ||\n                                                this.props.sortMethod ===\n                                                    \"nameRev\"\n                                            }\n                                            direction={\n                                                this.props.sortMethod ===\n                                                \"namePos\"\n                                                    ? \"asc\"\n                                                    : \"des\"\n                                            }\n                                            onClick={() => {\n                                                this.props.changeSort(\n                                                    this.props.sortMethod ===\n                                                        \"namePos\"\n                                                        ? \"nameRev\"\n                                                        : \"namePos\"\n                                                );\n                                            }}\n                                        >\n                                            名称\n                                            {this.props.sortMethod ===\n                                                \"namePos\" ||\n                                            this.props.sortMethod ===\n                                                \"nameRev\" ? (\n                                                <span\n                                                    className={\n                                                        classes.visuallyHidden\n                                                    }\n                                                >\n                                                    {this.props.sortMethod ===\n                                                    \"nameRev\"\n                                                        ? \"sorted descending\"\n                                                        : \"sorted ascending\"}\n                                                </span>\n                                            ) : null}\n                                        </TableSortLabel>\n                                    </TableCell>\n                                    <TableCell className={classes.hideAuto}>\n                                        <TableSortLabel\n                                            active={\n                                                this.props.sortMethod ===\n                                                \"sizePos\" ||\n                                                this.props.sortMethod ===\n                                                \"sizeRes\"\n                                            }\n                                            direction={\n                                                this.props.sortMethod ===\n                                                \"sizePos\"\n                                                    ? \"asc\"\n                                                    : \"des\"\n                                            }\n                                            onClick={() => {\n                                                this.props.changeSort(\n                                                    this.props.sortMethod ===\n                                                    \"sizePos\"\n                                                        ? \"sizeRes\"\n                                                        : \"sizePos\"\n                                                );\n                                            }}\n                                        >\n                                            大小\n                                            {this.props.sortMethod ===\n                                            \"sizePos\" ||\n                                            this.props.sortMethod ===\n                                            \"sizeRes\" ? (\n                                                <span\n                                                    className={\n                                                        classes.visuallyHidden\n                                                    }\n                                                >\n                                                    {this.props.sortMethod ===\n                                                    \"sizeRes\"\n                                                        ? \"sorted descending\"\n                                                        : \"sorted ascending\"}\n                                                </span>\n                                            ) : null}\n                                        </TableSortLabel>\n                                    </TableCell>\n                                    <TableCell className={classes.hideAuto}>\n                                        <TableSortLabel\n                                            active={\n                                                this.props.sortMethod ===\n                                                \"timePos\" ||\n                                                this.props.sortMethod ===\n                                                \"timeRev\"\n                                            }\n                                            direction={\n                                                this.props.sortMethod ===\n                                                \"timePos\"\n                                                    ? \"asc\"\n                                                    : \"des\"\n                                            }\n                                            onClick={() => {\n                                                this.props.changeSort(\n                                                    this.props.sortMethod ===\n                                                    \"timePos\"\n                                                        ? \"timeRev\"\n                                                        : \"timePos\"\n                                                );\n                                            }}\n                                        >\n                                            日期\n                                            {this.props.sortMethod ===\n                                            \"timePos\" ||\n                                            this.props.sortMethod ===\n                                            \"timeRev\" ? (\n                                                <span\n                                                    className={\n                                                        classes.visuallyHidden\n                                                    }\n                                                >\n                                                    {this.props.sortMethod ===\n                                                    \"sizeRes\"\n                                                        ? \"sorted descending\"\n                                                        : \"sorted ascending\"}\n                                                </span>\n                                            ) : null}\n                                        </TableSortLabel>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {pathHelper.isMobile() &&\n                                    this.props.path !== \"/\" && (\n                                        <ObjectIcon\n                                            file={{\n                                                type: \"up\",\n                                                name: \"上级目录\"\n                                            }}\n                                        />\n                                    )}\n                                {this.props.dirList.map((value, index) => (\n                                    <ObjectIcon file={value} />\n                                ))}\n                                {this.props.fileList.map((value, index) => (\n                                    <ObjectIcon file={value} />\n                                ))}\n                            </TableBody>\n                        </Table>\n                    )}\n            </div>\n        );\n    }\n}\n\nExplorerCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired\n};\n\nconst Explorer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ExplorerCompoment)));\n\nexport default Explorer;\n","export const isDefined = val => val != null\nexport const isFunction = val => typeof val === 'function'\nexport const noop = _ => { }\n\nexport const newScript = (src) => (cb) => {\n  const scriptElem = document.createElement('script')\n  if (typeof src === 'object') {\n    // copy every property to the element\n    for (var key in src) {\n      if (Object.prototype.hasOwnProperty.call(src, key)) {\n        scriptElem[key] = src[key];\n      }\n    }\n    src = src.src;\n  } else {\n    scriptElem.src = src\n  }\n  scriptElem.addEventListener('load', () => cb(null, src))\n  scriptElem.addEventListener('error', () => cb(true, src))\n  document.body.appendChild(scriptElem)\n  return scriptElem\n}\n\nconst keyIterator = (cols) => {\n  const keys = Object.keys(cols)\n  let i = -1\n  return {\n    next () {\n      i++ // inc\n      if (i >= keys.length) return null\n      else return keys[i]\n    }\n  }\n}\n\n// tasks should be a collection of thunk\nexport const parallel = (...tasks) => (each) => (cb) => {\n  let hasError = false\n  let successed = 0\n  const ret = []\n  tasks = tasks.filter(isFunction)\n\n  if (tasks.length <= 0) cb(null)\n  else {\n    tasks.forEach((task, i) => {\n      const thunk = task\n      thunk((err, ...args) => {\n        if (err) hasError = true\n        else {\n          // collect result\n          if (args.length <= 1) args = args[0]\n\n          ret[i] = args\n          successed ++\n        }\n\n        if (isFunction(each)) each.call(null, err, args, i)\n\n        if (hasError) cb(true)\n        else if (tasks.length === successed) {\n          cb(null, ret)\n        }\n      })\n    })\n  }\n}\n\n// tasks should be a collection of thunk\nexport const series = (...tasks) => (each) => (cb) => {\n  tasks = tasks.filter(val => val != null)\n  const nextKey = keyIterator(tasks)\n  const nextThunk = () => {\n    const key = nextKey.next()\n    let thunk = tasks[key]\n    if (Array.isArray(thunk)) thunk = parallel.apply(null, thunk).call(null, each)\n    return [ +key, thunk ] // convert `key` to number\n  }\n  let key, thunk\n  let next = nextThunk()\n  key = next[0]\n  thunk = next[1]\n  if (thunk == null) return cb(null)\n\n  const ret = []\n  const iterator = () => {\n    thunk((err, ...args) => {\n      if (args.length <= 1) args = args[0]\n      if (isFunction(each)) each.call(null, err, args, key)\n\n      if (err) cb(err)\n      else {\n        // collect result\n        ret.push(args)\n\n        next = nextThunk()\n        key = next[0]\n        thunk = next[1]\n        if (thunk == null) return cb(null, ret) // finished\n        else iterator()\n      }\n    })\n  }\n  iterator()\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport { newScript, series, noop } from \"./utils\";\n\nconst loadedScript = [];\nconst pendingScripts = {};\nlet failedScript = [];\n\nexport function startLoadingScripts(scripts, onComplete = noop) {\n    // sequence load\n    const loadNewScript = script => {\n        const src = typeof script === \"object\" ? script.src : script;\n        if (loadedScript.indexOf(src) < 0) {\n            return taskComplete => {\n                const callbacks = pendingScripts[src] || [];\n                callbacks.push(taskComplete);\n                pendingScripts[src] = callbacks;\n                if (callbacks.length === 1) {\n                    return newScript(script)(err => {\n                        pendingScripts[src].forEach(cb => cb(err, src));\n                        delete pendingScripts[src];\n                    });\n                }\n            };\n        }\n    };\n    const tasks = scripts.map(src => {\n        if (Array.isArray(src)) {\n            return src.map(loadNewScript);\n        } else return loadNewScript(src);\n    });\n\n    series(...tasks)((err, src) => {\n        if (err) {\n            failedScript.push(src);\n        } else {\n            if (Array.isArray(src)) {\n                src.forEach(addCache);\n            } else addCache(src);\n        }\n    })(err => {\n        removeFailedScript();\n        onComplete(err);\n    });\n}\n\nconst addCache = entry => {\n    if (loadedScript.indexOf(entry) < 0) {\n        loadedScript.push(entry);\n    }\n};\n\nconst removeFailedScript = () => {\n    if (failedScript.length > 0) {\n        failedScript.forEach(script => {\n            const node = document.querySelector(`script[src='${script}']`);\n            if (node != null) {\n                node.parentNode.removeChild(node);\n            }\n        });\n\n        failedScript = [];\n    }\n};\n\nconst uploaderLoader = () => WrappedComponent => {\n    class ScriptLoader extends Component {\n        static propTypes = {\n            onScriptLoaded: PropTypes.func\n        };\n\n        static defaultProps = {\n            onScriptLoaded: noop\n        };\n\n        constructor(props, context) {\n            super(props, context);\n\n            this.state = {\n                isScriptLoaded: false,\n                isScriptLoadSucceed: false\n            };\n\n            this._isMounted = false;\n        }\n\n        componentDidMount() {\n            this._isMounted = true;\n            let scripts = [\n                [\"https://cdn.jsdelivr.net/gh/742481030/static@master/static/js/uploader/moxie.min.js\"],\n                [\"https://cdn.jsdelivr.net/gh/742481030/static@master/static/js/uploader/plupload.dev.min.js\"],\n                [\"https://cdn.jsdelivr.net/gh/742481030/static@master/static/js/uploader/i18n/zh_CN.min.js\"],\n                [\"https://cdn.jsdelivr.net/gh/742481030/static@master/static/js/uploader/ui.min.js\"],\n                [\"https://cdn.jsdelivr.net/gh/742481030/static@master/static/js/uploader/uploader_\" + window.policyType + \".min.js\"]\n            ];\n            startLoadingScripts(scripts, err => {\n                if (this._isMounted) {\n                    this.setState(\n                        {\n                            isScriptLoaded: true,\n                            isScriptLoadSucceed: !err\n                        },\n                        () => {\n                            if (!err) {\n                                this.props.onScriptLoaded();\n                            }\n                        }\n                    );\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this._isMounted = false;\n        }\n\n        getWrappedInstance() {\n            return this.refs.wrappedInstance;\n        }\n\n        render() {\n            const props = {\n                ...this.props,\n                ...this.state,\n                ref: \"wrappedInstance\"\n            };\n\n            return <WrappedComponent {...props} />;\n        }\n    }\n\n    return hoistStatics(ScriptLoader, WrappedComponent);\n};\n\nexport default uploaderLoader;\n","import React, { Component } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { isWidthDown } from \"@material-ui/core/withWidth\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport {\n    withStyles,\n    Dialog,\n    ListItemText,\n    ListItem,\n    List,\n    Divider,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    LinearProgress,\n    Slide,\n    Avatar,\n    ListItemSecondaryAction,\n    withWidth,\n    DialogContent\n} from \"@material-ui/core\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport { withTheme } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    appBar: {\n        position: \"relative\"\n    },\n    flex: {\n        flex: 1\n    },\n    progressBar: {\n        marginTop: 5\n    },\n    minHight: {\n        [theme.breakpoints.up(\"sm\")]: {\n            minWidth: 500\n        },\n        padding: 0\n    },\n    dialogContent: {\n        padding: 0\n    },\n    successStatus: {\n        color: \"#4caf50\"\n    },\n    errorStatus: {\n        color: \"#ff5722\",\n        wordBreak: \"break-all\"\n    },\n    listAction: {\n        marginLeft: 20,\n        marginRight: 20\n    },\n    delete: {\n        zIndex: 9\n    },\n    progressContainer: {\n        position: \"relative\"\n    },\n    progressContent: {\n        position: \"relative\",\n        zIndex: 9\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0\n    },\n    fileName:{\n        wordBreak: \"break-all\",\n    }\n});\nclass FileList extends Component {\n    state = {\n        open: false,\n        files: []\n    };\n\n    //入队\n    enQueue(files) {\n        this.setState({\n            files: [...this.state.files, ...files]\n        });\n    }\n\n    deQueue(file) {\n        var filesNow = [...this.state.files];\n        var fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            filesNow.splice(fileID, 1);\n            this.setState({\n                files: filesNow,\n                open: filesNow.length !== 0\n            });\n        }\n    }\n\n    updateStatus(file) {\n        var filesNow = [...this.state.files];\n        var fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (!file.errMsg || file.ignoreMsg) {\n            if (filesNow[fileID] && filesNow[fileID].status !== 4) {\n                filesNow[fileID] = file;\n                this.setState({\n                    files: filesNow\n                });\n            }\n        } else {\n            file.ignoreMsg = true;\n        }\n    }\n\n    setComplete(file) {\n        console.log(\"setComplete\");\n        var filesNow = [...this.state.files];\n        var fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            if (filesNow[fileID].status !== 4) {\n                filesNow[fileID].status = 5;\n                this.setState({\n                    files: filesNow\n                });\n            }\n        }\n    }\n\n    setError(file, errMsg) {\n        var filesNow = [...this.state.files];\n        var fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            filesNow[fileID].status = 4;\n            filesNow[fileID].errMsg = errMsg;\n        } else {\n            file.status = 4;\n            file.errMsg = errMsg;\n            filesNow.push(file);\n        }\n        this.setState({\n            files: filesNow\n        });\n    }\n\n    Transition(props) {\n        return <Slide direction=\"up\" {...props} />;\n    }\n    openFileList = () => {\n        if (!this.state.open) {\n            this.setState({ open: true });\n        }\n    };\n\n    cancelUpload = file => {\n        this.props.cancelUpload(file);\n        this.deQueue(file);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    addNewFile = () => {\n        document.getElementsByClassName(\"uploadFileForm\")[0].click();\n    };\n\n    getProgressBackground = () => {\n        return this.props.theme.palette.type === \"light\"\n            ? lighten(this.props.theme.palette.primary.main, 0.8)\n            : darken(this.props.theme.palette.background.paper, 0.2);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { width } = this.props;\n\n        this.props.inRef({\n            openFileList: this.openFileList.bind(this),\n            enQueue: this.enQueue.bind(this),\n            updateStatus: this.updateStatus.bind(this),\n            setComplete: this.setComplete.bind(this),\n            setError: this.setError.bind(this)\n        });\n\n        return (\n            <Dialog\n                fullScreen={isWidthDown(\"sm\", width)}\n                open={this.state.open}\n                onClose={this.handleClose}\n                TransitionComponent={this.Transition}\n            >\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={this.handleClose}\n                            aria-label=\"Close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            className={classes.flex}\n                        >\n                            上传队列\n                        </Typography>\n                        <IconButton color=\"inherit\" onClick={this.addNewFile}>\n                            <AddIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.dialogContent}>\n                    <List className={classes.minHight}>\n                        {this.state.files.map((item, i) => (\n                            <div key={i} className={classes.progressContainer}>\n                                {item.status === 2 && (\n                                    <div\n                                        style={{\n                                            backgroundColor: this.getProgressBackground(),\n                                            width: item.percent + \"%\"\n                                        }}\n                                        className={classes.progress}\n                                    />\n                                )}\n                                <ListItem\n                                    className={classes.progressContent}\n                                    button\n                                >\n                                    <TypeIcon fileName={item.name} isUpload />\n                                    {item.status === 1 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={<div>排队中...</div>}\n                                        />\n                                    )}\n                                    {item.status === 2 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div>\n                                                    {item.percent <= 99 && (\n                                                        <>\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.speed\n                                                                )\n                                                                .toUpperCase()}\n                                                            /s 已上传{\" \"}\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.loaded\n                                                                )\n                                                                .toUpperCase()}{\" \"}\n                                                            , 共{\" \"}\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.size\n                                                                )\n                                                                .toUpperCase()}{\" \"}\n                                                            - {item.percent}%{\" \"}\n                                                        </>\n                                                    )}\n                                                    {item.percent > 99 && (\n                                                        <div>处理中...</div>\n                                                    )}\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    {item.status === 3 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={item.status}\n                                        />\n                                    )}\n                                    {item.status === 4 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div\n                                                    className={\n                                                        classes.errorStatus\n                                                    }\n                                                >\n                                                    {item.errMsg}\n                                                    <br />\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    {item.status === 5 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div\n                                                    className={\n                                                        classes.successStatus\n                                                    }\n                                                >\n                                                    已完成\n                                                    <br />\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    <ListItemSecondaryAction\n                                        className={classes.delete}\n                                    >\n                                        <IconButton\n                                            aria-label=\"Delete\"\n                                            onClick={() =>\n                                                this.cancelUpload(item)\n                                            }\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider />\n                            </div>\n                        ))}\n                    </List>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\nFileList.propTypes = {};\n\nexport default withStyles(styles)(withWidth()(withTheme(FileList)));\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { makeStyles, Badge } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport {openCreateFolderDialog, openRemoteDownloadDialog, toggleSnackbar} from \"../../actions\";\nimport {useDispatch} from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../untils/page\"\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport {CloudDownload} from \"@material-ui/icons\";\nimport Auth from \"../../middleware/Auth\";\nimport {FolderUpload} from \"mdi-material-ui\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\"\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7\n    }\n}));\n\nexport default function UploadButton(props) {\n    const [open, setOpen] = useState(false);\n    const [queued, setQueued] = useState(5);\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const OpenNewFolderDialog = useCallback(\n        () =>\n            dispatch(openCreateFolderDialog()),\n        [dispatch]\n    );\n    const OpenRemoteDownloadDialog = useCallback(\n        () =>\n            dispatch(openRemoteDownloadDialog()),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setQueued(props.Queued);\n    }, [props.Queued]);\n\n    const uploadClicked = () => {\n        if (open) {\n            if (queued !== 0) {\n                props.openFileList();\n            } else {\n                openUpload(\"uploadFileForm\");\n            }\n        }\n    };\n\n    const openUpload = id =>{\n        let uploadButton = document.getElementsByClassName(\n            id\n        )[0];\n        if (document.body.contains(uploadButton)) {\n            uploadButton.click();\n        } else {\n            ToggleSnackbar(\n                \"top\",\n                \"right\",\n                \"上传组件还未加载完成\",\n                \"warning\"\n            );\n        }\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const user = Auth.GetUser();\n\n    return (\n        <AutoHidden enable>\n            <Badge\n                badgeContent={queued}\n                classes={{\n                    badge: classes.badge // class name, e.g. `root-x`\n                }}\n                className={classes.fab}\n                invisible={queued === 0}\n                color=\"primary\"\n            >\n                <Backdrop open={open && statusHelper.isMobile()} />\n                <SpeedDial\n                    ariaLabel=\"SpeedDial openIcon example\"\n                    hidden={false}\n                    tooltipTitle=\"上传文件\"\n                    icon={<SpeedDialIcon openIcon={!statusHelper.isMobile()&&<PublishIcon />} />}\n                    onClose={handleClose}\n                    FabProps={{\n                         onClick: () => !statusHelper.isMobile() && uploadClicked(),\n                        color: \"secondary\",\n                    }}\n                    onOpen={handleOpen}\n                    open={open}\n                >\n                    {statusHelper.isMobile() && <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<PublishIcon />}\n                        tooltipTitle=\"上传文件\"\n                        onClick= {() => uploadClicked()}\n                        title={\"上传文件\"}/>}\n                    {!statusHelper.isMobile() && <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<FolderUpload />}\n                        tooltipTitle=\"上传目录\"\n                        onClick= {() => openUpload(\"uploadFolderForm\")}\n                        title={\"上传目录\"}/>}\n                    <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<CreateNewFolderIcon />}\n                        tooltipTitle=\"新目录\"\n                        onClick= {() => OpenNewFolderDialog()}\n                     title={\"新目录\"}/>\n                    {user.group.allowRemoteDownload&&\n                    <SpeedDialAction\n                        key=\"NewDownload\"\n                        icon={<CloudDownload />}\n                        tooltipTitle=\"离线下载\"\n                        onClick= {() => OpenRemoteDownloadDialog()}\n                        title={\"离线下载\"}/>\n                    }\n\n                </SpeedDial>\n            </Badge>\n        </AutoHidden>\n    );\n}\n","import React, { Component } from \"react\";\nimport uploaderLoader from \"../../loader\";\nimport { connect } from \"react-redux\";\nimport { refreshFileList, refreshStorage, toggleSnackbar } from \"../../actions\";\nimport FileList from \"./FileList.js\";\nimport Auth from \"../../middleware/Auth\";\nimport UploadButton from \"../Dial/Create.js\";\nimport { basename, pathJoin } from \"../../untils\";\n\nlet loaded = false;\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        keywords: state.explorer.keywords\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass UploaderComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            queued: 0\n        };\n    }\n\n    setRef(val) {\n        window.fileList = val;\n    }\n\n    cancelUpload(file) {\n        this.uploader.removeFile(file);\n    }\n\n    getChunkSize(policyType) {\n        if (policyType === \"qiniu\") {\n            return 4 * 1024 * 1024;\n        }\n        if (policyType === \"onedrive\") {\n            return 10 * 1024 * 1024;\n        }\n        return 0;\n    }\n\n    fileAdd = (up, files) => {\n        let path = window.currntPath ? window.currntPath : this.props.path;\n        if (\n            this.props.keywords === null &&\n            window.location.href\n                .split(\"#\")[1]\n                .toLowerCase()\n                .startsWith(\"/home\")\n        ) {\n            window.fileList[\"openFileList\"]();\n            window.plupload.each(files, files => {\n                let source = files.getSource();\n                if (source.relativePath && source.relativePath !== \"\") {\n                    files.path =  basename(\n                        pathJoin([path, source.relativePath])\n                    );\n                    window.pathCache[files.id] = basename(\n                        pathJoin([path, source.relativePath])\n                    );\n                } else {\n                    window.pathCache[files.id] = path;\n                    files.path = path;\n                }\n            });\n            window.fileList[\"enQueue\"](files);\n        } else {\n            window.plupload.each(files, files => {\n                up.removeFile(files);\n            });\n        }\n    };\n\n    componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\n        if (isScriptLoaded && !this.props.isScriptLoaded) {\n            // load finished\n            if (isScriptLoadSucceed) {\n                if (loaded) {\n                    return;\n                }\n                loaded = true;\n                var user = Auth.GetUser();\n                this.uploader = window.Qiniu.uploader({\n                    runtimes: \"html5\",\n                    browse_button: [\"pickfiles\", \"pickfolder\"],\n                    container: \"container\",\n                    drop_element: \"container\",\n                    max_file_size: user.policy.maxSize === \"0.00mb\" ? 0 :user.policy.maxSize,\n                    dragdrop: true,\n                    chunk_size: this.getChunkSize(user.policy.saveType),\n                    filters: {\n                        mime_types:\n                            (user.policy.allowedType === null || user.policy.allowedType.length === 0)\n                                ? []\n                                :  [{ title : \"files\", extensions : user.policy.allowedType.join(\",\") }],\n                    },\n                    // iOS不能多选？\n                    multi_selection: true,\n                    uptoken_url: \"/api/v3/file/upload/credential\",\n                    uptoken: user.policy.saveType === \"local\" ? \"token\" : null,\n                    domain: \"s\",\n                    max_retries: 0,\n                    get_new_uptoken: true,\n                    auto_start: true,\n                    log_level: 5,\n                    init: {\n                        FilesAdded: this.fileAdd,\n\n                        BeforeUpload: function(up, file) {},\n                        QueueChanged: up => {\n                            this.setState({ queued: up.total.queued });\n                        },\n                        UploadProgress: (up, file) => {\n                            window.fileList[\"updateStatus\"](file);\n                        },\n                        UploadComplete: (up, file) => {\n                            if (file.length === 0) {\n                                return;\n                            }\n                            console.log(\n                                \"UploadComplete\",\n                                file[0].status,\n                                file[0]\n                            );\n                            for (var i = 0; i < file.length; i++) {\n                                if (file[i].status === 5) {\n                                    window.fileList[\"setComplete\"](file[i]);\n                                }\n                            }\n                            // 无异步操作的策略，直接刷新\n                            if (\n                                user.policy.saveType !== \"onedrive\" &&\n                                user.policy.saveType !== \"cos\"\n                            ) {\n                                this.props.refreshFileList();\n                                this.props.refreshStorage();\n                            }\n                        },\n                        Fresh: () => {\n                            this.props.refreshFileList();\n                            this.props.refreshStorage();\n                        },\n                        FileUploaded: function(up, file, info) {},\n                        Error: (up, err, errTip) => {\n                            window.fileList[\"openFileList\"]();\n                            window.fileList[\"setError\"](err.file, errTip);\n                        },\n                        FilesRemoved: (up, files) => {}\n                    }\n                });\n                // this.fileList[\"openFileList\"]();\n            } else this.onError();\n        }\n    }\n\n    onError() {}\n\n    openFileList = () => {\n        window.fileList[\"openFileList\"]();\n    };\n\n    render() {\n        return (\n            <div>\n                <FileList\n                    inRef={this.setRef.bind(this)}\n                    cancelUpload={this.cancelUpload.bind(this)}\n                />\n                {this.props.keywords === null && (\n                    <UploadButton\n                        Queued={this.state.queued}\n                        openFileList={this.openFileList}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nconst Uploader = connect(mapStateToProps, mapDispatchToProps, null, {\n    forwardRef: true\n})(uploaderLoader()(UploaderComponent));\n\nexport default Uploader;\n","import React,{useEffect} from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles(theme => ({\n    expandMore: {\n        color: \"#8d8d8d\"\n    },\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light\n    }\n}));\n\nexport default function PathButton(props) {\n    const inputRef = React.useRef(null)\n    \n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            if (props.more) {\n                inputRef.current.click();\n            } else {\n                return {\n                    folder: {\n                        id: -1,\n                        path: props.path,\n                        name: props.folder === \"/\" ? \"\" : props.folder\n                    }\n                };\n            }\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if(props.more && isActive){\n            inputRef.current.click();\n        }\n        // eslint-disable-next-line\n    }, [isActive])\n\n    const classes = useStyles();\n    return (\n        \n        <span onClick={props.onClick}  ref={inputRef} >\n        <Button\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive\n            })}\n            component=\"span\"\n            title={props.title}\n        >\n            {props.more && <MoreIcon />}\n            {!props.more && (\n                <>\n                    {props.folder}\n                    {props.last && (\n                        <ExpandMore className={classes.expandMore} />\n                    )}\n                </>\n            )}\n        </Button>\n        </span>\n        \n    );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport {\n    MenuItem,\n    ListItemIcon,\n    ListItemText\n} from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(theme => ({\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light\n    }\n}));\n\nexport default function DropDownItem(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            console.log({\n                folder: {\n                    id: -1,\n                    path: props.path,\n                    name: props.folder === \"/\" ? \"\" : props.folder\n                }\n            });\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        props.setActiveStatus(props.id,isActive);\n        // eslint-disable-next-line\n    }, [isActive])\n\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive\n            })}\n            onClick={e => props.navigateTo(e, props.id)}\n        >\n            <ListItemIcon>\n                <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.folder} />\n        </MenuItem>\n    );\n}\n","import React from \"react\";\nimport DropDownItem from \"./DropDownItem\";\n\n\nexport default function DropDown(props) {\n\n    let timer;\n    let first = props.folders.length;\n    let status = [];\n    for (let index = 0; index < props.folders.length; index++) {\n        status[index] = false;\n        \n    }\n\n    const setActiveStatus = (id,value)=>{\n        status[id] = value;\n        if (value){\n            clearTimeout(timer);\n        }else{\n            let shouldClose = true;\n            status.forEach(element => {\n                if (element){\n                    shouldClose = false;\n                }\n            });\n            if (shouldClose){\n                if (first<=0){\n                    timer = setTimeout(()=>{\n                        props.onClose();\n                    },100)\n                }else{\n                    first--;\n                }\n            \n            }\n        }\n        console.log(status);\n    }\n\n    return (\n        <>\n            {props.folders.map((folder, id) => (\n                <DropDownItem\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\n                    navigateTo={props.navigateTo}\n                    id={id}\n                    setActiveStatus = {setActiveStatus}\n                    folder={folder}\n                />\n            ))}\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n    navitateTo,\n    navitateUp,\n    changeViewMethod,\n    changeSortMethod,\n    setNavigatorError,\n    updateFileList,\n    setNavigatorLoadingStatus,\n    refreshFileList,\n    setSelectedTarget,\n    openCreateFolderDialog,\n    openShareDialog,\n    drawerToggleAction,\n    setShareUserPopover, openResaveDialog, openCompressDialog\n} from \"../../../actions/index\";\nimport API from \"../../../middleware/Api\";\nimport { setCookie, setGetParameter, fixUrlHash } from \"../../../untils/index\";\nimport {\n    withStyles,\n    Divider,\n    Menu,\n    MenuItem,\n    ListItemIcon,\n    IconButton\n} from \"@material-ui/core\";\nimport PathButton from \"./PathButton\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport DropDown from \"./DropDown\";\nimport pathHelper from \"../../../untils/page\";\nimport classNames from \"classnames\";\nimport Auth from \"../../../middleware/Auth\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Archive} from \"@material-ui/icons\";\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        refresh: state.navigator.refresh,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        keywords: state.explorer.keywords,\n        sortMethod: state.viewUpdate.sortMethod\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigateToPath: path => {\n            dispatch(navitateTo(path));\n        },\n        navitateUp: () => {\n            dispatch(navitateUp());\n        },\n        changeView: method => {\n            dispatch(changeViewMethod(method));\n        },\n        changeSort: method => {\n            dispatch(changeSortMethod(method));\n        },\n        setNavigatorError: (status, msg) => {\n            dispatch(setNavigatorError(status, msg));\n        },\n        updateFileList: list => {\n            dispatch(updateFileList(list));\n        },\n        setNavigatorLoadingStatus: status => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        setSelectedTarget: target => {\n            dispatch(setSelectedTarget(target));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        handleDesktopToggle: open => {\n            dispatch(drawerToggleAction(open));\n        },\n        setShareUserPopover: e => {\n            dispatch(setShareUserPopover(e));\n        },\n        openResave: (key) => {\n            dispatch(openResaveDialog(key));\n        },\n        openCompressDialog: ()=>{\n            dispatch(openCompressDialog())\n        },\n    };\n};\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst sortOptions = [\n    \"文件名称正序\",\n    \"文件名称倒序\",\n    \"上传时间正序\",\n    \"上传时间倒序\",\n    \"文件大小正序\",\n    \"文件大小倒序\"\n];\n\nconst styles = theme => ({\n    container: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        },\n        height: \"49px\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper\n    },\n    navigatorContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    nav: {\n        height: \"48px\",\n        padding: \"5px 15px\",\n        display: \"flex\"\n    },\n    optionContainer: {\n        paddingTop: \"6px\",\n        marginRight: \"10px\"\n    },\n    rightIcon: {\n        marginTop: \"6px\",\n        verticalAlign: \"top\",\n        color: \"#868686\"\n    },\n    expandMore: {\n        color: \"#8d8d8d\"\n    },\n    sideButton: {\n        padding: \"8px\",\n        marginRight: \"5px\"\n    },\n    roundBorder: {\n        borderRadius: \"4px 4px 0 0\"\n    }\n});\n\nclass NavigatorComponent extends Component {\n    keywords = null;\n    currentID = 0;\n\n    state = {\n        hidden: false,\n        hiddenFolders: [],\n        folders: [],\n        anchorEl: null,\n        hiddenMode: false,\n        anchorHidden: null,\n        anchorSort: null,\n        selectedIndex: 0\n    };\n\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n    }\n\n    componentDidMount = () => {\n        var url = new URL(fixUrlHash(window.location.href));\n        var c = url.searchParams.get(\"path\");\n        this.renderPath(c === null ? \"/\":c);\n\n        if (!this.props.isShare) {\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\n            this.props.handleDesktopToggle(true);\n        }\n\n        // 后退操作时重新导航\n        window.onpopstate = event => {\n            var url = new URL(fixUrlHash(window.location.href));\n            var c = url.searchParams.get(\"path\");\n            if (c !== null && c !== this.props.path) {\n                this.props.navigateToPath(c);\n            }\n        };\n    };\n\n    renderPath = (path = null) => {\n        this.props.setNavigatorError(false, null);\n        this.setState({\n            folders:\n                path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\")\n        });\n        var newPath = path !== null ? path : this.props.path;\n        var apiURL = this.props.share\n            ? \"/share/list/\" + this.props.share.key\n            : this.keywords === null\n            ? \"/directory\"\n            : \"/file/search/\";\n        newPath = this.keywords === null ? newPath : this.keywords;\n\n        API.get(apiURL + newPath)\n            .then(response => {\n                this.currentID = response.data.parent;\n                this.props.updateFileList(response.data.objects);\n                this.props.setNavigatorLoadingStatus(false);\n                let pathTemp = (path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\")\n                ).join(\",\");\n                setCookie(\"path_tmp\", encodeURIComponent(pathTemp), 1);\n                if (this.keywords === null) {\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\n                }\n            })\n            .catch(error => {\n                this.props.setNavigatorError(true, error);\n            });\n\n        this.checkOverFlow(true);\n    };\n\n    redresh = path => {\n        this.props.setNavigatorLoadingStatus(true);\n        this.props.setNavigatorError(false, \"error\");\n        this.renderPath(path);\n    };\n\n    componentWillReceiveProps = nextProps => {\n        if (this.props.keywords !== nextProps.keywords) {\n            this.keywords = nextProps.keywords;\n        }\n        if (this.props.path !== nextProps.path) {\n            this.renderPath(nextProps.path);\n        }\n        if (this.props.refresh !== nextProps.refresh) {\n            this.redresh(nextProps.path);\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.updateFileList([]);\n    }\n\n    componentDidUpdate = (prevProps, prevStates) => {\n        if (this.state.folders !== prevStates.folders) {\n            this.checkOverFlow(true);\n        }\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\n            delay(500).then(() => this.checkOverFlow());\n        }\n    };\n\n    checkOverFlow = force => {\n        if (this.overflowInitLock && !force) {\n            return;\n        }\n        if (this.element.current !== null) {\n            const hasOverflowingChildren =\n                this.element.current.offsetHeight <\n                    this.element.current.scrollHeight ||\n                this.element.current.offsetWidth <\n                    this.element.current.scrollWidth;\n            if (hasOverflowingChildren) {\n                this.overflowInitLock = true;\n                this.setState({ hiddenMode: true });\n            }\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\n                this.setState({ hiddenMode: false });\n            }\n        }\n    };\n\n    navigateTo = (event, id) => {\n        if (id === this.state.folders.length - 1) {\n            //最后一个路径\n            this.setState({ anchorEl: event.currentTarget });\n        } else if (\n            id === -1 &&\n            this.state.folders.length === 1 &&\n            this.state.folders[0] === \"\"\n        ) {\n            this.props.refreshFileList();\n            this.handleClose();\n        } else if (id === -1) {\n            this.props.navigateToPath(\"/\");\n            this.handleClose();\n        } else {\n            this.props.navigateToPath(\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\n            );\n            this.handleClose();\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\n    };\n\n    showHiddenPath = e => {\n        this.setState({ anchorHidden: e.currentTarget });\n    };\n\n    showSortOptions = e => {\n        this.setState({ anchorSort: e.currentTarget });\n    };\n\n    performAction = e => {\n        this.handleClose();\n        if (e === \"refresh\") {\n            this.redresh();\n            return;\n        }\n        let presentPath = this.props.path.split(\"/\");\n        let newTarget = [\n            {\n                id:this.currentID,\n                type: \"dir\",\n                name: presentPath.pop(),\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\")\n            }\n        ];\n        //this.props.navitateUp();\n        switch (e) {\n            case \"share\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openShareDialog();\n                break;\n            case \"newfolder\":\n                this.props.openCreateFolderDialog();\n                break;\n            case \"compress\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openCompressDialog();\n                break;\n            default:\n                break;\n        }\n    };\n\n    toggleViewMethod = () => {\n        let newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    handleMenuItemClick = (e, index) => {\n        this.setState({ selectedIndex: index, anchorEl: null });\n        let optionsTable = {\n            0: \"namePos\",\n            1: \"nameRev\",\n            2: \"timePos\",\n            3: \"timeRev\",\n            4: \"sizePos\",\n            5: \"sizeRes\"\n        };\n        this.props.changeSort(optionsTable[index]);\n        this.handleClose();\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage =  pathHelper.isHomePage(this.props.location.pathname);\n        const user = Auth.GetUser();\n\n        let presentFolderMenu = (\n            <Menu\n                id=\"presentFolderMenu\"\n                anchorEl={this.state.anchorEl}\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n                disableAutoFocusItem={true}\n            >\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\n                    <ListItemIcon>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    刷新\n                </MenuItem>\n                {this.props.keywords === null &&\n                isHomePage && (\n                        <div>\n                            <Divider />\n                            <MenuItem\n                                onClick={() => this.performAction(\"share\")}\n                            >\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                分享\n                            </MenuItem>\n                            {user.group.compress && <MenuItem\n                                onClick={() => this.performAction(\"compress\")}\n                            >\n                                <ListItemIcon>\n                                    <Archive />\n                                </ListItemIcon>\n                                压缩\n                            </MenuItem>}\n\n                            <MenuItem\n                                onClick={() => this.performAction(\"newfolder\")}\n                            >\n                                <ListItemIcon>\n                                    <NewFolderIcon />\n                                </ListItemIcon>\n                                创建文件夹\n                            </MenuItem>\n                        </div>\n                    )}\n            </Menu>\n        );\n\n        return (\n            <div\n                className={classNames(\n                    {\n                        [classes.roundBorder]: this.props.isShare\n                    },\n                    classes.container\n                )}\n            >\n                <div className={classes.navigatorContainer}>\n                    <div className={classes.nav} ref={this.element}>\n                        <span>\n                            <PathButton\n                                folder=\"/\"\n                                path=\"/\"\n                                onClick={e => this.navigateTo(e, -1)}\n                            />\n                            <RightIcon className={classes.rightIcon} />\n                        </span>\n                        {this.state.hiddenMode && (\n                            <span>\n                                <PathButton\n                                    more\n                                    title=\"显示路径\"\n                                    onClick={this.showHiddenPath}\n                                />\n                                <Menu\n                                    id=\"hiddenPathMenu\"\n                                    anchorEl={this.state.anchorHidden}\n                                    open={Boolean(this.state.anchorHidden)}\n                                    onClose={this.handleClose}\n                                    disableAutoFocusItem={true}\n                                >\n                                    <DropDown\n                                        onClose={this.handleClose}\n                                        folders={this.state.folders.slice(\n                                            0,\n                                            -1\n                                        )}\n                                        navigateTo={this.navigateTo}\n                                    />\n                                </Menu>\n                                <RightIcon className={classes.rightIcon} />\n                                {/* <Button component=\"span\" onClick={(e)=>this.navigateTo(e,this.state.folders.length-1)}>\n                                    {this.state.folders.slice(-1)}  \n                                    <ExpandMore className={classes.expandMore}/>\n                                </Button> */}\n                                <PathButton\n                                    folder={this.state.folders.slice(-1)}\n                                    path={\n                                        \"/\" +\n                                        this.state.folders\n                                            .slice(0, -1)\n                                            .join(\"/\")\n                                    }\n                                    last={true}\n                                    onClick={e =>\n                                        this.navigateTo(\n                                            e,\n                                            this.state.folders.length - 1\n                                        )\n                                    }\n                                />\n                                {presentFolderMenu}\n                            </span>\n                        )}\n                        {!this.state.hiddenMode &&\n                            this.state.folders.map((folder, id, folders) => (\n                                <span key={id}>\n                                    {folder !== \"\" && (\n                                        <span>\n                                            <PathButton\n                                                folder={folder}\n                                                path={\n                                                    \"/\" +\n                                                    folders\n                                                        .slice(0, id)\n                                                        .join(\"/\")\n                                                }\n                                                last={id === folders.length - 1}\n                                                onClick={e =>\n                                                    this.navigateTo(e, id)\n                                                }\n                                            />\n                                            {id === folders.length - 1 &&\n                                                presentFolderMenu}\n                                            {id !== folders.length - 1 && (\n                                                <RightIcon\n                                                    className={\n                                                        classes.rightIcon\n                                                    }\n                                                />\n                                            )}\n                                        </span>\n                                    )}\n                                </span>\n                            ))}\n                    </div>\n                    <div className={classes.optionContainer}>\n                        {this.props.viewMethod === \"icon\" && (\n                            <IconButton\n                                title=\"列表展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewListIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n                        {this.props.viewMethod === \"list\" && (\n                            <IconButton\n                                title=\"小图标展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewSmallIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n\n                        {this.props.viewMethod === \"smallIcon\" && (\n                            <IconButton\n                                title=\"大图标展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewModuleIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n\n                        <IconButton\n                            title=\"排序方式\"\n                            className={classes.sideButton}\n                            onClick={this.showSortOptions}\n                        >\n                            <TextTotateVerticalIcon fontSize=\"small\" />\n                        </IconButton>\n                        <Menu\n                            id=\"sort-menu\"\n                            anchorEl={this.state.anchorSort}\n                            open={Boolean(this.state.anchorSort)}\n                            onClose={this.handleClose}\n                        >\n                            {sortOptions.map((option, index) => (\n                                <MenuItem\n                                    key={option}\n                                    selected={\n                                        index === this.state.selectedIndex\n                                    }\n                                    onClick={event =>\n                                        this.handleMenuItemClick(event, index)\n                                    }\n                                >\n                                    {option}\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                        {this.props.share && (\n                            <IconButton\n                                title={\"保存到我的文件\"}\n                                className={classes.sideButton}\n                                onClick={e =>\n                                    this.props.openResave(this.props.share.key)\n                                }\n                            >\n                                <SaveIcon fontSize=\"small\"/>\n                            </IconButton>\n                        )}\n                        {this.props.share && (\n                            <IconButton\n                                title={\n                                    \"由 \" +\n                                    this.props.share.creator.nick +\n                                    \" 创建\"\n                                }\n                                className={classes.sideButton}\n                                onClick={e =>\n                                    this.props.setShareUserPopover(\n                                        e.currentTarget\n                                    )\n                                }\n                                style={{ padding: 5 }}\n                            >\n                                <Avatar\n                                    style={{ height: 23, width: 23 }}\n                                    src={\"/api/v3/user/avatar/\"+this.props.share.creator.key + \"/s\"}\n                                />\n                            </IconButton>\n                        )}\n                    </div>\n                </div>\n                <Divider />\n            </div>\n        );\n    }\n}\n\nNavigatorComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired\n};\n\nconst Navigator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(NavigatorComponent)));\n\nexport default Navigator;\n","import React from \"react\";\nimport SmallIcon from \"../SmallIcon\";\nimport FileIcon from \"../FileIcon\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    dragging:{\n        width:\"200px\",\n    },\n    cardDragged: {\n        position: \"absolute\",\n        \"transform-origin\": \"bottom left\",\n    },\n}));\n\nconst diliverIcon = (object,viewMethod,classes)=>{\n    return (\n        <>\n            {object.type === \"dir\" && viewMethod !== \"list\" && (\n                <div className={classes.dragging}>\n                <SmallIcon file={object} />\n                </div>\n            )}\n            {object.type === \"file\" && viewMethod === \"icon\" && (\n                <div className={classes.dragging}>\n                    <FileIcon file={object} />\n                </div>\n            )}\n            {object.type === \"file\" &&\n                viewMethod === \"smallIcon\" && (\n                    <div className={classes.dragging}>\n                    <SmallIcon file={object} />\n                    </div>\n                )}\n        </>\n    )\n}\n\nconst Preview = props => {\n    const selected = useSelector(state => state.explorer.selected);\n    const viewMethod = useSelector(\n        state => state.viewUpdate.explorerViewMethod\n    );\n    const classes = useStyles();\n    return (\n        <>\n            {selected.length === 0 && diliverIcon(props.object,viewMethod,classes)}\n            {selected.length>0&&<>\n                {selected.slice(0, 3).map((card, i) => (\n                    <div\n                    key={card.id}\n                    className={classes.cardDragged}\n                    style={{\n                      zIndex: selected.length - i,\n                      transform: `rotateZ(${-i * 2.5}deg)`,\n                    }}\n                  >\n                    {diliverIcon(card,viewMethod,classes)}\n                  </div>\n                ))}\n                </>\n            }\n        </>\n    );\n};\nexport default Preview;\n","import React from 'react'\nimport { useDragLayer } from 'react-dnd'\nimport Preview from './Preview'\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n}\nfunction snapToGrid(x, y) {\n    const snappedX = Math.round(x / 32) * 32\n    const snappedY = Math.round(y / 32) * 32\n    return [snappedX, snappedY]\n}\nfunction getItemStyles(initialOffset, currentOffset, isSnapToGrid) {\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none',\n    }\n  }\n  let { x, y } = currentOffset\n  if (isSnapToGrid) {\n    x -= initialOffset.x\n    y -= initialOffset.y\n    ;[x, y] = snapToGrid(x, y)\n    x += initialOffset.x\n    y += initialOffset.y\n  }\n  const transform = `translate(${x}px, ${y}px)`\n  return {\n    transform,\n    WebkitTransform: transform,\n    opacity:y>200?1:0.4,\n  }\n}\nconst CustomDragLayer = props => {\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset,\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging(),\n  }))\n  function renderItem() {\n    switch (itemType) {\n      case \"object\":\n        return <Preview object={item.object} />\n      default:\n        return null\n    }\n  }\n  if (!isDragging) {\n    return null\n  }\n  return (\n    <div style={layerStyles}>\n      <div\n        style={getItemStyles(initialOffset, currentOffset, props.snapToGrid)}\n      >\n        {renderItem()}\n      </div>\n    </div>\n  )\n}\nexport default CustomDragLayer\n","export const imgPreviewSuffix = [\"bmp\",\"png\",\"gif\",\"jpg\",\"jpeg\",\"svg\",\"webp\"];\nexport const msDocPreviewSuffix = [\"ppt\",\"pptx\",\"pps\",\"doc\",\"docx\",\"xlsx\",\"xls\"];\nexport const audioPreviewSuffix = [\"mp3\",\"ogg\"];\nexport const videoPreviewSuffix = [\"mp4\"];\nexport const directOpenPreviewSuffix = [\"pdf\"];\nexport const editSuffix = [\"md\",\"html\",\"sql\",\"go\",\"py\",\"js\",\"json\",\"c\",\"cpp\",\"css\",\"txt\",\"ini\"];\nexport const mediaType = {\n    audio:[\"mp3\",\"flac\",\"ape\",\"wav\",\"acc\",\"ogg\"],\n    video:[\"mp4\",\"flv\",\"avi\",\"wmv\",\"mkv\",\"rm\",\"rmvb\",\"mov\",\"ogv\"],\n    image:[\"bmp\",\"iff\",\"png\",\"gif\",\"jpg\",\"jpeg\",\"psd\",\"svg\",\"webp\"],\n    pdf:[\"pdf\"],\n    word:[\"doc\",\"docx\"],\n    ppt:[\"ppt\",\"pptx\"],\n    excel:[\"xls\",\"xlsx\",\"csv\"],\n    text:[\"txt\",\"md\",\"html\"],\n    torrent:[\"torrent\"],\n    zip:[\"zip\",\"gz\",\"tar\",\"rar\",\"7z\"],\n    excute:[\"exe\"],\n    android:[\"apk\"],\n    php:[\"php\"],\n    go:[\"go\"],\n    python:[\"py\"],\n    cpp:[\"cpp\"],\n    c:[\"c\"],\n    js:[\"js\",\"jsx\"],\n};\nexport const policyTypeMap = {\n    local:\"本机\",\n    remote:\"从机\",\n    qiniu:\"七牛\",\n    upyun:\"又拍云\",\n    oss:\"阿里云 OSS\",\n    cos:\"腾讯云\",\n    onedrive:\"OneDrive\",\n};\nexport const isPreviewable = name=>{\n    let suffix = name.split(\".\").pop().toLowerCase();\n    if(imgPreviewSuffix.indexOf(suffix)!==-1){\n        return \"img\";\n    }else if(msDocPreviewSuffix.indexOf(suffix)!==-1){\n        return \"msDoc\";\n    }else if(audioPreviewSuffix.indexOf(suffix)!==-1){\n        return \"audio\";\n    }else if(videoPreviewSuffix.indexOf(suffix)!==-1){\n        return \"video\";\n    }else if(editSuffix.indexOf(suffix)!==-1){\n        return \"edit\";\n    }\n    return false;\n}\nexport const isTorrent = name=>{\n    let suffix = name.split(\".\").pop().toLowerCase();\n    if(mediaType.torrent.indexOf(suffix)!==-1){\n        return true;\n    }\n    return false;\n}\n\nexport const isCompressFile = name=>{\n    let suffix = name.split(\".\").pop().toLowerCase();\n    return suffix === \"zip\"\n}\n\nconst taskStatus = [\"排队中\",\"处理中\",\"失败\",\"取消\",\"已完成\"];\nconst taskType = [\"压缩\",\"解压缩\",\"文件中转\"];\nconst taskProgress = [\"等待中\",\"压缩中\",\"解压缩中\",\"下载中\",\"转存中\"];\n\nexport const getTaskStatus = status =>{\n    return taskStatus[status];\n}\n\nexport const getTaskType = status =>{\n    return taskType[status];\n}\n\nexport const getTaskProgress = (type,status) =>{\n    if (type === 2){\n        return \"已完成 \" + (status+1) + \" 个文件\"\n    }\n    return taskProgress[status];\n}","export const navitateTo = path => {\n    return {\n        type: \"NAVIGATOR_TO\",\n        path: path\n    };\n};\n\nexport const navitateUp = () => {\n    return {\n        type: \"NAVIGATOR_UP\"\n    };\n};\n\nexport const drawerToggleAction = open => {\n    return {\n        type: \"DRAWER_TOGGLE\",\n        open: open\n    };\n};\n\nexport const dragAndDrop = (source,target) => {\n    return {\n        type: \"DRAG_AND_DROP\",\n        source: source,\n        target: target,\n    };\n};\n\nexport const changeViewMethod = method => {\n    return {\n        type: \"CHANGE_VIEW_METHOD\",\n        method: method\n    };\n};\n\nexport const changeSubTitle = title =>{\n    return {\n        type: \"CHANGE_SUB_TITLE\",\n        title: title\n    };\n};\n\nexport const toggleDaylightMode = ()=>{\n    return {\n        type: \"TOGGLE_DAYLIGHT_MODE\",\n    };\n};\n\nexport const changeSortMethod = method => {\n    return {\n        type: \"CHANGE_SORT_METHOD\",\n        method: method\n    };\n};\n\nexport const updateFileList = list => {\n    return {\n        type: \"UPDATE_FILE_LIST\",\n        list: list\n    };\n};\n\nexport const changeContextMenu = (type, open) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open\n    };\n};\n\nexport const addSelectedTarget = targets => {\n    return {\n        type: \"ADD_SELECTED_TARGET\",\n        targets: targets\n    };\n};\n\nexport const setSelectedTarget = targets => {\n    return {\n        type: \"SET_SELECTED_TARGET\",\n        targets: targets\n    };\n};\n\nexport const removeSelectedTarget = id => {\n    return {\n        type: \"RMOVE_SELECTED_TARGET\",\n        id: id\n    };\n};\n\nexport const setNavigatorLoadingStatus = status => {\n    return {\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\n        status: status\n    };\n};\n\nexport const setNavigatorError = (status, msg) => {\n    return {\n        type: \"SET_NAVIGATOR_ERROR\",\n        status: status,\n        msg: msg\n    };\n};\n\nexport const openCreateFolderDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FOLDER_DIALOG\"\n    };\n};\n\nexport const setUserPopover = anchor => {\n    return {\n        type: \"SET_USER_POPOVER\",\n        anchor: anchor\n    };\n};\n\nexport const setShareUserPopover = anchor => {\n    return {\n        type: \"SET_SHARE_USER_POPOVER\",\n        anchor: anchor\n    };\n};\n\nexport const openRenameDialog = () => {\n    return {\n        type: \"OPEN_RENAME_DIALOG\"\n    };\n};\n\nexport const openResaveDialog = (key) => {\n    return {\n        type: \"OPEN_RESAVE_DIALOG\",\n        key:key,\n    };\n};\n\nexport const openMoveDialog = () => {\n    return {\n        type: \"OPEN_MOVE_DIALOG\"\n    };\n};\n\nexport const openRemoveDialog = () => {\n    return {\n        type: \"OPEN_REMOVE_DIALOG\"\n    };\n};\n\nexport const openShareDialog = () => {\n    return {\n        type: \"OPEN_SHARE_DIALOG\"\n    };\n};\n\nexport const applyThemes = (theme)=>{\n    return {\n        type:'APPLY_THEME',\n        theme:theme,\n    };\n};\n\nexport const setSessionStatus = (status)=>{\n    return {\n        type:'SET_SESSION_STATUS',\n        status:status,\n    };\n};\n\n\nexport const openMusicDialog = () => {\n    return {\n        type: \"OPEN_MUSIC_DIALOG\"\n    };\n};\n\nexport const openRemoteDownloadDialog = () => {\n    return {\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\"\n    };\n};\n\nexport const openTorrentDownloadDialog = () => {\n    return {\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\"\n    };\n};\n\nexport const openDecompressDialog = () => {\n    return {\n        type: \"OPEN_DECOMPRESS_DIALOG\"\n    };\n};\n\nexport const openCompressDialog = () => {\n    return {\n        type: \"OPEN_COMPRESS_DIALOG\"\n    };\n};\n\nexport const openGetSourceDialog = () => {\n    return {\n        type: \"OPEN_GET_SOURCE_DIALOG\"\n    };\n};\n\nexport const openCopyDialog = () => {\n    return {\n        type: \"OPEN_COPY_DIALOG\"\n    };\n};\n\nexport const openLoadingDialog = (text) => {\n    return {\n        type: \"OPEN_LOADING_DIALOG\",\n        text: text,\n    }\n};\n\nexport const closeAllModals = () => {\n    return {\n        type: \"CLOSE_ALL_MODALS\"\n    };\n};\n\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\n    return {\n        type: \"TOGGLE_SNACKBAR\",\n        vertical: vertical,\n        horizontal: horizontal,\n        msg: msg,\n        color: color\n    };\n};\n\nexport const enableLoadUploader = () => {\n    return {\n        type: \"ENABLE_LOAD_UPLOADER\"\n    };\n};\n\nexport const setModalsLoading = status => {\n    return {\n        type: \"SET_MODALS_LOADING\",\n        status: status\n    };\n};\n\nexport const refreshFileList = () => {\n    return {\n        type: \"REFRESH_FILE_LIST\"\n    };\n};\n\nexport const searchMyFile = keywords => {\n    return {\n        type: \"SEARCH_MY_FILE\",\n        keywords: keywords\n    };\n};\n\nexport const showImgPreivew = first => {\n    return {\n        type: \"SHOW_IMG_PREIVEW\",\n        first: first\n    };\n};\n\nexport const refreshStorage = () => {\n    return {\n        type: \"REFRESH_STORAGE\"\n    };\n};\n\nexport const saveFile = () => {\n    return {\n        type: \"SAVE_FILE\"\n    };\n};\n\nexport const setSiteConfig = config => {\n    return {\n        type: \"SET_SITE_CONFIG\",\n        config: config\n    };\n};\n","import React from \"react\";\nimport { mediaType } from \"../../config\";\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport VideoIcon from \"@material-ui/icons/Videocam\";\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport {\n    Android,\n    FileExcelBox,\n    FilePowerpointBox,\n    FileWordBox, LanguageC, LanguageCpp, LanguageGo, LanguageJavascript, LanguagePhp, LanguagePython,\n    MagnetOn,\n    ScriptText,\n    WindowRestore,\n    ZipBox\n} from \"mdi-material-ui\";\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { Avatar } from \"@material-ui/core\";\n\nconst icons = {\n    audio: {\n        color: \"#651fff\",\n        icon: AudioIcon\n    },\n    video: {\n        color: \"#d50000\",\n        icon: VideoIcon\n    },\n    image: {\n        color: \"#d32f2f\",\n        icon: ImageIcon\n    },\n    pdf: {\n        color: \"#f44336\",\n        icon: PdfIcon\n    },\n    word: {\n        color: \"#538ce5\",\n        icon: FileWordBox\n    },\n    ppt: {\n        color: \"rgb(239, 99, 63)\",\n        icon: FilePowerpointBox\n    },\n    excel: {\n        color: \"#4caf50\",\n        icon: FileExcelBox\n    },\n    text: {\n        color: \"#607d8b\",\n        icon: ScriptText\n    },\n    torrent: {\n        color: \"#5c6bc0\",\n        icon: MagnetOn\n    },\n    zip: {\n        color: \"#f9a825\",\n        icon: ZipBox\n    },\n    excute: {\n        color: \"#1a237e\",\n        icon: WindowRestore\n    },\n    android: {\n        color: \"#8bc34a\",\n        icon: Android\n    },\n    file: {\n        color: \"#607d8b\",\n        icon: FileShowIcon\n    },\n    php: {\n        color: \"#777bb3\",\n        icon: LanguagePhp\n    },\n    go: {\n        color: \"#16b3da\",\n        icon: LanguageGo\n    },\n    python:{\n        color: \"#3776ab\",\n        icon: LanguagePython\n    },\n    c:{\n        color: \"#a8b9cc\",\n        icon: LanguageC,\n    },\n    cpp:{\n        color: \"#004482\",\n        icon: LanguageCpp,\n    },\n    js:{\n        color: \"#f4d003\",\n        icon: LanguageJavascript,\n    },\n};\n\nconst getColor = (theme, color) =>\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\n\nlet color;\n\nconst TypeIcon = props => {\n    const theme = useTheme();\n\n    let fileSuffix = props.fileName\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    let fileType = \"file\";\n    Object.keys(mediaType).forEach(k => {\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\n            fileType = k;\n        }\n    });\n    let IconComponent = icons[fileType].icon;\n    color = getColor(theme, icons[fileType].color);\n    if (props.getColorValue) {\n        props.getColorValue(color);\n    }\n\n    return (\n        <>\n            {props.isUpload && (\n                <Avatar\n                    className={props.className}\n                    style={{\n                        backgroundColor: color\n                    }}\n                >\n                    <IconComponent\n                        style={{\n                            color: theme.palette.background.paper,\n                        }}\n                    />\n                </Avatar>\n            )}\n            {!props.isUpload && (\n                <IconComponent\n                    className={props.className}\n                    style={{\n                        color: color\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TypeIcon;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport Auth from \"./Auth\"\nimport {\n    Route,\n    Redirect,\n  } from \"react-router-dom\";\n\nfunction AuthRoute({ children, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n        Auth.Check(rest.isLogin) ? (\n            children\n          ) : (\n            window.location.href='/index.php'\n          )\n        }\n      />\n    );\n  }\n\nexport default AuthRoute","import React from \"react\";\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport {lighten, makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme=>({\n    icon:{\n        fontSize: \"160px\",\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: lighten(theme.palette.text.disabled,0.4),\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: lighten(theme.palette.text.disabled,0.4),\n    },\n}));\n\nexport default function Notice(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.emptyContainer}>\n            <SentimentVeryDissatisfiedIcon className={classes.icon}/>\n            <div className={classes.emptyInfoBig}>\n                {props.msg}\n            </div>\n        </div>\n\n    )\n}","import React from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nconst MyLoader = () => (\n    <ContentLoader \n      height={80}\n      width={200}\n      speed={2}\n      primaryColor=\"#f3f3f3\"\n      secondaryColor=\"#e4e4e4\"\n    >\n      <rect x=\"4\" y=\"4\" rx=\"7\" ry=\"7\" width=\"392\" height=\"116\" />\n    </ContentLoader>\n)\n\nfunction captchaPlacholder (){\n    return (<MyLoader />)\n}\n\nexport default captchaPlacholder","import {setSiteConfig, toggleSnackbar, enableLoadUploader, changeViewMethod} from \"../actions/index\"\nimport { fixUrlHash } from \"../untils/index\"\nimport API from \"./Api\"\nimport Auth from \"./Auth\"\nimport pathHelper from \"../untils/page\";\nexport var InitSiteConfig = (rawStore) => {\n    // 从缓存获取默认配置\n    let configCache = JSON.parse(localStorage.getItem('siteConfigCache'));\n    if (configCache != null) {\n        rawStore.siteConfig = configCache\n    }\n    // 检查是否有path参数\n    var url = new URL(fixUrlHash(window.location.href));\n    var c = url.searchParams.get(\"path\");\n    rawStore.navigator.path = c===null?\"/\":c;\n    // 初始化用户个性配置\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\n    // 是否登录\n    rawStore.viewUpdate.isLogin = Auth.Check();\n\n    // 更改站点标题\n    document.title = rawStore.siteConfig.title;\n    return rawStore\n}\n\nconst initUserConfig = (siteConfig) => {\n    if (siteConfig.user!==undefined && !siteConfig.user.anonymous){\n        let themes = JSON.parse(siteConfig.themes);\n        let user = siteConfig.user;\n        delete siteConfig.user\n    \n        //更换用户自定配色\n        if (user[\"preferred_theme\"] !== \"\" && themes[user[\"preferred_theme\"]] !== undefined){\n            siteConfig.theme = themes[user[\"preferred_theme\"]]\n        }\n\n        // 更新登录态\n        Auth.authenticate(user);\n    }\n    if (siteConfig.user!==undefined &&siteConfig.user.anonymous){\n        Auth.SetUser(siteConfig.user);\n    }\n    return siteConfig\n}\n\nexport function enableUploaderLoad(){\n    // 开启上传组件加载\n    let user = Auth.GetUser();\n    window.policyType = user!==null?user.policy.saveType : \"local\";\n    window.uploadConfig = user!==null?user.policy:{};\n    window.pathCache = [];\n}\n\nexport async function UpdateSiteConfig(store) {\n    API.get(\"/site/config\").then(function(response) {\n        let themes = JSON.parse(response.data.themes);\n        response.data.theme = themes[response.data.defaultTheme]\n        response.data = initUserConfig(response.data)\n        store.dispatch(setSiteConfig(response.data));\n        localStorage.setItem('siteConfigCache', JSON.stringify(response.data));\n\n        // 偏爱的列表样式\n        let preferListMethod = Auth.GetPreference(\"view_method\");\n        if(preferListMethod){\n            store.dispatch(changeViewMethod(preferListMethod));\n        }else{\n            let path = window.location.hash.split(\"#\");\n            if(path.length >=1 && pathHelper.isSharePage(path[1])){\n                store.dispatch(changeViewMethod(response.data.share_view_method));\n            }else{\n                store.dispatch(changeViewMethod(response.data.home_view_method));\n            }\n        }\n\n    }).catch(function(error) {\n        store.dispatch(toggleSnackbar(\"top\", \"right\", \"无法加载站点配置：\" + error.message, \"error\"));\n    }).then(function () {\n        enableUploaderLoad(store);\n        store.dispatch(enableLoadUploader())\n    });\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ReCAPTCHA extends React.Component {\n    constructor() {\n        super();\n        this.handleExpired = this.handleExpired.bind(this);\n        this.handleErrored = this.handleErrored.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\n    }\n\n    getValue() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this.props.grecaptcha.getResponse(this._widgetId);\n        }\n        return null;\n    }\n\n    getWidgetId() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this._widgetId;\n        }\n        return null;\n    }\n\n    execute() {\n        const { grecaptcha } = this.props;\n\n        if (grecaptcha && this._widgetId !== undefined) {\n            return grecaptcha.execute(this._widgetId);\n        } else {\n            this._executeRequested = true;\n        }\n    }\n\n    reset() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            this.props.grecaptcha.reset(this._widgetId);\n        }\n    }\n\n    handleExpired() {\n        if (this.props.onExpired) {\n            this.props.onExpired();\n        } else {\n            this.handleChange(null);\n        }\n    }\n\n    handleErrored() {\n        if (this.props.onErrored) this.props.onErrored();\n    }\n\n    handleChange(token) {\n        if (this.props.onChange) this.props.onChange(token);\n    }\n\n    explicitRender() {\n        if (this.props.grecaptcha && this.props.grecaptcha.render && this._widgetId === undefined) {\n            const wrapper = document.createElement(\"div\");\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\n                sitekey: this.props.sitekey,\n                callback: this.handleChange,\n                theme: this.props.theme,\n                type: this.props.type,\n                tabindex: this.props.tabindex,\n                \"expired-callback\": this.handleExpired,\n                \"error-callback\": this.handleErrored,\n                size: this.props.size,\n                stoken: this.props.stoken,\n                hl: this.props.hl,\n                badge: this.props.badge,\n            });\n            this.captcha.appendChild(wrapper);\n        }\n        if (this._executeRequested && this.props.grecaptcha && this._widgetId !== undefined) {\n            this._executeRequested = false;\n            this.execute();\n        }\n    }\n\n    componentDidMount() {\n        this.explicitRender();\n    }\n\n    componentDidUpdate() {\n        this.explicitRender();\n    }\n\n    componentWillUnmount() {\n        if (this._widgetId !== undefined) {\n            this.delayOfCaptchaIframeRemoving();\n            this.reset();\n        }\n    }\n\n    delayOfCaptchaIframeRemoving() {\n        const temporaryNode = document.createElement(\"div\");\n        document.body.appendChild(temporaryNode);\n        temporaryNode.style.display = \"none\";\n\n        // move of the recaptcha to a temporary node\n        while (this.captcha.firstChild) {\n            temporaryNode.appendChild(this.captcha.firstChild);\n        }\n\n        // delete the temporary node after reset will be done\n        setTimeout(() => {\n            document.body.removeChild(temporaryNode);\n        }, 5000);\n    }\n\n    handleRecaptchaRef(elem) {\n        this.captcha = elem;\n    }\n\n    render() {\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n        /* eslint-disable no-unused-vars */\n        const {\n            sitekey,\n            onChange,\n            theme,\n            type,\n            tabindex,\n            onExpired,\n            onErrored,\n            size,\n            stoken,\n            grecaptcha,\n            badge,\n            hl,\n            ...childProps\n        } = this.props;\n        /* eslint-enable no-unused-vars */\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\n    }\n}\n\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n    sitekey: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    grecaptcha: PropTypes.object,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\n    tabindex: PropTypes.number,\n    onExpired: PropTypes.func,\n    onErrored: PropTypes.func,\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n    stoken: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\n};\nReCAPTCHA.defaultProps = {\n    onChange: () => {},\n    theme: \"light\",\n    type: \"image\",\n    tabindex: 0,\n    size: \"normal\",\n    badge: \"bottomright\",\n};","import ReCAPTCHA from \"./ReCaptchaWrapper\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nconst callbackName = \"onloadcallback\";\nconst globalName = \"grecaptcha\";\n\nfunction getURL() {\n    const hostname = \"recaptcha.net\";\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\n}\n\nexport default makeAsyncScriptLoader(getURL, {\n    callbackName,\n    globalName,\n})(ReCAPTCHA);","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    applyThemes,\n    setSessionStatus\n} from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport { bufferDecode, bufferEncode } from \"../../untils/index\";\nimport { enableUploaderLoad } from \"../../middleware/Init\";\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport {useLocation} from \"react-router\";\nimport ReCaptcha from \"./ReCaptcha\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n    captchaPlaceholder: {\n        width: 200,\n    },\n    buttonContainer: {\n        display: \"flex\"\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction LoginForm() {\n    const [email, setEmail] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const [captcha, setCaptcha] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [useAuthn, setUseAuthn] = useState(false);\n    const [captchaData, setCaptchaData] = useState(null);\n    const [twoFA,setTwoFA] = useState(false);\n    const [faCode,setFACode] = useState(\"\");\n\n    const loginCaptcha = useSelector(state => state.siteConfig.loginCaptcha);\n    const useReCaptcha = useSelector(state => state.siteConfig.captcha_IsUseReCaptcha);\n    const reCaptchaKey = useSelector(state => state.siteConfig.captcha_ReCaptchaKey);\n    const title = useSelector(state => state.siteConfig.title);\n    const QQLogin = useSelector(state => state.siteConfig.QQLogin);\n    const authn = useSelector(state => state.siteConfig.authn);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const ApplyThemes = useCallback(theme => dispatch(applyThemes(theme)), [\n        dispatch\n    ]);\n    const SetSessionStatus = useCallback(\n        status => dispatch(setSessionStatus(status)),\n        [dispatch]\n    );\n\n    let history = useHistory();\n    let location = useLocation();\n    let query = useQuery();\n\n    const classes = useStyles();\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useEffect(() => {\n        setEmail(query.get(\"username\"));\n        if (loginCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n    }, [location,loginCaptcha]);\n\n    const authnLogin = e => {\n        e.preventDefault();\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n\n        setLoading(true);\n\n        API.get(\"/user/authn/\" + email)\n            .then(response => {\n                let credentialRequestOptions = response.data;\n                console.log(credentialRequestOptions);\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\n                    credentialRequestOptions.publicKey.challenge\n                );\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\n                    function(listItem) {\n                        listItem.id = bufferDecode(listItem.id);\n                    }\n                );\n\n                return navigator.credentials.get({\n                    publicKey: credentialRequestOptions.publicKey\n                });\n            })\n            .then(assertion => {\n                let authData = assertion.response.authenticatorData;\n                let clientDataJSON = assertion.response.clientDataJSON;\n                let rawId = assertion.rawId;\n                let sig = assertion.response.signature;\n                let userHandle = assertion.response.userHandle;\n\n                return API.post(\n                    \"/user/authn/finish/\" + email,\n                    JSON.stringify({\n                        id: assertion.id,\n                        rawId: bufferEncode(rawId),\n                        type: assertion.type,\n                        response: {\n                            authenticatorData: bufferEncode(authData),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                            signature: bufferEncode(sig),\n                            userHandle: bufferEncode(userHandle)\n                        }\n                    })\n                );\n            })\n            .then(response => {\n                afterLogin(response.data)\n            })\n            .catch(error => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const afterLogin = data =>{\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n        enableUploaderLoad();\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        history.push(\"/home\");\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    }\n\n    const login = e => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/session\", {\n            userName: email,\n            Password: pwd,\n            captchaCode: captcha\n        })\n            .then(response => {\n                setLoading(false);\n                if (response.rawData.code === 203){\n                    setTwoFA(true);\n                }else{\n                    afterLogin(response.data)\n                }\n\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha) {\n                    refreshCaptcha();\n                }\n            });\n    };\n\n    const initQQLogin = e =>{\n        setLoading(true);\n        API.post(\"/user/qq\")\n            .then(response => {\n                window.location.href = response.data\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    const twoFALogin = e =>{\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/2fa\",{\n            code:faCode,\n        })\n            .then(response => {\n                setLoading(false);\n                afterLogin(response.data)\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            {!twoFA &&\n            <>\n                <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    登录 {title}\n                </Typography>\n                {!useAuthn && (\n                    <form className={classes.form} onSubmit={login}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"email\">电子邮箱</InputLabel>\n                            <Input\n                                id=\"email\"\n                                type=\"email\"\n                                name=\"email\"\n                                onChange={e => setEmail(e.target.value)}\n                                autoComplete\n                                value={email}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"password\">密码</InputLabel>\n                            <Input\n                                name=\"password\"\n                                onChange={e => setPwd(e.target.value)}\n                                type=\"password\"\n                                id=\"password\"\n                                value={pwd}\n                                autoComplete\n                            />\n                        </FormControl>\n                        {loginCaptcha && !useReCaptcha && (\n                            <div className={classes.captchaContainer}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"captcha\">\n                                        验证码\n                                    </InputLabel>\n                                    <Input\n                                        name=\"captcha\"\n                                        onChange={e =>\n                                            setCaptcha(e.target.value)\n                                        }\n                                        type=\"text\"\n                                        id=\"captcha\"\n                                        value={captcha}\n                                        autoComplete\n                                    />\n                                </FormControl>{\" \"}\n                                <div>\n                                    {captchaData === null && (\n                                        <div\n                                            className={\n                                                classes.captchaPlaceholder\n                                            }\n                                        >\n                                            <Placeholder />\n                                        </div>\n                                    )}\n                                    {captchaData !== null && (\n                                        <img\n                                            src={captchaData}\n                                            alt=\"captcha\"\n                                            onClick={refreshCaptcha}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                        {loginCaptcha && useReCaptcha && (\n                            <div className={classes.captchaContainer}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <div>\n                                        <ReCaptcha\n                                            style={{ display: \"inline-block\" }}\n                                            sitekey={reCaptchaKey}\n                                            onChange={value =>\n                                                setCaptcha(value)\n                                            }\n                                            id=\"captcha\"\n                                            name=\"captcha\"\n                                        />\n                                    </div>\n                                </FormControl>{\" \"}\n                            </div>\n                        )}\n                        {QQLogin && (\n                            <div className={classes.buttonContainer}>\n                                <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    className={classes.submit}\n                                >\n                                    登录\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    style={{ marginLeft: \"10px\" }}\n                                    disabled={loading}\n                                    className={classes.submit}\n                                    onClick={initQQLogin}\n                                >\n                                    使用QQ登录\n                                </Button>\n                            </div>\n                        )}\n                        {!QQLogin && (\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                                className={classes.submit}\n                            >\n                                登录\n                            </Button>\n                        )}\n                    </form>\n                )}\n                {useAuthn && (\n                    <form className={classes.form}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"email\">电子邮箱</InputLabel>\n                            <Input\n                                id=\"email\"\n                                type=\"email\"\n                                name=\"email\"\n                                onChange={e => setEmail(e.target.value)}\n                                autoComplete\n                                value={email}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            onClick={authnLogin}\n                            className={classes.submit}\n                        >\n                            下一步\n                        </Button>\n                    </form>\n                )}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/#/forget\"}>忘记密码</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/#/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n\n                {authn &&<div className={classes.authnLink}>\n                    <Button color=\"primary\" onClick={() => setUseAuthn(!useAuthn)}>\n                        {!useAuthn && (\n                            <>\n                                <Fingerprint\n                                    style={{\n                                        marginRight: 8\n                                    }}\n                                />\n                                使用外部验证器登录\n                            </>\n                        )}\n                        {useAuthn && (\n                            <>\n                                <VpnKey\n                                    style={{\n                                        marginRight: 8\n                                    }}\n                                />\n                                使用密码登录\n                            </>\n                        )}\n                    </Button>\n                </div>}\n            </>\n            }\n            {twoFA &&\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <VpnIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    二步验证\n                </Typography>\n                <form className={classes.form} onSubmit={twoFALogin}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"code\">请输入六位二步验证代码</InputLabel>\n                        <Input\n                            id=\"code\"\n                            type=\"number\"\n                            name=\"code\"\n                            onChange={(event)=>setFACode(event.target.value )}\n                            autoComplete\n                            value={faCode}\n                            autoFocus />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        继续登录\n                    </Button>  </form>                          <Divider/>\n\n            </Paper>\n            }\n\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import React, { useCallback, useEffect } from \"react\";\nimport DPlayer from \"react-dplayer\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { getBaseURL } from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle } from \"../../actions\";\nimport pathHelper from \"../../untils/page\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 50\n    },\n    player: {\n        borderRadius: \"4px\",\n        maxHeight:600,\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function VideoViewer(props) {\n    const math = useRouteMatch();\n    let location = useLocation();\n    let query = useQuery();\n    let { id } = useParams();\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            let path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <DPlayer\n                    className={classes.player}\n                    options={{\n                        video: {\n                            url:\n                                getBaseURL() +\n                                (pathHelper.isSharePage(location.pathname)\n                                    ? \"/share/preview/\" +\n                                      id +\n                                      (query.get(\"share_path\") !== \"\"\n                                          ? \"?path=\" +\n                                            encodeURIComponent(\n                                                query.get(\"share_path\")\n                                            )\n                                          : \"\")\n                                    : \"/file/preview/\" + query.get(\"id\"))\n                        }\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {  useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport {\n    Tooltip,\n    Card,\n    Avatar,\n    CardHeader,\n    Typography,\n    Grid,\n    IconButton,\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {useHistory} from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        padding: theme.spacing(1)\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\"\n    },\n    actions: {\n        display: \"flex\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\"\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function SearchResult(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    let query = useQuery();\n    let location = useLocation();\n    let history = useHistory();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        let keywords = query.get(\"keywords\");\n        if (keywords) {\n            search(keywords, page, orderBy);\n        } else {\n            ToggleSnackbar(\"top\", \"right\", \"请输入搜索关键词\", \"warning\");\n        }\n    }, [location]);\n\n    const [page, setPage] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [shareList, setShareList] = useState([]);\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\n\n    const search = (keywords, page, orderBy) => {\n        let order = orderBy.split(\" \");\n        API.get(\n            \"/share/search?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1] +\n                \"&keywords=\" +\n                encodeURIComponent(keywords)\n        )\n            .then(response => {\n                if (response.data.items.length === 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"找不到符合条件的分享\",\n                        \"info\"\n                    );\n                }\n                setTotal(response.data.total);\n                setShareList(response.data.items);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    };\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n        let keywords = query.get(\"keywords\");\n        search(keywords, value, orderBy);\n    };\n\n    const handleOrderChange = event => {\n        setOrderBy(event.target.value);\n        let keywords = query.get(\"keywords\");\n        search(keywords, page, event.target.value);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Grid container>\n                <Grid sm={6} xs={6}>\n                    <Typography color=\"textSecondary\" variant=\"h4\">\n                        搜索结果\n                    </Typography>\n                </Grid>\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\n                    <FormControl>\n                        <Select\n                            color={\"secondary\"}\n                            onChange={handleOrderChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value={\"created_at DESC\"}>\n                                创建日期由晚到早\n                            </MenuItem>\n                            <MenuItem value={\"created_at ASC\"}>\n                                创建日期由早到晚\n                            </MenuItem>\n                            <MenuItem value={\"downloads DESC\"}>\n                                下载次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"downloads ASC\"}>\n                                下载次数由小到大\n                            </MenuItem>\n                            <MenuItem value={\"views DESC\"}>\n                                浏览次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"views ASC\"}>\n                                浏览次数由小到大\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid container spacing={24} className={classes.gird}>\n                {shareList.map(value => (\n                    <Grid\n                        item\n                        xs={12}\n                        sm={4}\n                        key={value.id}\n                        className={classes.cardContainer}\n                    >\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <div>\n                                        {!value.is_dir && (\n                                            <TypeIcon\n                                                fileName={\n                                                    value.source\n                                                        ? value.source.name\n                                                        : \"\"\n                                                }\n                                                isUpload\n                                            />\n                                        )}{\" \"}\n                                        {value.is_dir && (\n                                            <Avatar\n                                                className={classes.avatarFolder}\n                                            >\n                                                <FolderIcon />\n                                            </Avatar>\n                                        )}\n                                    </div>\n                                }\n                                action={\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                history.push(\n                                                    \"/s/\" +\n                                                        value.key\n                                                )\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                title={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"\n                                        }\n                                    >\n                                        <Typography\n                                            noWrap\n                                            className={classes.shareTitle}\n                                        >\n                                            {value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"}{\" \"}\n                                        </Typography>\n                                    </Tooltip>\n                                }\n                                subheader={<span>分享于{\" \"}<TimeAgo\n                                    datetime={value.create_date}\n                                    locale=\"zh_CN\"\n                                /></span>}\n                            />\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.loadMore}>\n                <Pagination\n                    count={Math.ceil(total / 18)}\n                    onChange={handlePageChange}\n                    color=\"secondary\"\n                />\n            </div>{\" \"}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n    withStyles,\n    Tooltip,\n    Card,\n    Avatar,\n    CardHeader,\n    CardActions,\n    Typography,\n    Grid,\n    IconButton,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Button,\n    TextField\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {withRouter} from \"react-router-dom\";\n\nconst styles = theme => ({\n    cardContainer: {\n        padding: theme.spacing(1)\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\"\n    },\n    actions: {\n        display: \"flex\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\"\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17\n    },\n    orderSelect:{\n        textAlign:\"right\",\n        marginTop: 5,\n    }\n});\nconst mapStateToProps = state => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass MyShareCompoment extends Component {\n    state = {\n        page: 1,\n        total: 0,\n        shareList: [],\n        showPwd: null,\n        orderBy:\"created_at DESC\",\n    };\n\n    componentDidMount = () => {\n        this.loadList(1,this.state.orderBy);\n    };\n\n    showPwd = pwd => {\n        this.setState({ showPwd: pwd });\n    };\n\n    handleClose = () => {\n        this.setState({ showPwd: null });\n    };\n\n    removeShare = (id) => {\n        API\n            .delete(\"/share/\"+id)\n            .then(response => {\n                    let oldList = this.state.shareList;\n                    oldList = oldList.filter(value => {\n                        return value.key !== id;\n                    });\n                    this.setState({\n                        shareList: oldList,\n                        total:this.state.total-1,\n                    });\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"分享已取消\",\n                        \"success\"\n                    );\n                    if (oldList.length === 0){\n                        this.loadList(1,this.state.orderBy);\n                    }\n\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    changePermission = id => {\n        let newPwd = Math.random()\n            .toString(36)\n            .substr(2)\n            .slice(2, 8);\n        let oldList = this.state.shareList;\n        let shareIndex = oldList.findIndex(value => {\n            return value.key === id;\n        });\n        API\n            .patch(\"/share/\"+id, {\n                prop:\"password\",\n                value:oldList[shareIndex].password === \"\" ? newPwd : \"\",\n            })\n            .then(response => {\n                oldList[shareIndex].password = response.data;\n                this.setState({\n                    shareList: oldList\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    changePreviewOption = id => {\n        let oldList = this.state.shareList;\n        let shareIndex = oldList.findIndex(value => {\n            return value.key === id;\n        });\n        API\n            .patch(\"/share/\"+id, {\n                prop:\"preview_enabled\",\n                value:oldList[shareIndex].preview?\"false\":\"true\",\n            })\n            .then(response => {\n                oldList[shareIndex].preview = response.data;\n                this.setState({\n                    shareList: oldList\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    loadList = (page,orderBy) => {\n        let order = orderBy.split(\" \");\n        API.get(\"/share?page=\" + page + \"&order_by=\" + order[0] + \"&order=\" + order[1])\n            .then(response => {\n                if (response.data.items.length === 0) {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"没有更多了\",\n                        \"info\"\n                    );\n                }\n                this.setState({\n                    total: response.data.total,\n                    shareList: response.data.items\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    };\n\n    handlePageChange = (event, value) => {\n        this.setState({\n            page: value\n        });\n        this.loadList(value,this.state.orderBy);\n    };\n\n    handleOrderChange =  event => {\n        this.setState({\n            orderBy:event.target.value,\n        });\n        this.loadList(this.state.page,event.target.value);\n    };\n\n    isExpired = share => {\n        return share.expire < -1 || share.remain_downloads === 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Grid container>\n                    <Grid sm={6} xs={6}>\n                        <Typography color=\"textSecondary\" variant=\"h4\">\n\n                            我的分享\n                        </Typography>\n                        </Grid>\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\n                        <FormControl>\n                            <Select color={\"secondary\"}  onChange={this.handleOrderChange} value={this.state.orderBy}>\n                                <MenuItem value={\"created_at DESC\"}>创建日期由晚到早</MenuItem>\n                                <MenuItem value={\"created_at ASC\"}>创建日期由早到晚</MenuItem>\n                                <MenuItem value={\"downloads DESC\"}>下载次数由大到小</MenuItem>\n                                <MenuItem value={\"downloads ASC\"}>下载次数由小到大</MenuItem>\n                                <MenuItem value={\"views DESC\"}>浏览次数由大到小</MenuItem>\n                                <MenuItem value={\"views ASC\"}>浏览次数由小到大</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={24} className={classes.gird}>\n                    {this.state.shareList.map(value => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={4}\n                            key={value.id}\n                            className={classes.cardContainer}\n                        >\n                            <Card className={classes.card}>\n                                <CardHeader\n                                    avatar={\n                                        <div>\n                                            {!value.is_dir && (\n                                                <TypeIcon\n                                                    fileName={\n                                                        value.source\n                                                            ? value.source.name\n                                                            : \"\"\n                                                    }\n                                                    isUpload\n                                                />\n                                            )}{\" \"}\n                                            {value.is_dir && (\n                                                <Avatar\n                                                    className={\n                                                        classes.avatarFolder\n                                                    }\n                                                >\n                                                    <FolderIcon />\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    }\n                                    title={\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={\n                                                value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"\n                                            }\n                                        >\n                                            <Typography\n                                                noWrap\n                                                className={classes.shareTitle}\n                                            >\n                                                {value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"}{\" \"}\n                                            </Typography>\n                                        </Tooltip>\n                                    }\n                                    subheader={\n                                        <span>\n                                            {value.create_date}\n                                            {this.isExpired(value) && (\n                                                <Chip\n                                                    size=\"small\"\n                                                    className={classes.badge}\n                                                    label=\"已失效\"\n                                                />\n                                            )}\n                                        </span>\n                                    }\n                                />\n                                <Divider />\n                                <CardActions\n                                    disableActionSpacing\n                                    style={{\n                                        display: \"block\",\n                                        textAlign: \"right\"\n                                    }}\n                                >\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\"/s/\"+value.key + (value.password === \"\" ?\"\":\"?password=\" + value.password))\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>{\" \"}\n                                    {value.password !== \"\" && (\n                                        <>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"变更为公开分享\"\n                                                onClick={() =>\n                                                    this.changePermission(\n                                                        value.key\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <LockIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"查看密码\"\n                                                onClick={() =>\n                                                    this.showPwd(\n                                                        value.password\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <VpnKey />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                    {value.password === \"\" && (\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title=\"变更为私密分享\"\n                                            onClick={() =>\n                                                this.changePermission(\n                                                    value.key\n                                                )\n                                            }\n                                        >\n                                            <IconButton>\n                                                <UnlockIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.preview\n                                                ? \"禁止预览\"\n                                                : \"允许预览\"\n                                        }\n                                        onClick={() =>\n                                            this.changePreviewOption(\n                                                value.key\n                                            )\n                                        }\n                                    >\n                                        <IconButton>\n                                            {!value.preview ? (\n                                                <VisibilityOff />\n                                            ) : (\n                                                <EyeIcon />\n                                            )}\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title=\"取消分享\"\n                                        onClick={() =>\n                                            this.removeShare(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.loadMore}>\n                    <Pagination\n                            count={Math.ceil(this.state.total / 18)}\n                            onChange={this.handlePageChange}\n                            color=\"secondary\"\n                        />\n                </div>{\" \"}\n                <Dialog\n                    open={this.state.showPwd !== null}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> 分享密码 </DialogTitle>{\" \"}\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            value={this.state.showPwd}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>{\" \"}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭{\" \"}\n                        </Button>{\" \"}\n                    </DialogActions>{\" \"}\n                </Dialog>{\" \"}\n            </div>\n        );\n    }\n}\n\nconst MyShare = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(MyShareCompoment)));\n\nexport default MyShare;\n","import React, {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    },\n    content:{\n        padding:0,\n    }\n}));\n\nexport default function SelectFileDialog(props) {\n    const [files,setFiles] = useState(props.files);\n\n    useEffect(()=>{\n        setFiles(props.files);\n    },[props.files]);\n\n\n    const handleChange = index => event =>{\n        let filesCopy = [...files];\n        // eslint-disable-next-line\n        filesCopy.map((v,k)=>{\n            if (v.index === index){\n                filesCopy[k] = {...filesCopy[k],selected:event.target.checked ? \"true\" : \"false\"};\n            }\n        });\n        setFiles(filesCopy);\n    };\n\n    const submit = e =>{\n        let index = [];\n        // eslint-disable-next-line\n        files.map(v=>{\n            if(v.selected === \"true\"){\n                index.push(parseInt(v.index));\n            }\n        });\n        props.onSubmit(index);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">选择要下载的文件</DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                {files.map((v, k) => {\n                    return (\n                        <MenuItem key={k}>\n                        <FormGroup row>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        onChange={handleChange(v.index)}\n                                        checked={v.selected === \"true\"}\n                                        value=\"checkedA\"\n                                    />\n                                }\n                                label={v.path}\n                            />\n                        </FormGroup></MenuItem>\n                    );\n                })}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button color=\"primary\" onClick={submit} disabled={props.modalsLoading}>\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport {\n    Card,\n    CardContent,\n    darken,\n    IconButton,\n    lighten,\n    LinearProgress,\n    makeStyles,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { hex2bin, sizeToString } from \"../../untils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport API from \"../../middleware/Api\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TimeAgo from \"timeago-react\";\nimport SelectFileDialog from \"../Modals/SelectFile\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {}\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\"\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\"\n        }\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    iconBig: {\n        fontSize: \"30px\"\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\"\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\"\n    },\n    expanded: {\n        transform: \"rotate(180deg)\"\n    },\n    subFileName: {\n        display: \"flex\"\n    },\n    subFileIcon: {\n        marginRight: \"20px\"\n    },\n    scroll: {\n        overflowY: \"auto\"\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\"\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1)\n    },\n    info: {\n        padding: theme.spacing(2)\n    },\n    infoTitle: {\n        fontWeight: 700\n    },\n    infoValue: {\n        color: theme.palette.text.secondary\n    },\n    bitmap: {\n        width: \"100%\",\n        height: \"50px\",\n        backgroundColor: theme.palette.background.default\n    }\n}));\n\nexport default function DownloadingCard(props) {\n    let canvasRef = React.createRef();\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [expanded, setExpanded] = React.useState(\"\");\n    const [task, setTask] = React.useState(props.task);\n    const [loading, setLoading] = React.useState(false);\n    const [selectDialogOpen,setSelectDialogOpen] = React.useState(false);\n\n    const handleChange = panel => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    useEffect(() => {\n        if (task.info.bitfield === \"\") {\n            return;\n        }\n        let result = \"\";\n        task.info.bitfield.match(/.{1,2}/g).forEach(str => {\n            result += hex2bin(str);\n        });\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = theme.palette.primary.main;\n        for (let i = 0; i < canvas.width; i++) {\n            let bit =\n                result[Math.round(((i + 1) / canvas.width) * task.info.numPieces)];\n            bit = bit ? bit : result.slice(-1);\n            if (bit === \"1\") {\n                context.beginPath();\n                context.moveTo(i, 0);\n                context.lineTo(i, canvas.height);\n                context.stroke();\n            }\n        }\n        // eslint-disable-next-line\n    }, [task.info.bitfield,task.info.numPieces, theme]);\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const deleteFile = index => {\n        setLoading(true);\n        let current = activeFiles();\n        let newIndex = [];\n        let newFiles = [];\n        // eslint-disable-next-line\n        current.map(v => {\n            if (v.index !== index && v.selected) {\n                newIndex.push(parseInt(v.index));\n                newFiles.push({\n                    ...v,\n                    selected: \"true\"\n                });\n            } else {\n                newFiles.push({\n                    ...v,\n                    selected: \"false\"\n                });\n            }\n        });\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: newIndex\n        })\n            .then(response => {\n                setTask({\n                    ...task,\n                    info: {\n                        ...task.info,\n                        files: newFiles\n                    }\n                });\n                ToggleSnackbar(\"top\", \"right\", \"文件已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        if (task.info.bittorrent.info.name !== \"\") {\n            return task.info.bittorrent.info.name;\n        }\n        return task.name === \".\" ? \"[未知]\" : task.name;\n    }, [task]);\n\n    const activeFiles = useCallback(() => {\n        return task.info.files.filter(v => v.selected === \"true\");\n    }, [task.info.files]);\n\n    const getIcon = useCallback(() => {\n        if (task.info.bittorrent.mode === \"multi\") {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(task)}\n                />\n            );\n        }\n        // eslint-disable-next-line\n    }, [task, classes]);\n\n    const cancel = e => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + task.info.gid, )\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"任务已取消，状态会在稍后更新\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const changeSelectedFile = fileIndex =>{\n        setLoading(true);\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: fileIndex\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"操作成功，状态会在稍后更新\", \"success\");\n                setSelectDialogOpen(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Card className={classes.card}>\n            <SelectFileDialog\n                open = {selectDialogOpen}\n                onClose ={()=>setSelectDialogOpen(false)}\n                modalsLoading={loading}\n                files={props.task.info.files}\n                onSubmit={changeSelectedFile}\n            />\n            <ExpansionPanel\n                square\n                expanded={expanded === task.info.gid}\n                onChange={handleChange(task.info.gid)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        <LinearProgress\n                            color=\"secondary\"\n                            variant=\"determinate\"\n                            className={classes.progress}\n                            value={getPercent(task.downloaded, task.total)}\n                        />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            noWrap\n                        >\n                            {task.total > 0 && (\n                                <span>\n                                    {getPercent(\n                                        task.downloaded,\n                                        task.total\n                                    ).toFixed(2)}\n                                    % -{\" \"}\n                                    {task.downloaded === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.downloaded)}\n                                    /\n                                    {task.total === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.total)}{\" \"}\n                                    -{\" \"}\n                                    {task.speed === \"0\"\n                                        ? \"0B/s\"\n                                        : sizeToString(task.speed) + \"/s\"}\n                                </span>\n                            )}\n                            {task.total === 0 && <span> - </span>}\n                        </Typography>\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded === task.info.gid\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {task.info.bittorrent.mode === \"multi\" &&\n                        <div className={classes.scroll}>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {activeFiles().map((value, key) => {\n                                        return (\n                                            <TableRow\n                                                key={value.index}\n                                                style={{\n                                                    background:\n                                                        \"linear-gradient(to right, \" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                theme.palette\n                                                                    .primary.main,\n                                                                0.4\n                                                            )\n                                                            : lighten(\n                                                                theme.palette\n                                                                    .primary.main,\n                                                                0.85\n                                                            )) +\n                                                        \" 0%,\" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                theme.palette\n                                                                    .primary.main,\n                                                                0.4\n                                                            )\n                                                            : lighten(\n                                                                theme.palette\n                                                                    .primary.main,\n                                                                0.85\n                                                            )) +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" 100%)\"\n                                                }}\n                                            >\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={value.path}\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(value.length)}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"删除此文件\">\n                                                        <IconButton\n                                                            onClick={() =>\n                                                                deleteFile(\n                                                                    value.index\n                                                                )\n                                                            }\n                                                            disabled={loading}\n                                                            size={\"small\"}\n                                                        >\n                                                            <HighlightOff />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    }\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() => window.location.href=\"/#/home?path=\" + encodeURIComponent(task.dst)}\n                        >\n                            打开存放目录\n                        </Button>\n                        {task.info.bittorrent.mode === \"multi\" &&\n                            <Button\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                disabled={loading}\n                                onClick={() => setSelectDialogOpen(true)}\n                            >\n                                选择要下载的文件\n                            </Button>\n                        }\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            取消任务\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        {task.info.bitfield !== \"\" && (\n                            <canvas\n                                width={\"700\"}\n                                height={\"100\"}\n                                ref={canvasRef}\n                                className={classes.bitmap}\n                            />\n                        )}\n\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    更新于：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    <TimeAgo\n                                        datetime={parseInt(task.update + \"000\")}\n                                        locale=\"zh_CN\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传速度：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadSpeed)} / s\n                                </Grid>\n                            </Grid>\n                            {task.info.bittorrent.mode !== \"\" && (\n                                <>\n                                    <Grid container xs={12} sm={8}>\n                                        <Grid\n                                            item\n                                            sm={2}\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            InfoHash：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sm={10}\n                                            xs={8}\n                                            style={{\n                                                wordBreak:\"break-all\",\n                                            }}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.infoHash}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种者：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.numSeeders}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种中：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.seeder === \"true\"\n                                                ? \"是\"\n                                                : \"否\"}\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )}\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.pieceLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片数量：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {task.info.numPieces}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Card,\n    CardContent,\n    IconButton,\n    makeStyles,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { sizeToString } from \"../../untils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {}\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\"\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\"\n        },\n        textAlign:\"left\",\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    iconBig: {\n        fontSize: \"30px\"\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\"\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\"\n    },\n    expanded: {\n        transform: \"rotate(180deg)\"\n    },\n    subFileName: {\n        display: \"flex\"\n    },\n    subFileIcon: {\n        marginRight: \"20px\"\n    },\n    scroll: {\n        overflowY: \"auto\"\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\"\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1)\n    },\n    info: {\n        padding: theme.spacing(2)\n    },\n    infoTitle: {\n        fontWeight: 700\n    },\n    infoValue: {\n        color: theme.palette.text.secondary\n    },\n}));\n\nexport default function FinishedCard(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = panel => (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const getPercent = (completed, total) => {\n        if (total == 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const getDownloadName = useCallback(() => {\n        return props.task.name === \".\" ? \"[未知]\" : props.task.name;\n    }, [props.task.name]);\n\n    const activeFiles = useCallback(() => {\n        return props.task.files.filter(v => v.selected === \"true\");\n    }, [props.task.files]);\n\n    const getIcon = useCallback(() => {\n        if (props.task.files.length > 1) {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(props.task)}\n                />\n            );\n        }\n    }, [props.task, classes]);\n\n    const getTaskError = error =>{\n        try{\n            let res = JSON.parse(error)\n            return res.msg + \"：\" + res.error\n        }catch (e) {\n            return \"文件转存失败\"\n        }\n\n    };\n\n    return (\n        <Card className={classes.card}>\n            <ExpansionPanel\n                square\n                expanded={expanded}\n                onChange={handleChange(\"\")}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        {props.task.status === 3&&\n                            <Tooltip title={props.task.error}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"error\"\n                                    noWrap\n                                >\n                                    下载出错：{props.task.error}\n                                </Typography>\n                            </Tooltip>\n\n                        }\n                        {props.task.status === 5&&\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                noWrap\n                            >\n                                已取消{props.task.error !== \"\" &&<span>：{props.task.error}</span>}\n                            </Typography>\n                        }\n                        {(props.task.status === 4 && props.task.task_status === 4)&&\n                            <Typography\n                                variant=\"body2\"\n                                style={{\n                                    color:theme.palette.success.main,\n                                }}\n                                noWrap\n                            >\n                                已完成\n                            </Typography>\n                        }\n                        {(props.task.status === 4 && props.task.task_status === 0)&&\n                            <Typography\n                                variant=\"body2\"\n                                style={{\n                                    color:theme.palette.success.light,\n                                }}\n                                noWrap\n                            >\n                                已完成，转存排队中\n                            </Typography>\n                        }\n                        {(props.task.status === 4 && props.task.task_status === 1)&&\n                            <Typography\n                                variant=\"body2\"\n                                style={{\n                                    color:theme.palette.success.light,\n                                }}\n                                noWrap\n                            >\n                                已完成，转存处理中\n                            </Typography>\n                        }\n                        {(props.task.status === 4 && props.task.task_status === 2)&&\n                        <Typography\n                            variant=\"body2\"\n                            color={\"error\"}\n                            noWrap\n                        >\n                            {getTaskError(props.task.task_error)}\n                        </Typography>\n                        }\n\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {props.task.files.length>1 &&\n                        <div className={classes.scroll}>\n                            <Table>\n                                <TableBody>\n                                    {activeFiles().map((value, key) => {\n                                        return (\n                                            <TableRow\n                                                key={value.index}\n                                            >\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={value.path}\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(value.length)}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    }\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() => window.location.href=\"/#/home?path=\" + encodeURIComponent(props.task.dst)}\n                        >\n                            打开存放目录\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        <Grid container>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    创建日期：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {props.task.create}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    最后更新：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {props.task.update}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport {\n    withStyles,\n    Typography,\n    Button,\n    IconButton\n} from \"@material-ui/core\";\nimport DownloadingCard from \"./DownloadingCard\";\nimport FinishedCard from \"./FinishedCard\";\n\nconst styles = theme => ({\n    actions: {\n        display: \"flex\"\n    },\n    title: {\n        marginTop: \"20px\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    hide: {\n        display: \"none\"\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\"\n    },\n    shareFix: {\n        marginLeft: \"20px\"\n    },\n    loadMore: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n    },\n    margin:{\n        marginTop:theme.spacing(2),\n    }\n});\nconst mapStateToProps = state => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass DownloadComponent extends Component {\n    page = 0;\n    interval = 0;\n\n    state = {\n        downloading: [],\n        loading: false,\n        finishedList: [],\n        continue: true\n    };\n\n    componentDidMount = () => {\n        this.loadDownloading();\n        this.loadMore();\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.interval);\n    }\n\n    loadDownloading = () => {\n        this.setState({\n            loading: true\n        });\n        API.get(\"/aria2/downloading\")\n            .then(response => {\n                this.setState({\n                    downloading: response.data,\n                    loading: false\n                });\n                // 设定自动更新\n                clearTimeout(this.interval);\n                if(response.data.length > 0){\n                    this.interval = setTimeout(this.loadDownloading,1000 * response.data[0].interval);\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadMore = () => {\n        this.setState({\n            loading: true\n        });\n        API\n            .get(\"/aria2/finished?page=\" + ++this.page)\n            .then(response => {\n                this.setState({\n                    finishedList: [...this.state.finishedList,...response.data],\n                    loading: false,\n                    continue: response.data.length >= 10\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n                this.setState({\n                    loading: false\n                });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    进行中\n                    <IconButton\n                        disabled={this.state.loading}\n                        onClick={this.loadDownloading}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Typography>\n                {this.state.downloading.map((value, k) => (\n                    <DownloadingCard key={ k } task={value} />\n                ))}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    已完成\n                </Typography>\n                <div className={classes.loadMore}>\n                    {this.state.finishedList.map((value, k) => {\n                        if (value.files) {\n                            return (\n                                <FinishedCard key={k} task={value}/>\n                            )\n                        }\n                        return null\n\n                    })}\n                    <Button\n                        size=\"large\"\n                        className={classes.margin}\n                        disabled={!this.state.continue}\n                        onClick={this.loadMore}\n                    >\n                        加载更多\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Download = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(DownloadComponent));\n\nexport default Download;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport PageLoading from \"../Placeholder/PageLoading\";\nimport { useParams } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { changeSubTitle, toggleSnackbar } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport Notice from \"./NotFound\";\n\nconst LockedFile = React.lazy(() => import(\"./LockedFile\"));\nconst SharedFile = React.lazy(() => import(\"./SharedFile\"));\nconst SharedFolder = React.lazy(() => import(\"./SharedFolder\"));\n\nexport default function SharePreload() {\n    const dispatch = useDispatch();\n    let { id } = useParams();\n\n    const [share, setShare] = useState(undefined);\n    const [loading, setLoading] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (share) {\n            if (share.locked) {\n                SetSubTitle(share.creator.nick + \"的加密分享\");\n                if (password !== \"\") {\n                    ToggleSnackbar(\"top\", \"right\", \"密码不正确\", \"warning\");\n                }\n            } else {\n                SetSubTitle(share.source.name);\n            }\n        } else {\n            SetSubTitle();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [share,SetSubTitle,ToggleSnackbar]);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        let withPassword = \"\";\n        if (password !== \"\") {\n            withPassword = \"?password=\" + password;\n        }\n        API.get(\"/share/info/\" + id + withPassword)\n            .then(response => {\n                setShare(response.data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setLoading(false);\n                if (error.code === 404) {\n                    setShare(null);\n                } else {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }\n            });\n    }, [id, password,ToggleSnackbar]);\n\n    return (\n        <Suspense fallback={<PageLoading />}>\n            {share === undefined && <PageLoading />}\n            {share === null && <Notice msg={\"分享不存在或已过期\"}/>}\n            {share && share.locked && (\n                <LockedFile\n                    loading={loading}\n                    setPassowrd={setPassword}\n                    share={share}\n                />\n            )}\n            {share&&!share.locked&&!share.is_dir&&<SharedFile share={share}/>}\n            {share&&!share.locked&&share.is_dir&&<SharedFolder share={share}/>}\n        </Suspense>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {useLocation, useParams, useRouteMatch} from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {changeSubTitle, toggleSnackbar} from \"../../actions\";\nimport pathHelper from \"../../untils/page\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"-48px\",\n\n    },\n\n    container:{\n        border:\"none\",\n        width:\"100%\",\n        height: \"calc(100vh - 18px)\",\n        marginBottom: -3,\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function DocViewer(props) {\n    let [url,setURL] = useState(\"\");\n    const math = useRouteMatch();\n    let location = useLocation();\n    let query = useQuery();\n    let { id } = useParams();\n\n    const dispatch = useDispatch();\n\n    const SetSubTitle = useCallback(\n        title=>dispatch(changeSubTitle(title)),\n        [dispatch]\n    );\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            let path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(()=>{\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)){\n            requestURL = \"/share/doc/\" + id;\n            if(query.get(\"share_path\") !== \"\"){\n                requestURL +=(\"?path=\" +encodeURIComponent(query.get(\"share_path\")))\n            }\n        }\n        API.get(requestURL)\n            .then(response => {\n                setURL(response.data)\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                )\n            });\n        // eslint-disable-next-line\n    },[math.params[0],location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            {url !== \"\" && <iframe title={\"ms\"} className={classes.container} src={url} />}\n        </div>\n    );\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport classNames from 'classnames';\nimport { toggleSnackbar, } from \"../../actions\"\nimport API from \"../../middleware/Api\";\n\nimport {\n    withStyles,\n    Typography,\n    Paper,\n    Button,\n    Grid,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n} from '@material-ui/core';\nimport {sizeToString} from \"../../untils\";\nimport {withRouter} from \"react-router\";\n\n\nconst styles = theme => ({\n    layout: {\n        width: 'auto',\n        marginTop: '50px',\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        marginBottom:\"50px\",\n    },\n\n    gird: {\n        marginTop: \"30px\",\n    },\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n    },\n    data: {\n        fontSize: \"25px\",\n        color: theme.palette.primary.main,\n    },\n    proBar:{\n        height: \"10px\",\n    },\n    r1:{\n        backgroundColor:\"#f0ad4e\",\n        transition:\"width .6s ease\",\n        height: \"100%\",\n        fontSize: \"12px\",\n        lineHeight: \"20px\",\n        float: \"left\",\n    },\n    r2:{\n        backgroundColor:\"#4caf50\",\n        transition:\"width .6s ease\",\n        height: \"100%\",\n        fontSize: \"12px\",\n        lineHeight: \"20px\",\n        float: \"left\",\n    },\n    r3:{\n        backgroundColor:\"#5bc0de\",\n        transition:\"width .6s ease\",\n        height: \"100%\",\n        fontSize: \"12px\",\n        lineHeight: \"20px\",\n        float: \"left\",\n    },\n    note_block:{\n        width: \"10px\",\n        height: \"10px\",\n        display: \"inline-block\",\n        position: \"relative\",\n        marginLeft: \"10px\",\n        marginRight: \"3px\",\n    },\n    r1_block:{\n        backgroundColor:\"#f0ad4e\",\n    },\n    r2_block:{\n        backgroundColor:\"#4caf50\",\n    },\n    r3_block:{\n        backgroundColor:\"#5bc0de\",\n    },\n    title:{\n        marginTop: \"30px\",\n        marginBottom: \"30px\",\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    table:{\n        overflowX:\"auto\",\n    },\n})\nconst mapStateToProps = state => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color))\n        },\n    }\n}\n\nclass QuotaCompoment extends Component {\n\n    state = {\n        data: {\n            basic: 0,\n            used: 0,\n            total:0,\n            pack: 0,\n            r1:0,\n            r2:0,\n            r3:0,\n        },\n        packs:[],\n    };\n\n    firstLoad = true;\n\n    componentDidMount() {\n        if (this.firstLoad) {\n            this.firstLoad = !this.firstLoad;\n            API.get(\"/vas/pack\")\n                .then((response) => {\n                    let usedR, baseR, packR = 0;\n                    if (response.data.used > response.data.base) {\n                        usedR = response.data.used / response.data.total;\n                        baseR = 0;\n                        packR = 1 - usedR;\n                    } else {\n                        usedR = response.data.used / response.data.total;\n                        baseR = (response.data.base - response.data.used) / response.data.total;\n                        packR = 1 - usedR - baseR;\n                    }\n\n                    this.setState({\n                        data: {\n                            used: response.data.used,\n                            pack: response.data.pack,\n                            total: response.data.total,\n                            basic: response.data.base,\n                            r1: usedR > 1 ? 100 : usedR * 100,\n                            r2: usedR > 1 ? 0 : baseR * 100,\n                            r3: usedR > 1 ? 0 : packR * 100,\n                        },\n                        packs:response.data.packs,\n                    });\n\n                })\n                .catch((error) => {\n                    this.setState({\n                        loading: false,\n                    });\n                    this.props.toggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                });\n        }\n    }\n        render() {\n        const { classes } = this.props;\n\n\n        return (\n            <div className={classes.layout}>\n                <Typography color=\"textSecondary\" variant=\"h4\">容量配额</Typography>\n                <Grid container className={classes.gird} spacing={2}>\n                    <Grid item xs={12} sm={3}>\n                        <Paper className={classes.paper}>\n                            <Typography className={classes.data}>{sizeToString(this.state.data.basic)}</Typography>\n                            <Typography>用户组基础容量</Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <Paper className={classes.paper}>\n                            <Typography className={classes.data}>{sizeToString(this.state.data.pack)}</Typography>\n                            <Typography>有效容量包附加附加容量</Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <Paper className={classes.paper}>\n                            <Typography className={classes.data}>{sizeToString(this.state.data.used)}</Typography>\n                            <Typography>已使用容量</Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={3}>\n                        <Paper className={classes.paper}>\n                            <Typography className={classes.data}>{sizeToString(this.state.data.total)}</Typography>\n                            <Typography>总容量</Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <div className={classes.proBar}>\n                                <div className={classes.r1} style={{\"width\": this.state.data.r1 + \"%\"}}/>\n                                <div className={classes.r2} style={{\"width\": this.state.data.r2 + \"%\"}}/>\n                                <div className={classes.r3} style={{\"width\": this.state.data.r3 + \"%\"}}/>\n                           </div>\n                           <div style={{textAlign:\"right\"}} >\n                                <span className={classNames(classes.r1_block, classes.note_block)}/>已用容量\n                                <span className={classNames(classes.r2_block, classes.note_block)}/>用户组基础容量\n                                <span className={classNames(classes.r3_block, classes.note_block)}/>有效容量包附加附加容量\n                           </div>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Typography color=\"textSecondary\" variant=\"h4\" className={classes.title}>可用容量包</Typography>\n                <Paper className={classes.paper}>\n                <Button \n                variant=\"contained\" \n                color=\"secondary\" \n                className={classes.button}\n                onClick={()=>this.props.history.push(\"/buy\")}\n                >\n                    购买容量包\n                </Button>\n                <Button variant=\"contained\" className={classes.button}\n                        onClick={()=>this.props.history.push(\"/buy?tab=3\")}\n                >\n                    使用激活码兑换\n                </Button>\n                <div className={classes.table}>\n                <Table>\n                    <TableHead>\n                    <TableRow>\n                        <TableCell align=\"left\">容量包名称</TableCell>\n                        <TableCell align=\"center\">大小</TableCell>\n                        <TableCell align=\"center\">激活日期</TableCell>\n                        <TableCell align=\"center\">有效期</TableCell>\n                        <TableCell align=\"center\">过期日期</TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.packs.map((row,id) => (\n                            <TableRow key={id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"center\">{sizeToString(row.size)}</TableCell>\n                                <TableCell align=\"center\">{row.activate_date}</TableCell>\n                                <TableCell align=\"center\">{Math.round(row.expiration/86400)}天</TableCell>\n                                <TableCell align=\"center\">{row.expiration_date}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                </div>\n                </Paper>\n            </div>\n        );\n    }\n\n}\n\nconst Quota = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(QuotaCompoment)))\n\nexport default Quota\n","import React, { Component } from 'react'\nimport classNames from 'classnames';\nimport { withStyles, ButtonBase, Typography } from '@material-ui/core';\nconst styles = theme => ({\n    container:{\n        border:\" 1px solid #e6e9eb\",\n        borderRadius: \"4px\",\n        transition:\"border .5s\",\n        width:\"100%\",\n        display:\"block\",\n    },\n    active:{\n        border:\" 1px solid \"+theme.palette.primary.main,\n    },\n    boxHead:{\n        textAlign: \"center\",\n        padding: \"10px 10px 10px\",\n        borderBottom: \"1px solid #e6e9eb\",\n        color: \"#555\",\n        width:\"100%\",\n    },\n    price:{\n        fontSize: \"33px\",\n        fontWeight: \"500\",\n        lineHeight: \"40px\",\n        color:theme.palette.primary.main,\n    },\n    priceWithScore:{\n        fontSize: \"23px\",\n        fontWeight: \"500\",\n        lineHeight: \"40px\",\n        color:theme.palette.primary.main,\n    },\n    packName:{\n        marginTop:\"5px\",\n        marginBottom:\"5px\",\n    },\n    boxBottom:{\n        color: \"#555\",\n        textAlign: \"center\",\n        padding: \"5px\",\n    }\n})\n\nclass PackSelect extends Component {\n\n    render() {\n        const { classes,pack } = this.props;\n        return (\n            <ButtonBase\n                className={classNames(classes.container,\n                        {[classes.active]:this.props.active}\n                    )}\n                onClick={this.props.onSelect}\n            >\n                <div className={classes.boxHead}>\n                    <Typography variant=\"subtitle1\" className={classes.packName}>{pack.name}</Typography>\n                    {pack.score === 0 &&<Typography className={classes.price}>￥{(pack.price/100).toFixed(2)}</Typography>}\n                    {pack.score !== 0 &&<Typography className={classes.priceWithScore}>￥{(pack.price/100).toFixed(2)} / {pack.score} 积分</Typography>}\n                </div>\n                <div className={classes.boxBottom}>\n                    <Typography>有效期：{Math.ceil(pack.time / 86400)}天</Typography>\n                </div>\n            </ButtonBase>\n        );\n    }\n\n}\n\nexport default withStyles(styles)(PackSelect)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport SdStorage from \"@material-ui/icons/SdStorage\";\nimport ShopIcon from \"@material-ui/icons/ShoppingCart\";\nimport PackSelect from \"./PackSelect\";\nimport SupervisedUserCircle from \"@material-ui/icons/SupervisedUserCircle\";\nimport StarIcon from \"@material-ui/icons/StarBorder\";\nimport LocalPlay from \"@material-ui/icons/LocalPlay\";\nimport API from \"../../middleware/Api\";\nimport QRCode from \"qrcode-react\";\n\nimport {\n    withStyles,\n    AppBar,\n    Tabs,\n    Tab,\n    Typography,\n    Paper,\n    Button,\n    TextField,\n    Grid,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader\n} from \"@material-ui/core\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { AccountBalanceWallet } from \"@material-ui/icons\";\nimport pathHelper from \"../../untils/page\";\nimport {withRouter} from \"react-router\";\n\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: \"50px\"\n    },\n\n    gird: {\n        marginTop: \"30px\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary\n    },\n    title: {\n        marginTop: \"30px\",\n        marginBottom: \"30px\"\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    action: {\n        textAlign: \"right\",\n        marginTop: \"20px\"\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 70,\n        textAlign: \"center!important\"\n    },\n    priceShow: {\n        color: theme.palette.secondary.main,\n        fontSize: \"30px\"\n    },\n    codeContainer: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n    },\n    cardHeader: {\n        backgroundColor: theme.palette.grey[200]\n    },\n    cardPricing: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        marginBottom: theme.spacing(2)\n    },\n    cardActions: {\n        [theme.breakpoints.up(\"sm\")]: {\n            paddingBottom: theme.spacing(2)\n        }\n    },\n    redeemContainer: {\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: \"50px\",\n            marginRight: \"50px\",\n            width: \"auto\"\n        },\n        marginTop: \"50px\",\n        marginBottom: \"50px\"\n    },\n    doRedeem: {\n        textAlign: \"right\"\n    },\n    payMethod: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2)\n    }\n});\nconst mapStateToProps = state => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass BuyQuotaCompoment extends Component {\n    IntervalId = null;\n    constructor(props) {\n        super(props);\n\n        let tab = new URLSearchParams(this.props.location.search);\n        let index = tab.get(\"tab\");\n\n        this.state = {\n            value: index ? parseInt(index) : 0,\n            selectedPack: -1,\n            selectedGroup: -1,\n            times: 1,\n            scoreNum: 1,\n            loading: false,\n            redeemCode: \"\",\n            dialog: null,\n            payment: {\n                type: \"\",\n                img: \"\"\n            },\n            scorePrice: 0,\n            redeemInfo: null,\n            packs: [],\n            groups: [],\n            alipay: false,\n            payjs: false,\n            packPayMethod: null\n        };\n    }\n\n    componentDidMount() {\n        API.get(\"/vas/product\")\n            .then(response => {\n                this.setState({\n                    packs: response.data.packs,\n                    groups: response.data.groups,\n                    alipay: response.data.alipay,\n                    payjs: response.data.payjs,\n                    scorePrice: response.data.score_price\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    }\n\n    confirmRedeem = () => {\n        this.setState({\n            loading: true\n        });\n        API.post(\"/vas/redeem/\" + this.state.redeemCode)\n            .then(response => {\n                this.setState({\n                    loading: false,\n                    dialog: \"success\"\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"错误：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    doRedeem = () => {\n        if (this.state.redeemCode === \"\") {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"请输入激活码\",\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: true\n        });\n        API.get(\"/vas/redeem/\" + this.state.redeemCode)\n            .then(response => {\n                this.setState({\n                    loading: false,\n                    dialog: \"redeem\",\n                    redeemInfo: response.data\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    buyPack = packType => {\n        if (packType === \"pack\" && this.state.selectedPack === -1) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"请先选择一个容量包\",\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: true\n        });\n        API.post(\"/vas/order\", {\n            action: packType,\n            method: this.state.packPayMethod,\n            id:\n                packType === \"score\"\n                    ? 1\n                    : packType === \"pack\"\n                    ? this.state.packs[this.state.selectedPack].id\n                    : this.state.groups[this.state.selectedGroup].id,\n            num:\n                packType === \"score\"\n                    ? parseInt(this.state.scoreNum)\n                    : parseInt(this.state.times)\n        })\n            .then(response => {\n                if (!response.data.payment) {\n                    this.setState({\n                        loading: false,\n                        dialog: \"success\"\n                    });\n                    return;\n                }\n                if (response.data.qr_code) {\n                    if (pathHelper.isMobile()) {\n                        window.open(response.data.qr_code);\n                        this.setState({ loading: false });\n                    } else {\n                        this.setState({\n                            loading: false,\n                            dialog: \"qr\",\n                            payment: {\n                                type: this.state.packPayMethod,\n                                img: response.data.qr_code\n                            }\n                        });\n                    }\n\n                    this.IntervalId = window.setInterval(() => {\n                        this.querryLoop(response.data.id);\n                    }, 3000);\n                }\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"错误：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    querryLoop = id => {\n        API\n            .get(\"/vas/order/\" + id)\n            .then(response => {\n                if (response.data === 1) {\n                    this.setState({\n                        dialog: \"success\"\n                    });\n                    window.clearInterval(this.IntervalId);\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"错误：\" + error.message,\n                    \"error\"\n                );\n                window.clearInterval(this.IntervalId);\n            });\n    };\n\n    handleChange = (event, value) => {\n        this.setState({\n            packPayMethod:\n                this.state.packPayMethod === \"score\"\n                    ? null\n                    : this.state.packPayMethod\n        });\n        this.setState({ value });\n    };\n\n    handleChangeIndex = index => {\n        this.setState({ value: index });\n    };\n\n    handleClose = () => {\n        this.setState({\n            dialog: null\n        });\n    };\n\n    handleTexyChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    selectPack = id => {\n        this.setState({\n            selectedPack: id,\n            packPayMethod:\n                this.state.packPayMethod === \"score\"\n                    ? null\n                    : this.state.packPayMethod\n        });\n    };\n\n    selectGroup = id => {\n        this.setState({\n            selectedGroup: id,\n            dialog: \"buyGroup\",\n            packPayMethod:\n                this.state.packPayMethod === \"score\"\n                    ? null\n                    : this.state.packPayMethod\n        });\n    };\n\n    selectPackPayMethod = event => {\n        this.setState({\n            packPayMethod: event.target.value\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const methodSelect = (\n            <div>\n                <FormLabel>选择支付方式：</FormLabel>\n                <RadioGroup\n                    name=\"spacing\"\n                    aria-label=\"spacing\"\n                    value={this.state.packPayMethod}\n                    onChange={this.selectPackPayMethod}\n                    row\n                >\n                    {!this.state.alipay &&\n                        !this.state.payjs &&\n                        this.state.value === 0 &&\n                        (this.state.selectedPack === -1 ||\n                            this.state.packs[this.state.selectedPack].score ===\n                                0) &&\n                        this.state.value === 1 &&\n                        (this.state.selectedGroup === -1 ||\n                            this.state.groups[this.state.selectedGroup]\n                                .score === 0) && (\n                            <Typography>无可用支付方式</Typography>\n                        )}\n                    {this.state.alipay && (\n                        <FormControlLabel\n                            value={\"alipay\"}\n                            control={<Radio />}\n                            label={\"支付宝扫码\"}\n                        />\n                    )}\n                    {this.state.payjs && (\n                        <FormControlLabel\n                            value={\"payjs\"}\n                            control={<Radio />}\n                            label={\"微信扫码\"}\n                        />\n                    )}\n                    {this.state.value === 0 &&\n                        this.state.selectedPack !== -1 &&\n                        this.state.packs[this.state.selectedPack].score !==\n                            0 && (\n                            <FormControlLabel\n                                value={\"score\"}\n                                control={<Radio />}\n                                label={\"积分支付\"}\n                            />\n                        )}\n                    {this.state.value === 1 &&\n                        this.state.selectedGroup !== -1 &&\n                        this.state.groups[this.state.selectedGroup].score !==\n                            0 && (\n                            <FormControlLabel\n                                value={\"score\"}\n                                control={<Radio />}\n                                label={\"积分支付\"}\n                            />\n                        )}\n                </RadioGroup>\n                <div>\n                    {this.state.value !== 2 && (\n                        <FormLabel>购买时长倍数：</FormLabel>\n                    )}\n                    {this.state.value === 2 && (\n                        <FormLabel>充值积分数量：</FormLabel>\n                    )}\n                </div>\n                {this.state.value !== 2 && (\n                    <TextField\n                        className={classes.textField}\n                        type=\"number\"\n                        inputProps={{\n                            min: \"1\",\n                            max: \"99\",\n                            step: \"1\"\n                        }}\n                        value={this.state.times}\n                        onChange={this.handleTexyChange(\"times\")}\n                    />\n                )}\n                {this.state.value === 2 && (\n                    <TextField\n                        className={classes.textField}\n                        type=\"number\"\n                        inputProps={{\n                            min: \"1\",\n                            step: \"1\",\n                            max: \"9999999\"\n                        }}\n                        value={this.state.scoreNum}\n                        onChange={this.handleTexyChange(\"scoreNum\")}\n                    />\n                )}\n            </div>\n        );\n\n        return (\n            <div className={classes.layout}>\n                <Typography\n                    color=\"textSecondary\"\n                    className={classes.title}\n                    variant=\"h3\"\n                >\n                    购买\n                </Typography>\n                <AppBar position=\"static\">\n                    <Tabs\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"容量包\" icon={<SdStorage />} />\n                        <Tab label=\"会员\" icon={<SupervisedUserCircle />} />\n                        {this.state.scorePrice > 0 && (\n                            <Tab\n                                label=\"积分充值\"\n                                icon={<AccountBalanceWallet />}\n                            />\n                        )}\n                        <Tab label=\"使用激活码\" icon={<LocalPlay />} />\n                    </Tabs>\n                </AppBar>\n                {this.state.value === 0 && (\n                    <Paper className={classes.paper} square={true}>\n                        <Grid container spacing={3}>\n                            {this.state.packs.map((value, id) => (\n                                <Grid item xs={12} md={3} key={id}>\n                                    <PackSelect\n                                        pack={value}\n                                        onSelect={() => this.selectPack(id)}\n                                        active={this.state.selectedPack === id}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                        <Grid\n                            container\n                            className={classes.payMethod}\n                            spacing={1}\n                        >\n                            <Grid sm={6} xs={12}>\n                                {methodSelect}\n                            </Grid>\n                            <Grid sm={6} xs={12}>\n                                <div className={classes.action}>\n                                    <div>\n                                        当前费用：\n                                        {this.state.packPayMethod !==\n                                            \"score\" && (\n                                            <span className={classes.priceShow}>\n                                                ￥\n                                                {this.state.selectedPack ===\n                                                    -1 && <span>--</span>}\n                                                {this.state.selectedPack !==\n                                                    -1 &&\n                                                    this.state.times <= 99 &&\n                                                    this.state.times >= 1 && (\n                                                        <span>\n                                                            {(\n                                                                (this.state\n                                                                    .packs[\n                                                                    this.state\n                                                                        .selectedPack\n                                                                ].price /\n                                                                    100) *\n                                                                this.state.times\n                                                            ).toFixed(2)}\n                                                        </span>\n                                                    )}\n                                            </span>\n                                        )}\n                                        {this.state.packPayMethod ===\n                                            \"score\" && (\n                                            <span className={classes.priceShow}>\n                                                {this.state.selectedPack ===\n                                                    -1 && <span>--</span>}\n                                                {this.state.selectedPack !==\n                                                    -1 &&\n                                                    this.state.times <= 99 &&\n                                                    this.state.times >= 1 && (\n                                                        <span>\n                                                            {this.state.packs[\n                                                                this.state\n                                                                    .selectedPack\n                                                            ].score *\n                                                                this.state\n                                                                    .times}{\" \"}\n                                                            积分\n                                                        </span>\n                                                    )}\n                                            </span>\n                                        )}\n                                    </div>\n                                    <div>\n                                        <Button\n                                            size=\"large\"\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            disabled={\n                                                this.state.loading ||\n                                                this.state.packPayMethod ===\n                                                    null\n                                            }\n                                            onClick={() => this.buyPack(\"pack\")}\n                                        >\n                                            <ShopIcon /> 立即购买\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                )}\n                {this.state.value === 1 && (\n                    <Paper className={classes.paper} square={true}>\n                        <Grid container spacing={5} alignItems=\"flex-end\">\n                            {this.state.groups.map((tier, id) => (\n                                // Enterprise card is full width at sm breakpoint\n                                <Grid item key={id} xs={12} sm={6} md={4}>\n                                    <Card>\n                                        <CardHeader\n                                            title={tier.name}\n                                            subheader={\n                                                tier.highlight ? \"推荐\" : null\n                                            }\n                                            titleTypographyProps={{\n                                                align: \"center\"\n                                            }}\n                                            subheaderTypographyProps={{\n                                                align: \"center\"\n                                            }}\n                                            action={\n                                                tier.highlight ? (\n                                                    <StarIcon />\n                                                ) : null\n                                            }\n                                            className={classes.cardHeader}\n                                        />\n                                        <CardContent>\n                                            <div\n                                                className={classes.cardPricing}\n                                            >\n                                                <Typography\n                                                    component=\"h2\"\n                                                    variant=\"h3\"\n                                                    color=\"textPrimary\"\n                                                >\n                                                    ￥{tier.price / 100}\n                                                </Typography>\n                                                <Typography\n                                                    variant=\"h6\"\n                                                    color=\"textSecondary\"\n                                                >\n                                                    /\n                                                    {Math.ceil(\n                                                        tier.time / 86400\n                                                    )}\n                                                    天\n                                                </Typography>\n                                            </div>\n                                            {tier.des.map(line => (\n                                                <Typography\n                                                    variant=\"subtitle1\"\n                                                    align=\"center\"\n                                                    key={line}\n                                                >\n                                                    {line}\n                                                </Typography>\n                                            ))}\n                                        </CardContent>\n                                        <CardActions\n                                            className={classes.cardActions}\n                                        >\n                                            <Button\n                                                fullWidth\n                                                variant={\n                                                    tier.highlight\n                                                        ? \"contained\"\n                                                        : \"outlined\"\n                                                }\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    this.selectGroup(id)\n                                                }\n                                            >\n                                                立即购买\n                                            </Button>\n                                        </CardActions>\n                                    </Card>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Paper>\n                )}\n\n                {this.state.value === 2 && (\n                    <Paper className={classes.paper} square={true}>\n                        <Grid\n                            container\n                            className={classes.payMethod}\n                            spacing={1}\n                        >\n                            <Grid sm={6} xs={12}>\n                                {methodSelect}\n                            </Grid>\n                            <Grid sm={6} xs={12}>\n                                <div className={classes.action}>\n                                    <div>\n                                        当前费用：\n                                        {this.state.packPayMethod !==\n                                            \"score\" && (\n                                            <span className={classes.priceShow}>\n                                                ￥\n                                                <span>\n                                                    {(\n                                                        (this.state.scorePrice /\n                                                            100) *\n                                                        this.state.scoreNum\n                                                    ).toFixed(2)}\n                                                </span>\n                                            </span>\n                                        )}\n                                    </div>\n                                    <div>\n                                        <Button\n                                            size=\"large\"\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            className={classes.button}\n                                            disabled={\n                                                this.state.loading ||\n                                                this.state.packPayMethod ===\n                                                    null\n                                            }\n                                            onClick={() =>\n                                                this.buyPack(\"score\")\n                                            }\n                                        >\n                                            <ShopIcon /> 立即购买\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                )}\n\n                {this.state.value === 3 && (\n                    <Paper className={classes.paper} square={true}>\n                        <div className={classes.redeemContainer}>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"输入激活码\"\n                                value={this.state.redeemCode}\n                                onChange={this.handleTexyChange(\"redeemCode\")}\n                                margin=\"normal\"\n                                inputProps={{\n                                    style: { textTransform: \"uppercase\" }\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.doRedeem}>\n                                <Button\n                                    size=\"large\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    className={classes.button}\n                                    disabled={this.state.loading}\n                                    onClick={this.doRedeem}\n                                >\n                                    下一步\n                                </Button>\n                            </div>\n                        </div>\n                    </Paper>\n                )}\n                <Dialog\n                    open={this.state.dialog === \"qr\"}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">支付</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            请使用\n                            {this.state.payment.type === \"alipay\" && (\n                                <span>支付宝</span>\n                            )}\n                            {this.state.payment.type === \"payjs\" && (\n                                <span>微信</span>\n                            )}\n                            扫描下方二维码完成付款，付款完成后本页面会自动刷新。\n                        </DialogContentText>\n                        <div className={classes.codeContainer}>\n                            <QRCode value={this.state.payment.img} />,\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.dialog === \"success\"}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">支付完成</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            您所购买的商品已到账。\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.dialog === \"redeem\"}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">确认兑换</DialogTitle>\n                    <DialogContent>\n                        {this.state.redeemInfo !== null && (\n                            <DialogContentText id=\"alert-dialog-description\">\n                                <Typography variant=\"subtitle1\">\n                                    商品名称：\n                                </Typography>\n                                <Typography>\n                                    {this.state.redeemInfo.name}\n                                </Typography>\n                                <Typography variant=\"subtitle1\">\n                                    {this.state.redeemInfo.type === 2\n                                        ? \"数量：\"\n                                        : \"时长：\"}\n                                </Typography>\n                                <Typography>\n                                    {this.state.redeemInfo.type === 2 && (\n                                        <>{this.state.redeemInfo.num}</>\n                                    )}\n                                    {this.state.redeemInfo.type !== 2 && (\n                                        <>\n                                            {Math.ceil(\n                                                this.state.redeemInfo.time /\n                                                    86400\n                                            ) * this.state.redeemInfo.num}\n                                            天\n                                        </>\n                                    )}\n                                </Typography>\n                            </DialogContentText>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose}>取消</Button>\n                        <Button\n                            onClick={this.confirmRedeem}\n                            color=\"primary\"\n                            disabled={this.state.loading}\n                        >\n                            确认兑换\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.dialog === \"buyGroup\"}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        购买用户组\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            已选：\n                            {this.state.selectedGroup !== -1 &&\n                                this.state.groups[this.state.selectedGroup]\n                                    .name}\n                        </DialogContentText>\n                        {methodSelect}\n                        <div>\n                            当前费用：\n                            {this.state.packPayMethod !== \"score\" && (\n                                <span className={classes.priceShow}>\n                                    ￥\n                                    {this.state.selectedGroup === -1 && (\n                                        <span>--</span>\n                                    )}\n                                    {this.state.selectedGroup !== -1 &&\n                                        this.state.times <= 99 &&\n                                        this.state.times >= 1 && (\n                                            <span>\n                                                {(\n                                                    (this.state.groups[\n                                                        this.state.selectedGroup\n                                                    ].price /\n                                                        100) *\n                                                    this.state.times\n                                                ).toFixed(2)}\n                                            </span>\n                                        )}\n                                </span>\n                            )}\n                            {this.state.packPayMethod === \"score\" && (\n                                <span className={classes.priceShow}>\n                                    {this.state.selectedGroup === -1 && (\n                                        <span>--</span>\n                                    )}\n                                    {this.state.selectedGroup !== -1 &&\n                                        this.state.times <= 99 &&\n                                        this.state.times >= 1 && (\n                                            <span>\n                                                {this.state.groups[\n                                                    this.state.selectedGroup\n                                                ].score * this.state.times}{\" \"}\n                                                积分\n                                            </span>\n                                        )}\n                                </span>\n                            )}\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={this.handleClose}\n                            disabled={this.state.loading}\n                        >\n                            取消\n                        </Button>\n                        <Button\n                            disabled={\n                                this.state.loading ||\n                                this.state.packPayMethod === null\n                            }\n                            onClick={() => this.buyPack(\"group\")}\n                            color=\"primary\"\n                        >\n                            购买\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst BuyQuota = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(BuyQuotaCompoment)));\n\nexport default BuyQuota;\n","import React, {useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nconst useStyles = makeStyles(theme => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1)\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color:theme.palette.text.secondary,\n    },\n    input: {\n        width: 250\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24\n    },\n    button: {\n        marginTop: 8\n    }\n}));\n\nexport default function CreateWebDAVAccount(props) {\n    const [value, setValue] = useState({\n        name: \"\",\n        path: \"/\"\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const classes = useStyles();\n\n    const setMoveTarget = folder => {\n        let path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = name => e => {\n        setValue({\n            ...value,\n            [name]: e.target.value,\n        });\n    };\n\n    const selectPath = ()=>{\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath\n        });\n        setPathSelectDialog(false);\n    }\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector presentPath=\"/\" selected={[]} onSelect={setMoveTarget} />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        取消\n                    </Button>\n                    <Button onClick={selectPath} color=\"primary\" disabled={selectedPath === \"\"}>\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <LabelOutlined />\n                        </div>\n\n                        <TextField\n                            className={classes.input}\n                            value={value.name}\n                            onChange={handleInputChange(\"name\")}\n                            label=\"账户名称\"\n                        />\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label=\"相对根目录\"\n                            />\n                            <br />\n                            <Button className={classes.button} color=\"primary\"  onClick={()=>setPathSelectDialog(true)}>\n                                选择目录\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <Button disabled={value.path === \"\" || value.name === \"\"} color=\"primary\" onClick={()=>props.callback(value)}>\n                    确定\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Dialog } from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { FolderOpenOutlined, Storage } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { toggleSnackbar } from \"../../actions\";\nconst useStyles = makeStyles(theme => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1)\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color: theme.palette.text.secondary\n    },\n    input: {\n        width: 250\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24\n    },\n    button: {\n        marginTop: 8\n    }\n}));\n\nexport default function CreateWebDAVMount(props) {\n    const [value, setValue] = useState({\n        policy: \"\",\n        path: \"/\"\n    });\n    const [policies,setPolicies] = useState([]);\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const setMoveTarget = folder => {\n        let path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = name => e => {\n        setValue({\n            ...value,\n            [name]: e.target.value\n        });\n    };\n\n    const selectPath = () => {\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath\n        });\n        setPathSelectDialog(false);\n    };\n\n    useEffect(() => {\n        API.get(\"/user/setting/policies\")\n            .then(response => {\n                setPolicies(response.data.options);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        取消\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <Storage />\n                        </div>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">\n                                存储策略\n                            </InputLabel>\n                            <Select\n                                className={classes.input}\n                                labelId=\"demo-simple-select-label\"\n                                value={value.policy}\n                                onChange={handleInputChange(\"policy\")}\n                            >\n                                {policies.map((v,k)=>(\n                                    <MenuItem key={k} value={v.id}>{v.name}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label=\"目录\"\n                            />\n                            <br />\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => setPathSelectDialog(true)}\n                            >\n                                选择目录\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <Button\n                    disabled={value.path === \"\" || value.policy === \"\"}\n                    color=\"primary\"\n                    onClick={() => props.callback(value)}\n                >\n                    确定\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\nimport TimeAgo from \"timeago-react\";\nimport CreateWebDAVMount from \"../Modals/CreateWebDAVMount\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: \"50px\"\n    },\n    content: {\n        marginTop: theme.spacing(4)\n    },\n    cardContent: {\n        padding: theme.spacing(2)\n    },\n    tableContainer: {\n        overflowX: \"auto\"\n    },\n    create: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nexport default function WebDAV(props) {\n    const [tab, setTab] = useState(0);\n    const [create, setCreate] = useState(false);\n    const [mount, setMount] = useState(false);\n    const [accounts, setAccounts] = useState([]);\n    const [folders, setFolders] = useState([]);\n\n    useEffect(() => {\n        loadList();\n        // eslint-disable-next-line\n    }, []);\n\n    const loadList = () =>{\n        API.get(\"/webdav/accounts\")\n            .then(response => {\n                setAccounts(response.data.accounts);\n                setFolders(response.data.folders);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteAccount = id => {\n        let account = accounts[id];\n        API.delete(\"/webdav/accounts/\" + account.ID)\n            .then(response => {\n                let accountCopy = [...accounts];\n                accountCopy = accountCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setAccounts(accountCopy);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deleteMount = id => {\n        let folder = folders[id];\n        API.delete(\"/webdav/mount/\" + folder.id)\n            .then(response => {\n                let folderCopy = [...folders];\n                folderCopy = folderCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setFolders(folderCopy);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addAccount = account => {\n        setCreate(false);\n        API.post(\"/webdav/accounts\", {\n            path: account.path,\n            name: account.name\n        })\n            .then(response => {\n                setAccounts([\n                    {\n                        ID: response.data.id,\n                        Password: response.data.password,\n                        CreatedAt: response.data.created_at,\n                        Name: account.name,\n                        Root: account.path\n                    },\n                    ...accounts\n                ]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addMount = mountInfo => {\n        setMount(false);\n        API.post(\"/webdav/mount\", {\n            path: mountInfo.path,\n            policy: mountInfo.policy\n        })\n            .then(response => {\n                loadList();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const user = Auth.GetUser();\n\n    return (\n        <div className={classes.layout}>\n            <CreateWebDAVAccount\n                callback={addAccount}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n            <CreateWebDAVMount\n                callback={addMount}\n                open={mount}\n                onClose={() => setMount(false)}\n            />\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                WebDAV\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, newValue) => setTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label=\"账号管理\" />\n                    <Tab label=\"存储策略挂载\" />\n                </Tabs>\n                <div className={classes.cardContent}>\n                    {tab === 0 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                WebDAV的地址为：{window.location.origin + \"/dav\"}；登陆用户名统一为：{user.user_name}{\" \"}\n                                ；密码为所创建账号的密码。\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>账号名称</TableCell>\n                                            <TableCell align=\"right\">\n                                                密码\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                根目录\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                创建日期\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                操作\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {accounts.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.Name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Password}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Root}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <TimeAgo\n                                                        datetime={row.CreatedAt}\n                                                        locale=\"zh_CN\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        size={\"small\"}\n                                                        onClick={() =>\n                                                            deleteAccount(id)\n                                                        }\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Button\n                                onClick={() => setCreate(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                创建新账号\n                            </Button>\n                        </div>\n                    )}\n                    {tab === 1 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                为目录挂载存储策略后，在 WebDAV 中上传至此目录的新文件将会使用挂载的存储策略存储。复制、移动到此目录不会应用挂载的存储策略；挂载设置不会被子目录继承。\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    size=\"small\"\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>目录名</TableCell>\n                                            <TableCell align=\"right\">\n                                                挂载存储策略\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                操作\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {folders.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.policy_name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        size={\"small\"}\n                                                        onClick={() =>\n                                                            deleteMount(id)\n                                                        }\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Button\n                                onClick={() => setMount(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                挂载新目录\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport API from \"../../middleware/Api\";\nimport TimeAgo from \"timeago-react\";\nimport {getTaskProgress, getTaskStatus, getTaskType} from \"../../config\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: \"50px\"\n    },\n    content: {\n        marginTop: theme.spacing(4),\n        overflowX:\"auto\",\n    },\n    cardContent: {\n        padding: theme.spacing(2)\n    },\n    tableContainer: {\n        overflowX: \"auto\"\n    },\n    create: {\n        marginTop: theme.spacing(2)\n    },\n    noWrap:{\n        wordBreak: \"keepAll\",\n    },\n    footer:{\n        padding:theme.spacing(2),\n    }\n}));\n\nexport default function Tasks(props) {\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        loadList(page);\n        // eslint-disable-next-line\n    }, [page]);\n\n    const loadList = page => {\n        API.get(\"/user/setting/tasks?page=\" + page)\n            .then(response => {\n                setTasks(response.data.tasks);\n                setTotal(response.data.total);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const getError = error => {\n        if (error === \"\"){\n            return \"-\"\n        }\n        try {\n            let res = JSON.parse(error)\n            return res.msg\n        }catch (e) {\n            return \"未知\"\n        }\n\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                任务队列\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell nowrap=\"nowrap\">创建于</TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">任务类型</TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">状态</TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">最后进度</TableCell>\n                            <TableCell nowrap=\"nowrap\">错误信息</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tasks.map((row, id) => (\n                            <TableRow key={id}>\n                                <TableCell nowrap=\"nowrap\" component=\"th\" scope=\"row\">\n                                    <TimeAgo\n                                        datetime={row.create_date}\n                                        locale=\"zh_CN\"\n                                    />\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskType(row.type)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">{getTaskStatus(row.status)}</TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskProgress(row.type,row.progress)}\n                                </TableCell>\n                                <TableCell className={classes.noWrap}>\n                                    {getError(row.error)}\n                                </TableCell>\n\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <div className={classes.footer}>\n                    <Pagination   count={Math.ceil(total / 10)}\n                                  onChange={(e,v)=>setPage(v)}\n                                  color=\"secondary\"/>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\n\nimport {\n    withStyles,\n    Paper,\n    Avatar,\n    Typography,\n    Tabs,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Grid\n} from \"@material-ui/core\";\nimport {withRouter} from \"react-router\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: \"30px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    userNav: {\n        height: \"270px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom\"\n    },\n    avatarContainer: {\n        height: \"80px\",\n        width: \"80px\",\n        borderRaidus: \"50%\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n        border: \"2px solid #fff\"\n    },\n    nickName: {\n        width: \"200px\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        marginTop: \"1px\",\n        fontSize: \"25px\",\n        color: \"#ffffff\",\n        opacity: \"0.81\",\n    },\n    th: {\n        minWidth: \"106px\"\n    },\n    mobileHide: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\"\n        }\n    },\n    tableLink: {\n        cursor: \"pointer\"\n    },\n    navigator: {\n        padding:theme.spacing(2),\n    },\n    pageInfo: {\n        marginTop: \"14px\",\n        marginLeft: \"23px\"\n    },\n    infoItem: {\n        paddingLeft: \"46px!important\",\n        paddingBottom: \"20px!important\"\n    },\n    infoContainer: {\n        marginTop: \"30px\"\n    },\n    tableContainer:{\n        overflowX:\"auto\",\n    }\n});\nconst mapStateToProps = state => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass ProfileCompoment extends Component {\n    state = {\n        listType: 0,\n        shareList: [],\n        page: 1,\n        user:null,\n        total:0,\n    };\n\n    handleChange = (event, listType) => {\n        this.setState({ listType });\n        if (listType === 1) {\n            this.loadList(1, \"hot\");\n        } else if (listType === 0) {\n            this.loadList(1, \"default\");\n        }\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, \"default\");\n    };\n\n    loadList = (page,order) => {\n        API\n            .get(\"/user/profile/\" + this.props.match.params.id + \"?page=\" + page + \"&type=\" + order)\n            .then(response => {\n                this.setState({\n                    shareList: response.data.items,\n                    user:response.data.user,\n                    total:response.data.total,\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    loadNext = () => {\n        this.loadList(\n            this.state.page + 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    loadPrev = () => {\n        this.loadList(\n            this.state.page - 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                {this.state.user === null &&\n                    <div></div>\n                }\n                {this.state.user !== null &&\n                    <Paper square>\n                        <div className={classes.userNav}>\n                            <div>\n                                <Avatar\n                                    className={classes.avatarContainer}\n                                    src={\n                                        \"/api/v3/user/avatar/\"+this.state.user.id + \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <Typography className={classes.nickName} noWrap>\n                                    {this.state.user.nick}\n                                </Typography>\n                            </div>\n                        </div>\n                        <Tabs\n                            value={this.state.listType}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                            centered\n                        >\n                            <Tab label=\"全部分享\" />\n                            <Tab label=\"热门分享\" />\n                            <Tab label=\"个人资料\" />\n                        </Tabs>\n                        {this.state.listType === 2 && (\n                            <div className={classes.infoContainer}>\n                                <Grid container spacing={24}>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            UID\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.id}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            昵称\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.nick}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            用户组\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.group}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            分享总数\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.total}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            注册日期\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                        {(this.state.listType === 0 ||\n                            this.state.listType === 1) && (\n                            <div>\n                                <div className={classes.tableContainer}>\n                                <Table className={classes.table}>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>文件名</TableCell>\n                                            <TableCell\n                                                className={classes.mobileHide}\n                                            >\n                                                分享日期\n                                            </TableCell>\n                                            <TableCell\n                                                className={[\n                                                    classes.th,\n                                                    classes.mobileHide\n                                                ]}\n                                            >\n                                                下载次数\n                                            </TableCell>\n                                            <TableCell\n                                                className={[\n                                                    classes.th,\n                                                    classes.mobileHide\n                                                ]}\n                                            >\n                                                浏览次数\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.shareList.map((row,id) => (\n                                            <TableRow\n                                                key={id}\n                                                className={classes.tableLink}\n                                                onClick={() =>\n                                                    this.props.history.push(\n                                                        \"/s/\" + row.key\n                                                    )\n                                                }\n                                            >\n                                                <TableCell>\n                                                    <Typography>\n                                                        {row.source?row.source.name:\"[已失效]\"}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    nowrap={\"nowrap\"}\n                                                    className={classes.mobileHide}\n                                                >\n                                                    {row.create_date}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={classes.mobileHide}\n                                                >\n                                                    {row.downloads}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={classes.mobileHide}\n                                                >\n                                                    {row.views}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                                </div>\n                                {this.state.shareList.length !== 0 &&\n                                this.state.listType === 0 && (\n                                    <div className={classes.navigator}>\n                                        <Pagination\n                                            count={Math.ceil(this.state.total / 10)}\n                                            onChange={(e,v)=>this.loadList(\n                                                v,\n                                                this.state.listType === 0 ? \"default\" : \"hot\"\n                                            )}\n                                            color=\"secondary\"\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </Paper>\n                }\n\n            </div>\n        );\n    }\n}\n\nconst Profile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ProfileCompoment)));\n\nexport default Profile;\n","import React, { useState, useCallback } from \"react\";\nimport {\n    Button, Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {Add, Fingerprint, HighlightOff} from \"@material-ui/icons\";\nimport API from \"../../middleware/Api\";\nimport {bufferDecode, bufferEncode} from \"../../untils\";\n\nconst useStyles = makeStyles(theme => ({\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\"\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40\n    },\n    flexContainer: {\n        display: \"flex\"\n    }\n}));\n\nexport default function Authn(props) {\n    const [selected,setSelected] = useState(\"\");\n    const [confirm,setConfirm] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteCredential = id => {\n        API.patch(\"/user/setting/authn\", {\n            id:id,\n        })\n            .then(response => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"凭证已删除\",\n                    \"success\"\n                );\n                props.remove(id)\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            }).then(()=>{\n            setConfirm(false);\n        });\n    };\n\n    const classes = useStyles();\n\n    const  addCredential = () =>{\n        if (!navigator.credentials){\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"当前浏览器或环境不支持\",\n                    \"warning\"\n                );\n\n            return\n        }\n        API.put(\"/user/authn\", {})\n            .then(response => {\n                let credentialCreationOptions = response.data;\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\n                    credentialCreationOptions.publicKey.challenge\n                );\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\n                    credentialCreationOptions.publicKey.user.id\n                );\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\n                    for (\n                        var i = 0;\n                        i <\n                        credentialCreationOptions.publicKey.excludeCredentials\n                            .length;\n                        i++\n                    ) {\n                        credentialCreationOptions.publicKey.excludeCredentials[\n                            i\n                            ].id = bufferDecode(\n                            credentialCreationOptions.publicKey\n                                .excludeCredentials[i].id\n                        );\n                    }\n                }\n\n                return navigator.credentials.create({\n                    publicKey: credentialCreationOptions.publicKey\n                });\n            })\n            .then(credential => {\n                let attestationObject = credential.response.attestationObject;\n                let clientDataJSON = credential.response.clientDataJSON;\n                let rawId = credential.rawId;\n                return API.put(\n                    \"/user/authn/finish\",\n                    JSON.stringify({\n                        id: credential.id,\n                        rawId: bufferEncode(rawId),\n                        type: credential.type,\n                        response: {\n                            attestationObject: bufferEncode(attestationObject),\n                            clientDataJSON: bufferEncode(clientDataJSON)\n                        }\n                    })\n                );\n            })\n            .then(response => {\n                props.add(response.data);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"验证器已添加\",\n                    \"success\"\n                );\n                return;\n            })\n            .catch(error => {\n                console.log(error);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    return (\n        <div>\n\n            <Dialog\n                open={confirm}\n                onClose={()=>setConfirm(false)}\n            >\n                <DialogTitle>删除凭证</DialogTitle>\n                <DialogContent>\n                    确定要吊销这个凭证吗？\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>setConfirm(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button onClick={()=>deleteCredential(selected)} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\n                外部认证器\n            </Typography>\n            <Paper>\n                <List className={classes.desenList}>\n                    {props.list.map((v, i) => (\n                        <>\n                            <ListItem button\n                                      style={{\n                                          paddingRight:60,\n                                      }}\n                                      onClick={()=>{\n                                setConfirm(true);\n                                setSelected(v.id);\n                            }}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Fingerprint />\n                                </ListItemIcon>\n                                <ListItemText primary={v.fingerprint} />\n\n                                <ListItemSecondaryAction\n                                    onClick={()=>deleteCredential(v.id)}\n                                    className={classes.flexContainer}\n                                >\n                                    <HighlightOff className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                        </>\n                    ))}\n                    <ListItem button onClick={()=>addCredential()}>\n                        <ListItemIcon className={classes.iconFix}>\n                            <Add />\n                        </ListItemIcon>\n                        <ListItemText primary=\"添加新验证器\" />\n\n                        <ListItemSecondaryAction\n                            className={classes.flexContainer}\n                        >\n                            <RightIcon className={classes.rightIcon} />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DateIcon from \"@material-ui/icons/DateRange\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\nimport AlarmOff from \"@material-ui/icons/AlarmOff\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport {applyThemes, changeViewMethod, toggleDaylightMode, toggleSnackbar} from \"../../actions\";\nimport axios from \"axios\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n    ListItemIcon,\n    withStyles,\n    Button,\n    Divider,\n    TextField,\n    Avatar,\n    Paper,\n    Typography,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    ListItemAvatar,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Switch\n} from \"@material-ui/core\";\nimport Backup from \"@material-ui/icons/Backup\";\nimport SettingsInputHdmi from \"@material-ui/icons/SettingsInputHdmi\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\nimport QRCode from \"qrcode-react\";\nimport {Brightness3, Check, ConfirmationNumber, ListAlt, PermContactCalendar} from \"@material-ui/icons\";\nimport { transformTime } from \"../../untils\";\nimport Authn from \"./Authn\";\n\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\"\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    userGravatar: {\n        backgroundColor: yellow[100],\n        color: yellow[800]\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800]\n    },\n    infoText: {\n        marginRight: \"17px\"\n    },\n    infoTextWithIcon: {\n        marginRight: \"17px\",\n        marginTop: \"1px\"\n    },\n    rightIconWithText: {\n        marginTop: \"0px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40\n    },\n    flexContainer: {\n        display: \"flex\"\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    flexContainerResponse: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"initial\"\n        }\n    },\n    desText: {\n        marginTop: \"10px\"\n    },\n    secondColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: \"50%\",\n        marginRight: \"17px\"\n    },\n    firstColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: \"50%\",\n        marginRight: \"6px\"\n    },\n    themeBlock: {\n        height: \"20px\",\n        width: \"20px\"\n    },\n    paddingBottom: {\n        marginBottom: \"30px\"\n    },\n    paddingText: {\n        paddingRight: theme.spacing(2)\n    },\n    qrcode:{\n        width: 128,\n        marginTop: 16,\n        marginRight: 16,\n    },\n});\n\nconst mapStateToProps = state => {\n    return {\n        title: state.siteConfig.title,\n        authn:state.siteConfig.authn,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        applyThemes: (color) => {\n            dispatch(applyThemes(color));\n        },\n        toggleDaylightMode:()=>{\n            dispatch(toggleDaylightMode())\n        },\n        changeView: method => {\n            dispatch(changeViewMethod(method));\n        },\n    };\n};\n\nclass UserSettingCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    state = {\n        avatarModal: false,\n        nickModal: false,\n        changePassword: false,\n        loading: \"\",\n        oldPwd: \"\",\n        newPwd: \"\",\n        webdavPwd: \"\",\n        newPwdRepeat: \"\",\n        twoFactor: false,\n        authCode: \"\",\n        changeTheme: false,\n        chosenTheme: null,\n        showWebDavUrl: false,\n        showWebDavUserName: false,\n        changeWebDavPwd: false,\n        groupBackModal: false,\n        changePolicy: false,\n        settings: {\n            uid: 0,\n            group_expires: 0,\n            policy: {\n                current: {\n                    name: \"-\",\n                    id: \"\"\n                },\n                options: []\n            },\n            qq: \"\",\n            homepage: true,\n            two_factor: \"\",\n            two_fa_secret: \"\",\n            prefer_theme: \"\",\n            themes: {},\n            authn:[],\n        }\n    };\n\n    handleClose = () => {\n        this.setState({\n            avatarModal: false,\n            nickModal: false,\n            changePassword: false,\n            loading: \"\",\n            twoFactor: false,\n            changeTheme: false,\n            showWebDavUrl: false,\n            showWebDavUserName: false,\n            changeWebDavPwd: false,\n            groupBackModal: false,\n            changePolicy: false\n        });\n    };\n\n    componentDidMount() {\n        this.loadSetting();\n    }\n\n    toggleViewMethod = () => {\n        let newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    loadSetting = () => {\n        API.get(\"/user/setting\")\n            .then(response => {\n                let theme = JSON.parse(response.data.themes);\n                response.data.themes = theme;\n                this.setState({\n                    settings: response.data\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    doChangeGroup = () => {\n        API.patch(\"/user/setting/vip\", {})\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"解约成功，更改会在数分钟后生效\",\n                    \"success\"\n                );\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useGravatar = () => {\n        this.setState({\n            loading: \"gravatar\"\n        });\n        API.put(\"/user/setting/avatar\")\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changePolicy = id => {\n        API.patch(\"/user/setting/policy\", {\n            id: id\n        })\n            .then(response => {\n                window.location.reload();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changeNick = () => {\n        this.setState({\n            loading: \"nick\"\n        });\n        API.patch(\"/user/setting/nick\", {\n            nick: this.state.nick\n        })\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"昵称已更改，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    bindQQ = () => {\n        this.setState({\n            loading: \"nick\"\n        });\n        API.patch(\"/user/setting/qq\", {})\n            .then(response => {\n                if (response.data === \"\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"已解除与QQ账户的关联\",\n                        \"success\"\n                    );\n                    this.setState({\n                        settings: {\n                            ...this.state.settings,\n                            qq: false\n                        }\n                    });\n                } else {\n                    window.location.href = response.data;\n                }\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    uploadAvatar = () => {\n        this.setState({\n            loading: \"avatar\"\n        });\n        var formData = new FormData();\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\n        API.post(\"/user/setting/avatar\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    handleToggle = () => {\n        API.patch(\"/user/setting/homepage\", {\n            status: !this.state.settings.homepage\n        })\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设置已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    settings: {\n                        ...this.state.settings,\n                        homepage: !this.state.settings.homepage\n                    }\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changhePwd = () => {\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"两次密码输入不一致\",\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: \"changePassword\"\n        });\n        API.patch(\"/user/setting/password\", {\n            old: this.state.oldPwd,\n            new: this.state.newPwd\n        })\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码已更新\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changeTheme = () => {\n        this.setState({\n            loading: \"changeTheme\"\n        });\n        API\n            .patch(\"/user/setting/theme\", {\n                theme: this.state.chosenTheme\n            })\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"主题配色已更换\",\n                    \"success\"\n                );\n                this.props.applyThemes(this.state.chosenTheme);\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changheWebdavPwd = () => {\n        this.setState({\n            loading: \"changheWebdavPwd\"\n        });\n        axios\n            .post(\"/Member/setWebdavPwd\", {\n                pwd: this.state.webdavPwd\n            })\n            .then(response => {\n                if (response.data.error === \"1\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"error\"\n                    );\n                    this.setState({\n                        loading: \"\"\n                    });\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"success\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                        changeWebDavPwd: false\n                    });\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    init2FA = () => {\n        if (this.state.settings.two_factor){\n            this.setState({ twoFactor: true });\n            return;\n        }\n        API.get(\"/user/setting/2fa\")\n            .then(response => {\n                this.setState({\n                    two_fa_secret: response.data,\n                    twoFactor: true,\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    twoFactor = () => {\n        this.setState({\n            loading: \"twoFactor\"\n        });\n        API.patch(\"/user/setting/2fa\", {\n                code: this.state.authCode\n            })\n            .then(response => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设定已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                    settings:{\n                        ...this.state.settings,\n                        two_factor:!this.state.settings.two_factor,\n                    }\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\n\n    toggleThemeMode = (current) => {\n        if (current !== null){\n            this.props.toggleDaylightMode();\n            Auth.SetPreference(\"theme_mode\",null);\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const dark = Auth.GetPreference(\"theme_mode\")\n\n        return (\n            <div>\n                <div className={classes.layout}>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个人资料\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ avatarModal: true })\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={\n                                            \"/api/v3/user/avatar/\" +\n                                            user.id +\n                                            \"/l\"\n                                        }\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary=\"头像\" />\n                                <ListItemSecondaryAction>\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <PermContactCalendar />\n                                </ListItemIcon>\n                                <ListItemText primary=\"UID\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.uid}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ nickModal: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <NickIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"昵称\" />\n\n                                <ListItemSecondaryAction\n                                    onClick={() =>\n                                        this.setState({ nickModal: true })\n                                    }\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.nickname}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <EmailIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Email\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.user_name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.props.history.push(\"/buy?tab=1\")\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GroupIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"用户组\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.group.name}\n                                        {this.state.settings.group_expires >\n                                            0 && (\n                                            <span>\n                                                {\" \"}\n                                                <TimeAgo\n                                                    datetime={\n                                                        this.state.settings\n                                                            .group_expires +\n                                                        \"000\"\n                                                    }\n                                                    locale=\"zh_CN\"\n                                                />{\" \"}\n                                                过期\n                                            </span>\n                                        )}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            {this.state.settings.group_expires > 0 && (\n                                <div>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                groupBackModal: true\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <AlarmOff />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"手动解约当前用户组\" />\n\n                                        <ListItemSecondaryAction>\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </div>\n                            )}\n                            <Divider />\n                            <ListItem button onClick={() => this.bindQQ()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <SettingsInputHdmi />\n                                </ListItemIcon>\n                                <ListItemText primary=\"QQ账号\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.qq\n                                            ? \"解除绑定\"\n                                            : \"绑定\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePolicy: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Backup />\n                                </ListItemIcon>\n                                <ListItemText primary=\"存储策略\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {\n                                            this.state.settings.policy.current\n                                                .name\n                                        }\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ConfirmationNumber />\n                                </ListItemIcon>\n                                <ListItemText primary=\"积分\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.score}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <DateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"注册时间\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {transformTime(\n                                            parseInt(user.created_at + \"000\")\n                                        )}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        安全隐私\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"个人主页\" />\n\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        onChange={this.handleToggle}\n                                        checked={this.state.settings.homepage}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePassword: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <LockIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"登录密码\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button onClick={() => this.init2FA()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <VerifyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"二步验证\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {!this.state.settings.two_factor\n                                            ? \"未开启\"\n                                            : \"已开启\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <Authn\n                        list={this.state.settings.authn}\n                        add = {\n                            (credential)=>{\n                                this.setState({\n                                    settings:{\n                                        ...this.state.settings,\n                                        authn: [...this.state.settings.authn,credential],\n                                    }\n                                })\n                            }\n                        }\n                        remove={\n                            (id)=>{\n                                let credentials = [...this.state.settings.authn];\n                                credentials = credentials.filter((v)=>{\n                                    return v.id !== id\n                                })\n                                this.setState({\n                                    settings:{\n                                        ...this.state.settings,\n                                        authn: credentials,\n                                    }\n                                })\n                            }\n                        }\n                    />\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个性化\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changeTheme: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ColorIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主题配色\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <div className={classes.firstColor}></div>\n                                    <div className={classes.secondColor}></div>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem button onClick={()=>this.toggleThemeMode(dark)}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Brightness3 />\n                                </ListItemIcon>\n                                <ListItemText primary=\"黑暗模式\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {dark&&(dark===\"dark\"\n                                            ? \"偏好开启\"\n                                            : \"偏好关闭\")}\n                                        {dark === null&&\"跟随系统\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem button onClick={()=>this.toggleViewMethod()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文件列表\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.props.viewMethod === \"icon\" && \"大图标\"}\n                                        {this.props.viewMethod === \"list\" && \"列表\"}\n                                        {this.props.viewMethod === \"smallIcon\" && \"小图标\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    {user.group.webdav && (\n                        <div>\n                            <Typography\n                                className={classes.sectionTitle}\n                                variant=\"subtitle2\"\n                            >\n                                WebDAV\n                            </Typography>\n                            <Paper>\n                                <List className={classes.desenList}>\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUrl: true\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"连接地址\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUserName: true\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <InputIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"用户名\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <SecurityIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"账号管理\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </div>\n                    )}\n                    <div className={classes.paddingBottom}></div>\n                </div>\n                <Dialog\n                    open={this.state.changePolicy}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>切换存储策略</DialogTitle>\n                    <List>\n                        {this.state.settings.policy.options.map(\n                            (value, index) => (\n                                <ListItem\n                                    button\n                                    component=\"label\"\n                                    key={index}\n                                    onClick={() => this.changePolicy(value.id)}\n                                >\n                                    <ListItemAvatar>\n                                        {value.id ===\n                                            this.state.settings.policy.current\n                                                .id && (\n                                            <Avatar\n                                                className={\n                                                    classes.policySelected\n                                                }\n                                            >\n                                                <Check />\n                                            </Avatar>\n                                        )}\n                                        {value.id !==\n                                            this.state.settings.policy.current\n                                                .id && (\n                                            <Avatar\n                                                className={\n                                                    classes.uploadFromFile\n                                                }\n                                            >\n                                                <Backup />\n                                            </Avatar>\n                                        )}\n                                    </ListItemAvatar>\n                                    <ListItemText primary={value.name} />\n                                </ListItem>\n                            )\n                        )}\n                    </List>\n                </Dialog>\n                <Dialog\n                    open={this.state.avatarModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改头像</DialogTitle>\n                    <List>\n                        <ListItem\n                            button\n                            component=\"label\"\n                            disabled={this.state.loading === \"avatar\"}\n                        >\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                ref={this.fileInput}\n                                onChange={this.uploadAvatar}\n                            />\n                            <ListItemAvatar>\n                                <Avatar className={classes.uploadFromFile}>\n                                    <PhotoIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"从文件上传\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={this.useGravatar}\n                            disabled={this.state.loading === \"gravatar\"}\n                        >\n                            <ListItemAvatar>\n                                <Avatar className={classes.userGravatar}>\n                                    <FingerprintIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.paddingText}\n                                primary=\"使用 Gravatar 头像 \"\n                            />\n                        </ListItem>\n                    </List>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            取消\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\n                    <DialogTitle>修改昵称</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            label=\"昵称\"\n                            className={classes.textField}\n                            value={this.state.nick}\n                            onChange={this.handleChange(\"nick\")}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeNick}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"nick\" ||\n                                this.state.nick === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.groupBackModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>解约用户组</DialogTitle>\n                    <DialogContent>\n                        将要退回到初始用户组，且所支付金额无法退还，确定要继续吗？\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button onClick={this.doChangeGroup} color=\"primary\">\n                            确定\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changePassword}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改登录密码</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"原密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.oldPwd}\n                                onChange={this.handleChange(\"oldPwd\")}\n                                margin=\"normal\"\n                                autoFocus\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwd}\n                                onChange={this.handleChange(\"newPwd\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"确认新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwdRepeat}\n                                onChange={this.handleChange(\"newPwdRepeat\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changhePwd}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changePassword\" ||\n                                this.state.oldPwd === \"\" ||\n                                this.state.newPwdRepeat === \"\" ||\n                                this.state.newPwd === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\n                    <DialogTitle>{this.state.settings.two_factor?\"关闭\":\"启用\"}二步验证</DialogTitle>\n                    <DialogContent>\n                        <div className={classes.flexContainerResponse}>\n\n                                {!this.state.settings.two_factor && <div className={classes.qrcode}><QRCode\n                                    value={\n                                        \"otpauth://totp/\" +\n                                        this.props.title +\n                                        \"?secret=\" +\n                                        this.state.two_fa_secret\n                                    }\n                                /></div>}\n\n                            <div className={classes.desText}>\n                                {!this.state.settings.two_factor && <Typography>\n                                请使用任意二步验证APP或者支持二步验证的密码管理软件扫描左侧二维码添加本站。扫描完成后请填写二步验证APP给出的6位验证码以开启二步验证。\n                            </Typography>}\n                                {this.state.settings.two_factor && <Typography>\n                                    请验证当前二步验证代码。\n                                </Typography>}\n                                <TextField\n                                    id=\"standard-name\"\n                                    label=\"6位验证码\"\n                                    type=\"number\"\n                                    className={classes.textField}\n                                    value={this.state.authCode}\n                                    onChange={this.handleChange(\"authCode\")}\n                                    margin=\"normal\"\n                                    autoFocus\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.twoFactor}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"twoFactor\" ||\n                                this.state.authCode === \"\"\n                            }\n                        >\n                            {this.state.settings.two_factor?\"关闭\":\"启用\"}二步验证\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeTheme}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>更改主题配色</DialogTitle>\n                    <DialogContent>\n                        <ToggleButtonGroup\n                            value={this.state.chosenTheme}\n                            exclusive\n                            onChange={this.handleAlignment}\n                        >\n                            {Object.keys(this.state.settings.themes).map(\n                                (value, key) => (\n                                    <ToggleButton value={value} key={key}>\n                                        <div\n                                            className={classes.themeBlock}\n                                            style={{ backgroundColor: value }}\n                                        />\n                                    </ToggleButton>\n                                )\n                            )}\n                        </ToggleButtonGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeTheme}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changeTheme\" ||\n                                this.state.chosenTheme === null\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUrl}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV连接地址</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={\n                                window.location.origin +\n                                \"/dav\"\n                            }\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUserName}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV用户名</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={user.user_name}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst UserSetting = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserSettingCompoment)));\n\nexport default UserSetting;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {applyThemes, setSessionStatus, toggleSnackbar} from \"../../actions\";\nimport Notice from \"../Share/NotFound\";\nimport {useHistory, useLocation} from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport {enableUploaderLoad} from \"../../middleware/Init\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport default function QQCallback(props){\n    let query = useQuery();\n    let location = useLocation();\n    let history = useHistory();\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const ApplyThemes = useCallback(theme => dispatch(applyThemes(theme)), [\n        dispatch\n    ]);\n    const SetSessionStatus = useCallback(\n        status => dispatch(setSessionStatus(status)),\n        [dispatch]\n    );\n\n    const [msg,setMsg] = useState(\"\");\n\n    const afterLogin = data =>{\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n        enableUploaderLoad();\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        history.push(\"/home\");\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    };\n\n    useEffect(()=>{\n        if(query.get(\"error_description\")){\n            setMsg(query.get(\"error_description\"));\n            return\n        }\n        if(query.get(\"code\") === null){\n            return\n        }\n        API.post(\"/callback/qq\",{\n            code:query.get(\"code\"),\n            state:query.get(\"state\"),\n        })\n            .then(response => {\n                if(response.rawData.code === 203){\n                    afterLogin(response.data);\n                }else{\n                    history.push(response.data);\n                }\n\n            })\n            .catch(error => {\n                setMsg(error.message);\n            });\n        // eslint-disable-next-line\n    },[location]);\n\n    return (\n        <>\n            {msg !== \"\" && <Notice msg={msg}/>}\n        </>\n    )\n}","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegIcon from '@material-ui/icons/AssignmentIndOutlined';\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n} from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport ReCaptcha from \"./ReCaptcha\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\",\n        },\n\n    },\n    captchaPlaceholder: {\n        width: 200\n    },\n    buttonContainer: {\n        display: \"flex\"\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16\n    },\n    avatarSuccess:{\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nfunction Register() {\n    const [input,setInput] = useState({\n        \"email\":\"\",\n        \"password\":\"\",\n        \"password_repeat\":\"\",\n        \"captcha\":\"\",\n    });\n    const [loading, setLoading] = useState(false);\n    const [emailActive, setEmailActive] = useState(false);\n    const [captchaData, setCaptchaData] = useState(null);\n\n    const title = useSelector(state => state.siteConfig.title);\n    const regCaptcha = useSelector(state => state.siteConfig.regCaptcha);\n    const useReCaptcha = useSelector(state => state.siteConfig.captcha_IsUseReCaptcha);\n    const reCaptchaKey = useSelector(state => state.siteConfig.captcha_ReCaptchaKey);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]:e.target.value\n        })\n    }\n\n    const classes = useStyles();\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    const register = e =>{\n        e.preventDefault();\n\n        if (input.password !== input.password_repeat){\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return\n        }\n\n        setLoading(true);\n        API.post(\"/user\", {\n            userName: input.email,\n            Password: input.password,\n            captchaCode: input.captcha\n        })\n            .then(response => {\n                setLoading(false);\n                if (response.rawData.code === 203){\n                    setEmailActive(true);\n                }else{\n                    history.push(\"/login?username=\"+input.email)\n                    ToggleSnackbar(\"top\", \"right\", \"注册成功\", \"success\");\n                }\n\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha) {\n                    refreshCaptcha();\n                }\n            });\n    }\n\n    useEffect(() => {\n        if (regCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n    }, [regCaptcha]);\n\n    return (\n        <div className={classes.layout}>\n            <>\n                {!emailActive &&  <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <RegIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        注册 {title}\n                    </Typography>\n\n                    <form className={classes.form} onSubmit={register}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"email\">电子邮箱</InputLabel>\n                            <Input\n                                id=\"email\"\n                                type=\"email\"\n                                name=\"email\"\n                                onChange={handleInputChange(\"email\")}\n                                autoComplete\n                                value={input.email}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"password\">密码</InputLabel>\n                            <Input\n                                name=\"password\"\n                                onChange={handleInputChange(\"password\")}\n                                type=\"password\"\n                                id=\"password\"\n                                value={input.password}\n                                autoComplete\n                            />\n                        </FormControl>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"password\">密码</InputLabel>\n                            <Input\n                                name=\"pwdRepeat\"\n                                onChange={handleInputChange(\"password_repeat\")}\n                                type=\"password\"\n                                id=\"pwdRepeat\"\n                                value={input.password_repeat}\n                                autoComplete />\n                        </FormControl>\n                        {regCaptcha && !useReCaptcha && (\n                            <div className={classes.captchaContainer}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"captcha\">\n                                        验证码\n                                    </InputLabel>\n                                    <Input\n                                        name=\"captcha\"\n                                        onChange={handleInputChange(\"captcha\")}\n                                        type=\"text\"\n                                        id=\"captcha\"\n                                        value={input.captcha}\n                                        autoComplete\n                                    />\n                                </FormControl>{\" \"}\n                                <div>\n                                    {captchaData === null && (\n                                        <div\n                                            className={\n                                                classes.captchaPlaceholder\n                                            }\n                                        >\n                                            <Placeholder />\n                                        </div>\n                                    )}\n                                    {captchaData !== null && (\n                                        <img\n                                            src={captchaData}\n                                            alt=\"captcha\"\n                                            onClick={refreshCaptcha}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        )}\n\n                        {regCaptcha && useReCaptcha && (\n                            <div className={classes.captchaContainer}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <ReCaptcha\n                                        style={{ display: \"inline-block\" }}\n                                        sitekey={reCaptchaKey}\n                                        onChange={value=>\n                                            setInput({\n                                                ...input,\n                                                captcha:value\n                                            })\n                                        }\n                                        id=\"captcha\"\n                                        name=\"captcha\"\n                                    />\n                                </FormControl>{\" \"}\n                            </div>\n                        )}\n\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                        >\n                            注册账号\n                        </Button>\n                    </form>\n\n                    <Divider />\n                    <div className={classes.link}>\n                        <div>\n                            <Link href={\"/#/login\"}>返回登录</Link>\n                        </div>\n                        <div>\n                            <Link href={\"/#/forget\"}>忘记密码</Link>\n                        </div>\n                    </div>\n                </Paper>}\n                {emailActive &&\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatarSuccess}>\n                        <EmailIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        邮件激活\n                    </Typography>\n                    <Typography style={{marginTop:\"10px\"}}>一封激活邮件已经发送至您的邮箱，请访问邮件中的链接以继续完成注册。</Typography>\n\n                </Paper>\n                }\n\n            </>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n} from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport {useLocation} from \"react-router\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Activation() {\n    let query = useQuery();\n    let location = useLocation();\n\n    const [success,setSuccess] = useState(false);\n    const [email,setEmail] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const classes = useStyles();\n\n\n\n    useEffect(() => {\n        API.get(\"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\"))\n            .then(response => {\n                setEmail(response.data);\n                setSuccess(true);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                history.push(\"/login\");\n            });\n        // eslint-disable-next-line\n    }, [location]);\n\n    return (\n        <div className={classes.layout}>\n            {success && <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <EmailIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    激活成功\n                </Typography>\n                <Typography style={{marginTop:\"20px\"}}>您的账号已被成功激活。</Typography>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={()=>history.push(\"/login?username=\"+email)}\n                >\n                    返回登录\n                </Button>\n\n            </Paper>}\n\n\n        </div>\n    );\n}\n\nexport default Activation;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport { useLocation } from \"react-router\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    },\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ResetForm() {\n    let query = useQuery();\n    const [input, setInput] = useState({\n        password: \"\",\n        password_repeat: \"\"\n    });\n    const [loading, setLoading] = useState(false);\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]:e.target.value\n        })\n    }\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const submit = e => {\n        e.preventDefault();\n        if (input.password !== input.password_repeat){\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return\n        }\n        setLoading(true);\n        API.patch(\"/user/reset\", {\n            secret: query.get(\"sign\"),\n            id: query.get(\"id\"),\n            Password: input.password,\n        })\n            .then(response => {\n                setLoading(false);\n                history.push(\"/login\");\n                ToggleSnackbar(\"top\", \"right\", \"密码已重设\", \"success\");\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">新密码</InputLabel>\n                        <Input\n                            id=\"pwd\"\n                            type=\"password\"\n                            name=\"pwd\"\n                            onChange={handleInputChange(\"password\")}\n                            autoComplete\n                            value={input.password}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">重复新密码</InputLabel>\n                        <Input\n                            id=\"pwdRepeat\"\n                            type=\"password\"\n                            name=\"pwdRepeat\"\n                            onChange={handleInputChange(\"password_repeat\")}\n                            autoComplete\n                            value={input.password_repeat}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        重设密码\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/#/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/#/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default ResetForm;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport ReCaptcha from \"./ReCaptcha\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\"\n    },\n    captchaPlaceholder: {\n        width: 200\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    }\n}));\n\nfunction Reset() {\n    const [input, setInput] = useState({\n        email: \"\",\n        captcha: \"\"\n    });\n    const [captchaData, setCaptchaData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const forgetCaptcha = useSelector(state => state.siteConfig.forgetCaptcha);\n    const useReCaptcha = useSelector(state => state.siteConfig.captcha_IsUseReCaptcha);\n    const reCaptchaKey = useSelector(state => state.siteConfig.captcha_ReCaptchaKey);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]: e.target.value\n        });\n    };\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useEffect(() => {\n        if (forgetCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n        // eslint-disable-next-line\n    }, [forgetCaptcha]);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/reset\", {\n            userName: input.email,\n            captchaCode: input.captcha\n        })\n            .then(response => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", \"密码重置邮件已发送，请注意查收\", \"success\");\n\n\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha){\n                    refreshCaptcha();\n                }\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">注册邮箱</InputLabel>\n                        <Input\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleInputChange(\"email\")}\n                            autoComplete\n                            value={input.email}\n                            autoFocus\n                        />\n                    </FormControl>\n                    {forgetCaptcha && !useReCaptcha && (\n                        <div className={classes.captchaContainer}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"captcha\">\n                                    验证码\n                                </InputLabel>\n                                <Input\n                                    name=\"captcha\"\n                                    onChange={handleInputChange(\"captcha\")}\n                                    type=\"text\"\n                                    id=\"captcha\"\n                                    value={input.captcha}\n                                    autoComplete\n                                />\n                            </FormControl>{\" \"}\n                            <div>\n                                {captchaData === null && (\n                                    <div className={classes.captchaPlaceholder}>\n                                        <Placeholder />\n                                    </div>\n                                )}\n                                {captchaData !== null && (\n                                    <img\n                                        src={captchaData}\n                                        alt=\"captcha\"\n                                        onClick={refreshCaptcha}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    )}\n\n                    {forgetCaptcha && useReCaptcha && (\n                        <div className={classes.captchaContainer}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <ReCaptcha\n                                    style={{ display: \"inline-block\" }}\n                                    sitekey={reCaptchaKey}\n                                    onChange={value=>\n                                        setInput({\n                                            ...input,\n                                            captcha:value\n                                        })\n                                    }\n                                    id=\"captcha\"\n                                    name=\"captcha\"\n                                />\n                            </FormControl>{\" \"}\n                        </div>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        发送密码重置邮件\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/#/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/#/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Reset;\n","\nconst checkSelectedProps = (state)=>{\n    let isMultiple,withFolder,withFile=false;\n    isMultiple = (state.selected.length>1);\n    // eslint-disable-next-line\n    state.selected.map((value)=>{\n        if(value.type===\"dir\"){\n            withFolder = true;\n        }else if(value.type===\"file\"){\n            withFile = true;\n        }\n    })\n    return [isMultiple,withFolder,withFile];\n}\n\nconst doNavigate = (path,state)=>{\n    window.currntPath = path;\n    return Object.assign({}, state, {\n        navigator:Object.assign({}, state.navigator, {\n            path: path\n        }),\n        viewUpdate:Object.assign({}, state.viewUpdate, {\n            contextOpen:false,\n            navigatorError:false,\n            navigatorLoading:path !== state.navigator.path,\n        }),\n        explorer:Object.assign({}, state.explorer, {\n            selected:[],\n            selectProps: {\n                isMultiple:false,\n                withFolder:false,\n                withFile:false,\n            },\n            keywords:null,\n        }),\n    });\n}\n\nconst cloudreveApp = (state = [], action) => {\n    switch (action.type) {\n        case 'DRAWER_TOGGLE':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    open:action.open,\n                }),\n            });\n        case 'CHANGE_VIEW_METHOD':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    explorerViewMethod:action.method,\n                }),\n            });\n        case 'CHANGE_SORT_METHOD':\n            let list = [...state.explorer.fileList,...state.explorer.dirList];\n            // eslint-disable-next-line\n            list.sort((a,b)=>{\n                switch (action.method) {\n                    case \"sizePos\":\n                        return a.size-b.size;\n                    case \"sizeRes\":\n                        return b.size-a.size;\n                    case 'namePos':\n                        return a.name.localeCompare(b.name);\n                    case 'nameRev':\n                        return b.name.localeCompare(a.name);\n                    case 'timePos':\n                        return Date.parse(a.date)-Date.parse(b.date);\n                    case 'timeRev':\n                        return Date.parse(b.date)-Date.parse(a.date);\n                    default:\n                        break;\n                }\n            })\n            var dirList =  list.filter(function (x) {\n                return x.type === \"dir\";\n            });\n            var fileList =  list.filter(function (x) {\n                return x.type === \"file\";\n            });\n\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    sortMethod:action.method,\n                }),\n                explorer: Object.assign({}, state.explorer, {\n                    fileList: fileList,\n                    dirList: dirList,\n                }),\n            });\n        case 'CHANGE_CONTEXT_MENU':\n            if(state.viewUpdate.contextOpen && action.open){\n                return Object.assign({}, state);\n            }\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                contextOpen: action.open,\n                contextType:action.menuType,\n                }),\n            });\n        case 'DRAG_AND_DROP':\n                return Object.assign({}, state, {\n                    explorer: Object.assign({}, state.explorer, {\n                        dndSignal: !state.explorer.dndSignal,\n                        dndTarget:action.target,\n                        dndSource:action.source,\n                    }),\n                });\n        case 'SET_NAVIGATOR_LOADING_STATUE':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    navigatorLoading:action.status,\n                }),\n            });\n        case 'SET_NAVIGATOR_ERROR':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    navigatorError: action.status,\n                    navigatorErrorMsg: action.msg,\n                }),\n            });\n        case 'UPDATE_FILE_LIST':\n            // eslint-disable-next-line\n            action.list.sort((a,b)=>{\n                switch (state.viewUpdate.sortMethod) {\n                    case \"sizePos\":\n                        return a.size-b.size;\n                    case \"sizeRes\": \n                        return b.size-a.size;\n                    case 'namePos':\n                        return a.name.localeCompare(b.name);\n                    case 'nameRev':\n                        return b.name.localeCompare(a.name);\n                    case 'timePos':\n                        return Date.parse(a.date)-Date.parse(b.date);\n                    case 'timeRev':\n                        return Date.parse(b.date)-Date.parse(a.date);\n                    default:\n                        break; \n                }\n            })\n            // eslint-disable-next-line\n            var dirList =  action.list.filter(function (x) {\n                return x.type === \"dir\";\n            });\n            // eslint-disable-next-line\n            var fileList =  action.list.filter(function (x) {\n                return x.type === \"file\";\n            });\n            return Object.assign({}, state, {\n                explorer: Object.assign({}, state.explorer, {\n                    fileList: fileList,\n                    dirList: dirList,\n                }),\n            });\n        case 'ADD_SELECTED_TARGET':\n            var newState =  Object.assign({}, state, {\n                explorer:Object.assign({}, state.explorer, {\n                    selected: [...state.explorer.selected,action.targets]\n                }),\n            });\n            var selectedProps = checkSelectedProps(newState.explorer);\n            return Object.assign({}, newState, {\n                explorer:Object.assign({}, newState.explorer, {\n                    selectProps: {\n                        isMultiple:selectedProps[0],\n                        withFolder:selectedProps[1],\n                        withFile:selectedProps[2],\n                    }\n                }),\n            });\n        case 'SET_SELECTED_TARGET':\n            // eslint-disable-next-line\n            var newState =  Object.assign({}, state, {\n                explorer:Object.assign({}, state.explorer, {\n                    selected: action.targets\n                }),\n            });\n            // eslint-disable-next-line\n            var selectedProps = checkSelectedProps(newState.explorer);\n            return Object.assign({}, newState, {\n                explorer:Object.assign({}, newState.explorer, {\n                    selectProps: {\n                        isMultiple:selectedProps[0],\n                        withFolder:selectedProps[1],\n                        withFile:selectedProps[2],\n                    }\n                }),\n            });\n        case 'RMOVE_SELECTED_TARGET':\n            var oldSelected = state.explorer.selected.concat();\n            oldSelected.splice(action.id,1);\n            // eslint-disable-next-line\n            var newState =  Object.assign({}, state, {\n                explorer:Object.assign({}, state.explorer, {\n                    selected: oldSelected\n                }),\n            });\n            // eslint-disable-next-line\n            var selectedProps = checkSelectedProps(newState.explorer);\n            return Object.assign({}, newState, {\n                explorer:Object.assign({}, newState.explorer, {\n                    selectProps: {\n                        isMultiple:selectedProps[0],\n                        withFolder:selectedProps[1],\n                        withFile:selectedProps[2],\n                    }\n                }),\n            });\n        case 'NAVIGATOR_TO':\n            return doNavigate(action.path,state);\n        case 'TOGGLE_DAYLIGHT_MODE':{\n            let copy = Object.assign({}, state);\n            if (copy.siteConfig.theme.palette.type === undefined || copy.siteConfig.theme.palette.type === \"light\"){\n                return {\n                    ...state,\n                    siteConfig: {\n                        ...state.siteConfig,\n                        theme:{\n                            ...state.siteConfig.theme,\n                            palette:{\n                                ...state.siteConfig.theme.palette,\n                                type:\"dark\",\n                            }\n                        },\n                    },\n                };\n            }\n            return {\n                ...state,\n                siteConfig: {\n                    ...state.siteConfig,\n                    theme:{\n                        ...state.siteConfig.theme,\n                        palette:{\n                            ...state.siteConfig.theme.palette,\n                            type:\"light\",\n                        }\n                    },\n                },\n            };\n        }\n        case 'APPLY_THEME':\n            if (state.siteConfig.themes !== null){\n                let themes = JSON.parse(state.siteConfig.themes);\n                if (themes[action.theme] === undefined){\n                    return state;\n                }\n                return Object.assign({}, state, {\n                    siteConfig: Object.assign({}, state.siteConfig, {\n                        theme:themes[action.theme],\n                    }),\n                });\n            }\n            break\n        case 'NAVIGATOR_UP':\n            var pathSplit = state.navigator.path.split(\"/\");\n            pathSplit.pop();\n            var newPath = pathSplit.length===1?\"/\":pathSplit.join(\"/\");\n            return doNavigate(newPath,state);\n        case 'OPEN_CREATE_FOLDER_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        createNewFolder:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_RENAME_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        rename:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_REMOVE_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        remove:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_MOVE_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        move:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_RESAVE_DIALOG':\n            window.shareKey = action.key;\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        resave:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'SET_USER_POPOVER':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    userPopoverAnchorEl:action.anchor,\n                }),\n            });\n        case 'SET_SHARE_USER_POPOVER':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    shareUserPopoverAnchorEl:action.anchor,\n                }),\n            });\n        case 'OPEN_SHARE_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        share:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'SET_SITE_CONFIG':\n                return Object.assign({}, state, {\n                    siteConfig: action.config,\n                });\n        case 'OPEN_MUSIC_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        music:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_REMOTE_DOWNLOAD_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        remoteDownload:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_TORRENT_DOWNLOAD_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        torrentDownload:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_DECOMPRESS_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        decompress:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_COMPRESS_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        compress:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_GET_SOURCE_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        getSource:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n         case 'OPEN_COPY_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        copy:true,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'OPEN_LOADING_DIALOG':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        loading:true,\n                        loadingText:action.text,\n                    }),\n                    contextOpen:false,\n                }),\n            });\n        case 'CLOSE_ALL_MODALS': \n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modals: Object.assign({}, state.viewUpdate.modals, {\n                        createNewFolder:false,\n                        rename:false,\n                        move:false,\n                        remove:false,\n                        share:false,\n                        music:false,\n                        remoteDownload:false,\n                        torrentDownload:false,\n                        getSource:false,\n                        resave:false,\n                        copy:false,\n                        loading:false,\n                        compress:false,\n                        decompress:false,\n                    }),\n                }),\n            });\n        case 'CHANGE_SUB_TITLE':\n            document.title = (action.title === null || action.title === undefined) ? state.siteConfig.title : (action.title + \" - \" +state.siteConfig.title);\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    subTitle: action.title,\n                }),\n            });\n        case 'TOGGLE_SNACKBAR':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    snackbar:{\n                        toggle:!state.viewUpdate.snackbar.toggle,\n                        vertical:action.vertical,\n                        horizontal:action.horizontal,\n                        msg:action.msg,\n                        color:action.color,\n                    },\n                }),\n            });\n        case 'SET_MODALS_LOADING':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    modalsLoading:action.status,\n                }),\n            });\n        case 'SET_SESSION_STATUS':\n            return {\n                ...state,\n                viewUpdate: {\n                    ...state.viewUpdate,\n                    isLogin:action.status,\n                }\n            }\n        case 'ENABLE_LOAD_UPLOADER':\n            return Object.assign({}, state, {\n                viewUpdate: Object.assign({}, state.viewUpdate, {\n                    loadUploader:true,\n                }),\n            });\n        case 'REFRESH_FILE_LIST':\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    refresh:!state.navigator.refresh,\n                }),\n                explorer:Object.assign({}, state.explorer, {\n                    selected:[],\n                    selectProps: {\n                        isMultiple:false,\n                        withFolder:false,\n                        withFile:false, \n                    }\n                }),\n            });\n        case 'SEARCH_MY_FILE':\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    path: \"/搜索结果\",\n                    refresh:state.explorer.keywords === null? state.navigator.refresh:!state.navigator.refresh,\n                }),\n                viewUpdate:Object.assign({}, state.viewUpdate, {\n                    contextOpen:false,\n                    navigatorError:false,\n                    navigatorLoading:true,\n                }),\n                explorer:Object.assign({}, state.explorer, {\n                    selected:[],\n                    selectProps: {\n                        isMultiple:false,\n                        withFolder:false,\n                        withFile:false, \n                    },\n                    keywords:action.keywords,\n                }),\n            });\n        case 'SHOW_IMG_PREIVEW':\n            return Object.assign({}, state, {\n                explorer:Object.assign({}, state.explorer, {\n                    imgPreview: {\n                        first:action.first,\n                        other:state.explorer.fileList,\n                    },\n                }),\n            });\n        case 'REFRESH_STORAGE':\n            return Object.assign({}, state, {\n                viewUpdate:Object.assign({}, state.viewUpdate, {\n                    storageRefresh:!state.viewUpdate.storageRefresh,\n                }),\n            });\n        case 'SAVE_FILE':\n            return Object.assign({}, state, {\n                explorer:Object.assign({}, state.explorer, {\n                    fileSave:!state.explorer.fileSave,\n                }),\n            });\n        default:\n            return state\n    }\n  }\n  \n  \nexport default cloudreveApp","import React  from \"react\";\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // 更新 state 使下一次渲染能够显示降级后的 UI\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // 你同样可以将错误日志上报给服务器\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // 你可以自定义降级后的 UI 并渲染\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","import React, {Suspense} from \"react\";\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport App from \"./App\";\nimport cloureveApp from \"./reducers\";\nimport { InitSiteConfig, UpdateSiteConfig } from \"./middleware/Init\";\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nconst Admin = React.lazy(() => import(\"./Admin\"));\n\nserviceWorker.register();\n\nconst defaultStatus = InitSiteConfig({\n    siteConfig: {\n        title: \"Cloudreve\",\n        loginCaptcha: false,\n        regCaptcha: false,\n        forgetCaptcha: false,\n        emailActive: false,\n        QQLogin: false,\n        themes:null,\n        authn:false,\n        theme: {\n            palette: {\n                common: { black: \"#000\", white: \"#fff\" },\n                background: { paper: \"#fff\", default: \"#fafafa\" },\n                primary: {\n                    light: \"#7986cb\",\n                    main: \"#3f51b5\",\n                    dark: \"#303f9f\",\n                    contrastText: \"#fff\"\n                },\n                secondary: {\n                    light: \"#ff4081\",\n                    main: \"#f50057\",\n                    dark: \"#c51162\",\n                    contrastText: \"#fff\"\n                },\n                error: {\n                    light: \"#e57373\",\n                    main: \"#f44336\",\n                    dark: \"#d32f2f\",\n                    contrastText: \"#fff\"\n                },\n                text: {\n                    primary: \"rgba(0, 0, 0, 0.87)\",\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\n                    hint: \"rgba(0, 0, 0, 0.38)\"\n                },\n                explorer: {\n                    filename: \"#474849\",\n                    icon: \"#8f8f8f\",\n                    bgSelected: \"#D5DAF0\",\n                    emptyIcon: \"#e8e8e8\"\n                }\n            }\n        },\n        captcha_IsUseReCaptcha: false,\n        captcha_ReCaptchaKey: \"defaultKey\"\n    },\n    navigator: {\n        path: \"/\",\n        refresh: true\n    },\n    viewUpdate: {\n        isLogin:false,\n        loadUploader:false,\n        open: false,\n        explorerViewMethod: \"icon\",\n        sortMethod: \"timePos\",\n        subTitle:null,\n        contextType: \"none\",\n        menuOpen: false,\n        navigatorLoading: true,\n        navigatorError: false,\n        navigatorErrorMsg: null,\n        modalsLoading: false,\n        storageRefresh: false,\n        userPopoverAnchorEl: null,\n        shareUserPopoverAnchorEl: null,\n        modals: {\n            createNewFolder: false,\n            rename: false,\n            move: false,\n            remove: false,\n            share: false,\n            music: false,\n            remoteDownload: false,\n            torrentDownload: false,\n            getSource: false,\n            copy:false,\n            resave: false,\n            compress:false,\n            decompress:false,\n        },\n        snackbar: {\n            toggle: false,\n            vertical: \"top\",\n            horizontal: \"center\",\n            msg: \"\",\n            color: \"\"\n        }\n    },\n    explorer: {\n        dndSignal:false,\n        dndTarget:null,\n        dndSource:null,\n        fileList: [],\n        dirList: [],\n        selected: [],\n        selectProps: {\n            isMultiple: false,\n            withFolder: false,\n            withFile: false\n        },\n        imgPreview: {\n            first: null,\n            other: []\n        },\n        keywords: null\n    }\n});\n\nlet store = createStore(cloureveApp, defaultStatus,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nUpdateSiteConfig(store);\n\nReactDOM.render(\n    <ErrorBoundary>\n    <Provider store={store}>\n        <Router>\n            <Switch>\n                <Route path=\"/admin\">\n                    <Suspense fallback={\"Loading...\"}>\n                        <Admin />\n                    </Suspense>\n                </Route>\n                <Route exact path=\"\">\n                    <App />\n                </Route>\n            </Switch>\n        </Router>\n    </Provider></ErrorBoundary>,\n    document.getElementById(\"root\")\n);\n","import React, { Suspense } from \"react\";\nimport AuthRoute from \"./middleware/AuthRoute\";\nimport Navbar from \"./component/Navbar/Navbar.js\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport {Redirect, Route, Switch, useRouteMatch} from \"react-router-dom\";\nimport Auth from \"./middleware/Auth\";\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport PageLoading from \"./component/Placeholder/PageLoading.js\";\nimport {changeThemeColor} from \"./untils\";\nimport NotFound from \"./component/Share/NotFound\";\n\n// Lazy loads\nimport LoginForm from \"./component/Login/LoginForm\"\nimport FileManager from \"./component/FileManager/FileManager.js\"\nimport VideoPreview from \"./component/Viewer/Video.js\"\nimport SearchResult from \"./component/Share/SearchResult\"\nimport MyShare from \"./component/Share/MyShare\"\nimport Download from \"./component/Download/Download\"\nimport SharePreload from \"./component/Share/SharePreload\"\nimport DocViewer from \"./component/Viewer/Doc\"\nimport TextViewer from \"./component/Viewer/Text\"\nimport Quota from \"./component/VAS/Quota\"\nimport BuyQuota from \"./component/VAS/BuyQuota\"\nimport WebDAV from \"./component/Setting/WebDAV\"\nimport Tasks from \"./component/Setting/Tasks\"\nimport Profile from \"./component/Setting/Profile\"\nimport UserSetting from \"./component/Setting/UserSetting\"\nimport QQCallback from \"./component/Login/QQ\"\nimport Register from \"./component/Login/Register\"\nimport Activation from \"./component/Login/Activication\"\nimport ResetForm from \"./component/Login/ResetForm\"\nimport Reset from \"./component/Login/Reset\"\n\nexport default function App() {\n    const themeConfig = useSelector(state => state.siteConfig.theme);\n    const isLogin = useSelector(state => state.viewUpdate.isLogin);\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n    const theme = React.useMemo(() => {\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\n        let prefer = Auth.GetPreference(\"theme_mode\");\n        if (prefer) {\n            themeConfig.palette.type = prefer;\n        }\n        let theme = createMuiTheme({\n            ...themeConfig,\n            palette: {\n                ...themeConfig.palette,\n                primary: {\n                    ...themeConfig.palette.primary,\n                    main:\n                        themeConfig.palette.type === \"dark\"\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\n                            : themeConfig.palette.primary.main\n                }\n            }\n        });\n        changeThemeColor(themeConfig.palette.type === \"dark\"?theme.palette.background.default:theme.palette.primary.main);\n        return theme;\n    }, [prefersDarkMode, themeConfig]);\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n            display: \"flex\"\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing.unit * 0,\n            minWidth: 0\n        },\n        toolbar: theme.mixins.toolbar\n    }));\n\n    const classes = useStyles();\n\n    let { path } = useRouteMatch();\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root} id=\"container\">\n                    <CssBaseline />\n                    <AlertBar />\n                    <Navbar />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            <AuthRoute exact path={path} isLogin={isLogin}>\n                                <Redirect\n                                    to={{\n                                        pathname: \"/home\",\n                                    }}\n                                />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\n                                    <FileManager />\n                            </AuthRoute>\n\n                            <AuthRoute\n                                path={`${path}video`}\n                                isLogin={isLogin}\n                            >\n                                    <VideoPreview />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\n                                    <TextViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\n                                    <DocViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\n                                    <Download />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\n                                    <MyShare />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}search`} isLogin={isLogin}>\n                                    <SearchResult />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}quota`} isLogin={isLogin}>\n                                    <Quota />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}buy`} isLogin={isLogin}>\n                                    <BuyQuota />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}setting`} isLogin={isLogin}>\n                                    <UserSetting />\n                            </AuthRoute>\n\n\n                            <AuthRoute path={`${path}profile/:id`} isLogin={isLogin}>\n                                    <Profile />\n                            </AuthRoute>\n\n\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\n                                    <WebDAV />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\n                                    <Tasks />\n                            </AuthRoute>\n\n                            <Route path={`${path}login`} exact>\n                                    <LoginForm />\n                            </Route>\n\n                            <Route path={`${path}signup`} exact>\n                                    <Register />\n                            </Route>\n\n                            <Route path={`${path}activate`} exact>\n                                    <Activation />\n                            </Route>\n\n                            <Route path={`${path}reset`} exact>\n                                    <ResetForm />\n                            </Route>\n\n                            <Route path={`${path}forget`} exact>\n                                    <Reset />\n                            </Route>\n\n                            <Route path={`${path}login/qq`}>\n                                    <QQCallback />\n                            </Route>\n\n                            <Route exact path={`${path}s/:id`}>\n                                    <SharePreload />\n                            </Route>\n\n                            <Route path={`${path}s/:id/video(/)*`}>\n                                    <VideoPreview />\n                            </Route>\n\n                            <Route path={`${path}s/:id/doc(/)*`}>\n                                    <DocViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/text(/)*`}>\n                                    <TextViewer />\n                            </Route>\n\n                            <Route path=\"*\">\n                                <NotFound msg={\"页面不存在\"} />\n                            </Route>\n\n\n                        </Switch>\n                    </main>\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport FolderIcon from '@material-ui/icons/Folder'\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport UpIcon from \"@material-ui/icons/ArrowUpward\"\nimport { connect } from 'react-redux'\nimport classNames from 'classnames';\nimport {\n    toggleSnackbar,\n} from \"../../actions/index\"\nimport axios from 'axios'\n\nimport {\n    MenuList,\n    MenuItem,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n    withStyles,\n    ListItemSecondaryAction,\n} from '@material-ui/core';\nimport API from '../../middleware/Api'\nimport { Api } from 'mdi-material-ui';\n\nconst mapStateToProps = state => {\n    return {\n        keywords: state.explorer.keywords,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar:(vertical,horizontal,msg,color)=>{\n            dispatch(toggleSnackbar(vertical,horizontal,msg,color))\n        },\n    }\n}\n\n\nconst styles = theme => ({\n    iconWhite:{\n        color: theme.palette.common.white,\n    },\n    selected: {\n          backgroundColor: theme.palette.primary.main+\"!important\",\n          '& $primary, & $icon': {\n            color: theme.palette.common.white,\n          },\n      },\n    primary: {},\n    icon: {},\n    buttonIcon:{},\n    selector:{\n        minWidth: \"300px\",\n    },\n    container:{\n        maxHeight: \"330px\",\n        overflowY:\" auto\",\n    }\n})\n\n\nclass PathSelectorCompoment extends Component {\n\n    state = {\n        presentPath:\"/\",\n        dirList:[],\n        selectedTarget:null,\n    }\n\n    componentDidMount= ()=>{\n        let toBeLoad = this.props.presentPath;\n        this.enterFolder(this.props.keywords === null ? toBeLoad : \"/\");\n    }\n\n    back = ()=>{\n        let paths = this.state.presentPath.split(\"/\");\n        paths.pop();\n        let toBeLoad = paths.join(\"/\");\n        this.enterFolder(toBeLoad===\"\"?\"/\":toBeLoad);\n    }\n\n    enterFolder = (toBeLoad)=>{\n        API.get('/directory'+toBeLoad,)\n        .then( (response)=> {\n            var dirList =  response.data.objects.filter( (x)=> {\n                return (x.type === \"dir\" && (this.props.selected.findIndex((value)=>{\n                    return (value.name === x.name )&&(value.path === x.path);\n                }))===-1);\n            });\n            if(toBeLoad ===\"/\"){\n                dirList.unshift({name:\"/\",path:\"\"})\n            }\n            this.setState({\n                presentPath:toBeLoad,\n                dirList:dirList,\n                selectedTarget:null,\n            })\n        })\n        .catch((error) =>{\n            this.props.toggleSnackbar(\"top\",\"right\",error.message,\"warning\");\n        });\n    }\n\n    handleSelect = (index) =>{\n        this.setState({selectedTarget:index});\n        this.props.onSelect(this.state.dirList[index]);\n    }\n\n    render() {\n        \n        const { classes} = this.props;\n\n        return (\n            <div className={classes.container}>\n            <MenuList className={classes.selector}>\n                {this.state.presentPath!==\"/\"&&\n                <MenuItem onClick={this.back}>\n                    <ListItemIcon >\n                        <UpIcon />\n                    </ListItemIcon>\n                    <ListItemText  primary=\"返回上一层\" />\n                </MenuItem>\n                }\n                {this.state.dirList.map((value,index)=>(\n                    <MenuItem classes={{\n                        selected:classes.selected\n                    }} key={index} selected={this.state.selectedTarget === index} onClick={()=>this.handleSelect(index)}>\n                        <ListItemIcon className={classes.icon}>\n                            <FolderIcon />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }}  primary={value.name} />\n                        {value.name!==\"/\"&&<ListItemSecondaryAction className={classes.buttonIcon}>\n                            <IconButton className={classNames({\n                                [classes.iconWhite]:this.state.selectedTarget === index,\n                            })} onClick={()=>this.enterFolder(value.path === \"/\"?value.path+value.name:value.path+\"/\"+value.name)}>\n                                <RightIcon  />\n                            </IconButton>\n                        </ListItemSecondaryAction>}\n                    </MenuItem>\n                ))}\n                \n            </MenuList>\n                \n            </div>\n        );\n    }\n}\n\nPathSelectorCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    presentPath:PropTypes.string.isRequired,\n    selected:PropTypes.array.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n\n)(withStyles(styles)(PathSelectorCompoment))","import axios from \"axios\";\nimport Auth from \"./Auth\";\n\nexport let baseURL = \"/api/v3\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n    crossDomain: true\n});\n\nfunction AppError(message,code,error) {\n    this.code = code;\n    this.message = message || '未知错误';\n    this.message += error?(\" \"+error) : \"\";\n    this.stack = (new Error()).stack;\n}\nAppError.prototype = Object.create(Error.prototype);\nAppError.prototype.constructor = AppError;\n\ninstance.interceptors.response.use(\n    function(response) {\n        response.rawData = response.data;\n        response.data = response.data.data;\n        if (\n            response.rawData.code !== undefined &&\n            response.rawData.code !== 0 &&\n            response.rawData.code !== 203\n        ) {\n            // 登录过期\n            if (response.rawData.code === 401) {\n                Auth.signout();\n                window.location.href = \"/index.php\";\n            }\n\n            // 非管理员\n            if (response.rawData.code === 40008) {\n                window.location.href = \"/#/home\";\n            }\n            throw new AppError(response.rawData.msg,response.rawData.code,response.rawData.error);\n        }\n        return response;\n    },\n    function(error) {\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n"],"sourceRoot":""}