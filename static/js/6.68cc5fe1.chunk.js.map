{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/AddPack.js","component/Admin/Dialogs/AddGroupk.js","component/Admin/Dialogs/AddRedeem.js","component/Admin/Setting/VAS.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Aria2.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Common/DomainInput.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Order/Order.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","AttachMoney","Palette","CloudDownload","Image","Storage","Group","Person","InsertDriveFile","Share","ShoppingCart","Assignment","ListAlt","Dashboard","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","aspect","strokeDasharray","dataKey","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","src","is_pro","Chip","size","label","component","Launch","GitHub","Forum","Telegram","alt","relationships","startUser","avatarUrl","Fragment","inline","username","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","loading","setLoading","siteName","siteTitle","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","Select","MenuItem","disabled","AlertDialog","Access","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","qq_login","qq_direct_login","qq_login_id","qq_login_key","authn_enabled","captcha_IsUseReCaptcha","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","groups","setGroups","httpAlert","setHttpAlert","checked","handleInputChange","FormControlLabel","control","Switch","ID","toString","Name","Alert","severity","endsWith","buttonMargin","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","mail_keepalive","over_used_template","mail_activation_template","mail_reset_pwd_template","TextField","autoFocus","to","inputProps","min","step","multiline","rowsMax","unitTransform","Math","round","SizeInput","max","suffix","unit","setUnit","first","transform","style","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","onedrive_chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","AddPack","time","price","score","pack","setPack","packCopy","parseInt","Date","valueOf","AddGroup","group_id","des","highlight","group","setGroup","length","scroll","groupCopy","split","AddRedeem","products","onSuccess","num","input","setInput","i","data-type","tabForm","tableContainer","navigator","product","VAS","tab","setTab","alipay_enabled","payjs_enabled","payjs_id","appid","appkey","shopid","payjs_secret","score_enabled","share_score_rate","score_price","ban_time","group_sell_data","pack_data","packs","setPacks","addPack","setAddPack","addGroup","setAddGroup","addRedeem","setAddRedeem","redeems","setRedeems","redeemsRes","setRedeemsRes","redeemsResOpen","setRedeemsResOpen","page","setPage","pageSize","total","setTotal","JSON","parse","loadRedeemList","page_size","order_by","handleCheckChange","updateOption","updatePackOption","Tabs","indicatorColor","textColor","scrollButtons","Tab","Link","href","Table","TableHead","TableRow","TableCell","TableBody","row","scope","ceil","sizeToString","newPacks","filter","newPackData","stringify","deletePack","Delete","newGroups","deleteGroup","ProductID","Num","Code","Used","Box","delete","Pagination","count","newGroup","newGroupData","codes","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","themeString","helperText","onBlur","themeCopy","resStr","deleteTheme","newTheme","Aria2","aria2_rpcurl","aria2_token","aria2_temp_path","aria2_options","aria2_interval","aria2_call_timeout","server","token","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","cardContainer","cover","card","flex","bg","policies","img","AddPolicy","dividers","sm","Card","CardActionArea","CardMedia","image","CardContent","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","setPageSize","addDialog","setAddDialog","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","conditions","Boolean","TableContainer","column","hover","policyTypeMap","Type","toLocaleString","Tooltip","currentTarget","Edit","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","MagicVar","isFile","isSlave","DomainInput","domain","setDomain","protocol","setProtocol","setError","replace","startAdornment","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","steps","optional","LocalGuide","props","activeStep","setActiveStep","Set","skipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","BaseURL","IsPrivate","MaxSize","OptionsSerialized","file_type","setPolicy","Stepper","index","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","RadioGroup","Radio","Collapse","in","policyCopy","fontFamily","overflow","RemoteGuide","Server","SecretKey","randomStr","minlength","secret","AccessKey","mimetype","handleOptionChange","BucketName","getNumber","viewButtonLabel","textTransform","OSSGuide","setSkipped","policyID","setPolicyID","submitPolicy","pattern","prevActiveStep","prevSkipped","newSkipped","values","add","UpyunGuide","COSGuide","region","setRegion","OneDriveGuide","od_redirect","httpsAlert","setHttpsAlert","URL","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","join","PolicyList","pid","MaxStorage","getStyles","personName","indexOf","typography","fontWeightRegular","fontWeightMedium","GroupForm","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","compress_size","decompress_size","handleOptionCheckChange","multiple","renderValue","selected","chips","chip","share_free","one_time_download","aria2","archive_download","archive_task","EditGroupPreload","UserFilter","setSearch","status","keywords","setKeywords","nick","email","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","setSelected","searches","block","Status","isSelected","alignSelf","Badge","invisible","FilterList","Checkbox","indeterminate","newSelecteds","n","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","success","Block","UserForm","Password","GroupID","Score","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","File","setFiles","Size","UserID","CreatedAt","toLocaleDateString","toLocaleTimeString","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Order","orders","setOrders","OrderNo","Method","Price","toFixed","Download","downloads","setDownloads","Source","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"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","file":"static/js/6.68cc5fe1.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport UserAvatar from \"../Navbar/UserAvatar\";\nimport {\n    Contacts,\n    Home,\n    Language,\n    Settings,\n    Mail,\n    SettingsEthernet,\n    AttachMoney,\n    Palette,\n    CloudDownload, Image, Storage, Group, Person, InsertDriveFile, Share, ShoppingCart, Assignment, ListAlt\n} from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle } from \"../../actions\";\nimport pathHelper from \"../../untils/page\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": { margin: 0 }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        width: \"100%\"\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        })\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginRight: 36\n    },\n    hide: {\n        display: \"none\"\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1\n        }\n    },\n    title: {\n        flexGrow: 1\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n    sub: {\n        paddingLeft: 36,\n        color: theme.palette.text.secondary\n    },\n    subMenu: {\n        backgroundColor: theme.palette.background.default,\n        paddingTop:0,\n        paddingBottom:0,\n    },\n    active: {\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\n        color: theme.palette.primary.main,\n        \"&:hover\":{\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\n        },\n    },\n    activeText:{\n        fontWeight: 500,\n    },\n    activeIcon:{\n        color: theme.palette.primary.main,\n    }\n}));\n\nconst items = [\n    {\n        title: \"面板首页\",\n        icon: <Home />,\n        path: \"home\"\n    },\n    {\n        title: \"参数设置\",\n        icon: <Settings />,\n        sub: [\n            {\n                title: \"站点信息\",\n                path: \"basic\",\n                icon: <Language />\n            },\n            {\n                title: \"注册与登录\",\n                path: \"access\",\n                icon: <Contacts />\n            },\n            {\n                title: \"邮件\",\n                path: \"mail\",\n                icon: <Mail />\n            },\n            {\n                title: \"上传与下载\",\n                path: \"upload\",\n                icon: <SettingsEthernet />\n            },\n            {\n                title: \"增值服务\",\n                path: \"vas\",\n                icon: <AttachMoney />\n            },\n            {\n                title: \"外观\",\n                path: \"theme\",\n                icon: <Palette />\n            },\n            {\n                title: \"离线下载\",\n                path: \"aria2\",\n                icon: <CloudDownload />\n            },\n            {\n                title: \"图像处理\",\n                path: \"image\",\n                icon: <Image />\n            },\n        ]\n    },\n    {\n        title: \"存储策略\",\n        icon: <Storage />,\n        path: \"policy\"\n    },\n    {\n        title: \"用户组\",\n        icon: <Group />,\n        path: \"group\"\n    },\n    {\n        title: \"用户\",\n        icon: <Person />,\n        path: \"user\"\n    },\n    {\n        title: \"文件\",\n        icon: <InsertDriveFile />,\n        path: \"file\"\n    },\n    {\n        title: \"分享\",\n        icon: <Share />,\n        path: \"share\"\n    },\n    {\n        title: \"订单\",\n        icon: <ShoppingCart />,\n        path: \"order\"\n    },\n    {\n        title: \"持久任务\",\n        icon: <Assignment />,\n        sub: [\n            {\n                title: \"离线下载\",\n                path: \"download\",\n                icon: <CloudDownload />\n            },\n            {\n                title: \"常规任务\",\n                path: \"task\",\n                icon: <ListAlt />\n            },\n            ],\n    },\n];\n\nexport default function Dashboard({ content }) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(!pathHelper.isMobile());\n    const [menuOpen, setMenuOpen] = useState(null);\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n\n    useEffect(() => {\n        SetSubTitle(\"仪表盘\");\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n    }, []);\n\n    let { path } = useRouteMatch();\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\n                        Cloudreve 仪表盘\n                    </Typography>\n                    <UserAvatar />\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open\n                    })\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === \"rtl\" ? (\n                            <ChevronRightIcon />\n                        ) : (\n                            <ChevronLeftIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List className={classes.noPadding}>\n                    {items.map(item => {\n                        if (item.path !== undefined) {\n                            return (\n                                <ListItem\n                                    onClick={() =>\n                                        history.push(\"/admin/\" + item.path)\n                                    }\n                                    button\n                                    className={clsx({\n                                        [classes.active]:\n                                        location.pathname.startsWith(\"/admin/\" + item.path)\n                                    })}\n                                    key={item.title}\n                                >\n                                    <ListItemIcon  className={clsx({\n                                        [classes.activeIcon]:\n                                            location.pathname.startsWith(\"/admin/\" + item.path)\n                                    })}>{item.icon}</ListItemIcon>\n                                    <ListItemText className={clsx({\n                                        [classes.activeText]:\n                                            location.pathname.startsWith(\"/admin/\" + item.path)\n                                    })} primary={item.title} />\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            <ExpansionPanel\n                                square\n                                expanded={menuOpen === item.title}\n                                onChange={(event, isExpanded) => {\n                                    setMenuOpen(isExpanded ? item.title : null);\n                                }}\n                            >\n                                <ExpansionPanelSummary\n                                    aria-controls=\"panel1d-content\"\n                                    id=\"panel1d-header\"\n                                >\n                                    <ListItem button key={item.title}>\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\n                                        <ListItemText primary={item.title} />\n                                    </ListItem>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <List className={classes.subMenu}>\n                                        {item.sub.map(sub => (\n                                            <ListItem\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/\" + sub.path\n                                                    )\n                                                }\n                                                className={clsx({\n                                                    [classes.sub]: open,\n                                                    [classes.active]:\n                                                        location.pathname.startsWith(\"/admin/\" + sub.path)\n                                                })}\n                                                button\n                                                key={sub.title}\n                                            >\n                                                <ListItemIcon className={clsx({\n                                                    [classes.activeIcon]:\n                                                        location.pathname.startsWith(\"/admin/\" + sub.path)\n                                                })}>\n                                                    {sub.icon}\n                                                </ListItemIcon>\n                                                <ListItemText\n                                                    primary={sub.title}\n                                                />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        );\n                    })}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {content(path)}\n            </main>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend\n} from \"recharts\";\nimport ResponsiveContainer from \"recharts/lib/component/ResponsiveContainer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport pathHelper from \"../../untils/page\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {\n    FileCopy,\n    Forum,\n    GitHub,\n    Home,\n    Launch,\n    Lock,\n    People,\n    Public,\n    Telegram\n} from \"@material-ui/icons\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\nimport axios from \"axios\";\nimport TimeAgo from \"timeago-react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        padding: theme.spacing(3),\n        height: \"100%\"\n    },\n    logo: {\n        width: 70\n    },\n    logoContainer: {\n        padding: theme.spacing(3),\n        display: \"flex\"\n    },\n    title: {\n        marginLeft: 16\n    },\n    cloudreve: {\n        fontSize: 25,\n        color: theme.palette.text.secondary\n    },\n    version: {\n        color: theme.palette.text.hint\n    },\n    links: {\n        padding: theme.spacing(3)\n    },\n    iconRight: {\n        minWidth: 0\n    },\n    userIcon: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    fileIcon: {\n        backgroundColor: yellow[100],\n        color: yellow[800]\n    },\n    publicIcon: {\n        backgroundColor: green[100],\n        color: green[800]\n    },\n    secretIcon: {\n        backgroundColor: red[100],\n        color: red[800]\n    }\n}));\n\nexport default function Index() {\n    const classes = useStyles();\n    const [lineData, setLineData] = useState([]);\n    const [news, setNews] = useState([]);\n    const [newsUsers, setNewsUsers] = useState({});\n    const [open, setOpen] = React.useState(false);\n    const [siteURL, setSiteURL] = React.useState(\"\");\n    const [statistics, setStatistics] = useState({\n        fileTotal: 0,\n        userTotal: 0,\n        publicShareTotal: 0,\n        secretShareTotal: 0\n    });\n    const [version, setVersion] = useState({\n        backend: \"-\"\n    });\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const ResetSiteURL = ()=>{\n        setOpen(false);\n        API.patch(\"/admin/setting\",{\n            options:[{\n                key:\"siteURL\",\n                value:window.location.origin,\n            }],\n        })\n            .then(response => {\n                setSiteURL(window.location.origin);\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    useEffect(() => {\n        API.get(\"/admin/summary\")\n            .then(response => {\n                let data = [];\n                response.data.date.forEach((v, k) => {\n                    data.push({\n                        name: v,\n                        file: response.data.files[k],\n                        user: response.data.users[k],\n                        share: response.data.shares[k]\n                    });\n                });\n                setLineData(data);\n                setStatistics({\n                    fileTotal: response.data.fileTotal,\n                    userTotal: response.data.userTotal,\n                    publicShareTotal: response.data.publicShareTotal,\n                    secretShareTotal: response.data.secretShareTotal\n                });\n                setVersion(response.data.version);\n                setSiteURL(response.data.siteURL);\n                if (response.data.siteURL === \"\" || response.data.siteURL !== window.location.origin){\n                    setOpen(true);\n                }\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        axios\n            .get(\"/api/v3/admin/news\")\n            .then(response => {\n                setNews(response.data.data);\n                let res = {};\n                response.data.included.forEach(v => {\n                    if (v.type === \"users\") {\n                        res[v.id] = v.attributes;\n                    }\n                });\n                setNewsUsers(res);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    return (\n        <Grid container spacing={3}>\n            <Dialog\n                open={open}\n                onClose={()=>setOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"确定站点URL设置\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <Typography>\n                            {siteURL === \"\" && \"您尚未设定站点URL，是否要将其设定为当前的 \"+ window.location.origin + \" ?\"}\n                            {siteURL !== \"\" && \"您设置的站点URL与当前实际不一致，是否要将其设定为当前的 \"+ window.location.origin + \" ?\"}\n                        </Typography>\n                        <Typography>\n                            此设置非常重要，请确保其与您站点的实际地址一致。你可以在 参数设置 - 站点信息 中更改此设置。\n                        </Typography>\n                        </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=>setOpen(false)} color=\"default\">\n                        忽略\n                    </Button>\n                    <Button onClick={()=>ResetSiteURL()} color=\"primary\">\n                        更改\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        趋势\n                    </Typography>\n                    <ResponsiveContainer\n                        width=\"100%\"\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\n                    >\n                        <LineChart width={1200} height={300} data={lineData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"name\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                name={\"文件\"}\n                                type=\"monotone\"\n                                dataKey=\"file\"\n                                stroke=\"#3f51b5\"\n                            />\n                            <Line\n                                name={\"用户\"}\n                                type=\"monotone\"\n                                dataKey=\"user\"\n                                stroke=\"#82ca9d\"\n                            />\n                            <Line\n                                name={\"分享\"}\n                                type=\"monotone\"\n                                dataKey=\"share\"\n                                stroke=\"#e91e63\"\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        总计\n                    </Typography>\n                    <Divider />\n                    <List className={classes.root}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.userIcon}>\n                                    <People />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.userTotal}\n                                secondary=\"注册用户\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.fileIcon}>\n                                    <FileCopy />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.fileTotal}\n                                secondary=\"文件总数\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.publicIcon}>\n                                    <Public />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.publicShareTotal}\n                                secondary=\"公开分享总数\"\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar className={classes.secretIcon}>\n                                    <Lock />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={statistics.secretShareTotal}\n                                secondary=\"私密分享总数\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n                <Paper>\n                    <div className={classes.logoContainer}>\n                        <img\n                            className={classes.logo}\n                            src={\"/static/img/cloudreve.svg\"}\n                        />\n                        <div className={classes.title}>\n                            <Typography className={classes.cloudreve}>\n                                Cloudreve\n                            </Typography>\n                            <Typography className={classes.version}>\n                                {version.backend} {version.is_pro === \"true\" && <Chip size=\"small\" label=\"Pro\" />}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div>\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Home />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主页\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://github.com/cloudreve/cloudreve\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <GitHub />\n                                </ListItemIcon>\n                                <ListItemText primary=\"GitHub\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\"https://forum.cloudreve.org\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Forum />\n                                </ListItemIcon>\n                                <ListItemText primary=\"讨论社区\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    window.open(\n                                        \"https://t.me/cloudreve_official\"\n                                    )\n                                }\n                            >\n                                <ListItemIcon>\n                                    <Telegram />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Telegram 群组\" />\n                                <ListItemIcon className={classes.iconRight}>\n                                    <Launch />\n                                </ListItemIcon>\n                            </ListItem>\n                        </List>\n                    </div>\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={8} lg={9}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {news && news.map((v, k) => (\n                            <>\n                                <ListItem button alignItems=\"flex-start\"\n                                          onClick={()=>window.open(\"https://forum.cloudreve.org/d/\" + v.id)}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar\n                                            alt=\"Travis Howard\"\n                                            src={\n                                                newsUsers[\n                                                    v.relationships.startUser\n                                                        .data.id\n                                                ] &&\n                                                newsUsers[\n                                                    v.relationships.startUser\n                                                        .data.id\n                                                ].avatarUrl\n                                            }\n                                        />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={v.attributes.title}\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textPrimary\"\n                                                >\n                                                    {newsUsers[\n                                                        v.relationships\n                                                            .startUser.data.id\n                                                    ] &&\n                                                        newsUsers[\n                                                            v.relationships\n                                                                .startUser.data\n                                                                .id\n                                                        ].username}{\" \"}\n                                                </Typography>\n                                                发表于{\" \"}\n                                                <TimeAgo\n                                                    datetime={v.attributes.startTime}\n                                                    locale='zh_CN'\n                                                />\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                                <Divider />\n                            </>\n                        ))}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function SiteInformation() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        siteURL: \"\",\n        siteName: \"\",\n        siteTitle: \"\",\n        pwa_small_icon: \"\",\n        pwa_medium_icon: \"\",\n        pwa_large_icon: \"\",\n        pwa_display: \"\",\n        pwa_theme_color: \"\",\n        pwa_background_color: \"\"\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        let option = [];\n        Object.keys(options).forEach(k=>{\n            option.push({\n                key:k,\n                value:options[k],\n            });\n        })\n        API.patch(\"/admin/setting\",{\n            options:option,\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        基本信息\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteName}\n                                    onChange={handleChange(\"siteName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的主标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    副标题\n                                </InputLabel>\n                                <Input\n                                    value={options.siteTitle}\n                                    onChange={handleChange(\"siteTitle\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    站点的副标题\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    站点URL\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.siteURL}\n                                    onChange={handleChange(\"siteURL\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    非常重要，请确保与实际情况一致。使用云存储策略、支付平台时，请填入可以被外网访问的地址。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        渐进式应用 (PWA)\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_small_icon}\n                                    onChange={handleChange(\"pwa_small_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    扩展名为 ico 的小图标地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_medium_icon}\n                                    onChange={handleChange(\"pwa_medium_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    192x192 的中等图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大图标\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_large_icon}\n                                    onChange={handleChange(\"pwa_large_icon\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    512x512 的大图标地址，png 格式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    展示模式\n                                </InputLabel>\n                                <Select\n                                    value={options.pwa_display}\n                                    onChange={handleChange(\"pwa_display\")}\n                                >\n\n                                    <MenuItem value={\"fullscreen\"}>\n                                        fullscreen\n                                    </MenuItem>\n                                    <MenuItem value={\"standalone\"}>\n                                        standalone\n                                    </MenuItem>\n                                    <MenuItem value={\"minimal-ui\"}>\n                                        minimal-ui\n                                    </MenuItem>\n                                    <MenuItem value={\"browser\"}>\n                                        browser\n                                    </MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    PWA 应用添加后的展示模式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    主题色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_theme_color}\n                                    onChange={handleChange(\"pwa_theme_color\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值，影响 PWA\n                                    启动画面上状态栏、内容页中状态栏、地址栏的颜色\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    背景色\n                                </InputLabel>\n                                <Input\n                                    value={options.pwa_background_color}\n                                    onChange={handleChange(\n                                        \"pwa_background_color\"\n                                    )}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    CSS 色值\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nexport default function AlertDialog({title, msg, open, onClose }) {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {title}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    <Typography>\n                        {msg}\n                    </Typography>\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    知道了\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","    import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function Access() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        register_enabled: \"1\",\n        default_group: \"1\",\n        email_active: \"0\",\n        login_captcha: \"0\",\n        reg_captcha: \"0\",\n        forget_captcha: \"0\",\n        qq_login: \"0\",\n        qq_direct_login: \"0\",\n        qq_login_id: \"\",\n        qq_login_key: \"\",\n        authn_enabled: \"0\",\n        captcha_IsUseReCaptcha: \"0\",\n        captcha_ReCaptchaKey: \"defaultKey\",\n        captcha_ReCaptchaSecret: \"defaultSecret\",\n    });\n    const [siteURL, setSiteURL] = useState(\"\");\n    const [groups, setGroups] = useState([]);\n    const [httpAlert, setHttpAlert] = useState(false);\n\n    const handleChange = name => event => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const handleInputChange = name => event => {\n        let value = event.target.value;\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: [...Object.keys(options), \"siteURL\"]\n        })\n            .then(response => {\n                setSiteURL(response.data.siteURL);\n                delete response.data.siteURL;\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        let option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                title={\"提示\"}\n                msg={\n                    \"Web Authn 需要您的站点启用 HTTPS，并确认 参数设置 - 站点信息 - 站点URL 也使用了 HTTPS 后才能开启。\"\n                }\n                onClose={() => setHttpAlert(false)}\n                open={httpAlert}\n            />\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        注册与登录\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.register_enabled === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"register_enabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许新用户注册\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，无法再通过前台注册新的用户\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.email_active === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"email_active\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"邮件激活\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，新用户注册需要点击邮件中的激活链接才能完成。请确认邮件发送设置是否正确，否则激活邮件无法送达\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reg_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"reg_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"注册验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用注册表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.login_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"login_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"登录验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用登录表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.forget_captcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"forget_captcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"找回密码验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否启用找回密码表单验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.captcha_IsUseReCaptcha === \"1\"\n                                            }\n                                            onChange={handleChange(\n                                                \"captcha_IsUseReCaptcha\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"使用ReCaptcha验证码\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否使用ReCaptcha验证码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {options.captcha_IsUseReCaptcha === \"1\" && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Site KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.captcha_ReCaptchaKey}\n                                            onChange={handleInputChange(\n                                                \"captcha_ReCaptchaKey\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            应用管理页面获取到的的 网站密钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Secret\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.captcha_ReCaptchaSecret}\n                                            onChange={handleInputChange(\n                                                \"captcha_ReCaptchaSecret\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            应用管理页面获取到的的 秘钥\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </>\n                        )}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.authn_enabled === \"1\"\n                                            }\n                                            onChange={e => {\n                                                if (\n                                                    !siteURL.startsWith(\n                                                        \"https://\"\n                                                    )\n                                                ) {\n                                                    setHttpAlert(true);\n                                                    return;\n                                                }\n                                                handleChange(\"authn_enabled\")(\n                                                    e\n                                                );\n                                            }}\n                                        />\n                                    }\n                                    label=\"Web Authn\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户使用绑定的外部验证器登录，站点必须启动\n                                    HTTPS 才能使用。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认用户组\n                                </InputLabel>\n                                <Select\n                                    value={options.default_group}\n                                    onChange={handleInputChange(\n                                        \"default_group\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map(v => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户注册后的初始用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        QQ互联\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\">创建应用时，回调地址请填写：{siteURL.endsWith(\"/\") ? (siteURL + \"#/login/qq\"):(siteURL + \"/#/login/qq\")}</Alert>\n                        </div>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={options.qq_login === \"1\"}\n                                            onChange={handleChange(\"qq_login\")}\n                                        />\n                                    }\n                                    label=\"开启QQ互联\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许绑定QQ、使用QQ登录本站\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {options.qq_login === \"1\" && (\n                            <>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                    checked={\n                                                        options.qq_direct_login ===\n                                                        \"1\"\n                                                    }\n                                                    onChange={handleChange(\n                                                        \"qq_direct_login\"\n                                                    )}\n                                                />\n                                            }\n                                            label=\"未绑定时可直接登录\"\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            开启后，如果用户使用了QQ登录，但是没有已绑定的注册用户，系统会为其创建用户并登录。这种方式创建的用户日后只能使用QQ登录。\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APP ID\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.qq_login_id}\n                                            onChange={handleInputChange(\n                                                \"qq_login_id\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            应用管理页面获取到的的 APP ID\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            APP KEY\n                                        </InputLabel>\n                                        <Input\n                                            required\n                                            value={options.qq_login_key}\n                                            onChange={handleInputChange(\n                                                \"qq_login_key\"\n                                            )}\n                                        />\n                                        <FormHelperText id=\"component-helper-text\">\n                                            应用管理页面获取到的的 APP KEY\n                                        </FormHelperText>\n                                    </FormControl>\n                                </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    buttonMargin: {\n        marginLeft: 8\n    }\n}));\n\nexport default function Mail() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [test, setTest] = useState(false);\n    const [tesInput, setTestInput] = useState(\"\");\n    const [options, setOptions] = useState({\n        fromName: \"\",\n        fromAdress: \"\",\n        smtpHost: \"\",\n        smtpPort: \"\",\n        replyTo: \"\",\n        smtpUser: \"\",\n        smtpPass: \"\",\n        mail_keepalive: \"30\",\n        over_used_template: \"\",\n        mail_activation_template: \"\",\n        mail_reset_pwd_template: \"\"\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const sendTestMail = () => {\n        setLoading(true);\n        API.post(\"/admin/mailTest\", {\n            to: tesInput\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"测试邮件已发送\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const reload = () => {\n        API.get(\"/admin/reload/email\")\n            .then(response => {})\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {});\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        let option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={test}\n                onClose={() => setTest(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">发件测试</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography>\n                            发送测试邮件前，请先保存已更改的邮件设置；\n                        </Typography>\n                        <Typography>\n                            邮件发送结果不会立即反馈，如果您长时间未收到测试邮件，请检查\n                            Cloudreve 在终端输出的错误日志。\n                        </Typography>\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"收件人地址\"\n                        value={tesInput}\n                        onChange={e => setTestInput(e.target.value)}\n                        type=\"email\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setTest(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => sendTestMail()}\n                        disabled={loading}\n                        color=\"primary\"\n                    >\n                        发送\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        发信\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人名\n                                </InputLabel>\n                                <Input\n                                    value={options.fromName}\n                                    onChange={handleChange(\"fromName\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    邮件中展示的发件人姓名\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    发件人邮箱\n                                </InputLabel>\n                                <Input\n                                    type={\"email\"}\n                                    required\n                                    value={options.fromAdress}\n                                    onChange={handleChange(\"fromAdress\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件邮箱的地址\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 服务器\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpHost}\n                                    onChange={handleChange(\"smtpHost\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址，不含端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 端口\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1 ,step:1}}\n                                    type={\"number\"}\n                                    value={options.smtpPort}\n                                    onChange={handleChange(\"smtpPort\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发件服务器地址端口号\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 用户名\n                                </InputLabel>\n                                <Input\n                                    value={options.smtpUser}\n                                    onChange={handleChange(\"smtpUser\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱用户名，一般与邮箱地址相同\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={options.smtpPass}\n                                    onChange={handleChange(\"smtpPass\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    发信邮箱密码\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    回信邮箱\n                                </InputLabel>\n                                <Input\n                                    value={options.replyTo}\n                                    onChange={handleChange(\"replyTo\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户回复系统发送的邮件时，用于接收回信的邮箱\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    SMTP 连接有效期 (秒)\n                                </InputLabel>\n                                <Input\n                                    inputProps={{ min: 1 ,step:1}}\n                                    type={\"number\"}\n                                    value={options.mail_keepalive}\n                                    onChange={handleChange(\"mail_keepalive\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    有效期内建立的 SMTP\n                                    连接会被新邮件发送请求复用\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        邮件模板\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    新用户激活\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_activation_template}\n                                    onChange={handleChange(\n                                        \"mail_activation_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    新用户注册后激活邮件的模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    超额提醒\n                                </InputLabel>\n                                <Input\n                                    value={options.over_used_template}\n                                    onChange={handleChange(\n                                        \"over_used_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户因增值服务过期，容量超出限制后发送的提醒邮件模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    重置密码\n                                </InputLabel>\n                                <Input\n                                    value={options.mail_reset_pwd_template}\n                                    onChange={handleChange(\n                                        \"mail_reset_pwd_template\"\n                                    )}\n                                    multiline\n                                    rowsMax=\"10\"\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    密码重置邮件模板\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    {\"   \"}\n                    <Button\n                        className={classes.buttonMargin}\n                        variant={\"outlined\"}\n                        color={\"primary\"}\n                        onClick={() => setTest(true)}\n                    >\n                        发送测试邮件\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\n\nconst unitTransform = (v)=>{\n    if(v<1024){\n        return [Math.round(v),1]\n    }\n    if(v<1024*1024){\n        return [Math.round(v/1024),1024]\n    }\n    if(v<1024*1024*1024){\n        return [Math.round(v/(1024*1024)),1024*1024]\n    }\n    if(v<1024*1024*1024*1024){\n        return [Math.round(v/(1024*1024*1024)),1024*1024*1024]\n    }\n    return [Math.round(v/(1024*1024*1024*1024)),1024*1024*1024*1024]\n}\n\nexport default function SizeInput({onChange,min,value,required,label,max,suffix}){\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    const [unit,setUnit] = useState(1);\n    let first = true;\n\n    const transform = useCallback(()=>{\n        let res = unitTransform(value);\n        if(first && value !== 0){\n            setUnit(res[1]);\n            first = false;\n        }\n        return res;\n    },[value]);\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">\n                {label}\n            </InputLabel>\n            <Input\n                style={{width:200,}}\n                value={transform()[0]}\n                type={\"number\"}\n                inputProps={{min:min,step:1}}\n                onChange={e=>{\n                    if (e.target.value * unit < max){\n                        onChange({\n                            target:{value:(e.target.value * unit).toString()}\n                        })\n                    }else{\n                        ToggleSnackbar(\"top\", \"right\", \"超出最大尺寸限制\", \"warning\");\n                    }\n\n                }}\n                required = {required}\n                endAdornment={\n                    <InputAdornment position=\"end\">\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={unit}\n                            onChange={(e)=>{\n                                if (transform()[0] * e.target.value < max){\n                                    onChange({\n                                        target:{value:(transform()[0] * e.target.value).toString()}\n                                    })\n                                    setUnit(e.target.value);\n                                }else{\n                                    ToggleSnackbar(\"top\", \"right\", \"超出最大尺寸限制\", \"warning\");\n                                }\n\n                            }}\n                        >\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024}>KB{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024*1024}>MB{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024*1024*1024}>GB{suffix && suffix}</MenuItem>\n                            <MenuItem value={1024*1024*1024*1024}>TB{suffix && suffix}</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n        </FormControl>\n    )\n}","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SizeInput from \"../Common/SizeInput\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function UploadDownload() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        max_worker_num: \"1\",\n        max_parallel_transfer:\"1\",\n        temp_path:\"\",\n        maxEditSize:\"0\",\n        onedrive_chunk_retries:\"0\",\n        archive_timeout:\"0\",\n        download_timeout:\"0\",\n        preview_timeout:\"0\",\n        doc_preview_timeout:\"0\",\n        upload_credential_timeout:\"0\",\n        upload_session_timeout:\"0\",\n        slave_api_timeout:\"0\",\n        onedrive_monitor_timeout:\"0\",\n        share_download_session_timeout:\"0\",\n        onedrive_callback_check:\"0\",\n        reset_after_upload_failed:\"0\",\n        onedrive_source_timeout:\"0\",\n\n    });\n\n    const handleCheckChange = name => event => {\n        let value= event.target.checked ? \"1\" : \"0\";\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        let option = [];\n        Object.keys(options).forEach(k=>{\n            option.push({\n                key:k,\n                value:options[k],\n            });\n        })\n        API.patch(\"/admin/setting\",{\n            options:option,\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        存储与传输\n                    </Typography>\n                    <div className={classes.formContainer}>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Worker 数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.max_worker_num}\n                                    onChange={handleChange(\"max_worker_num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列最多并行执行的任务数，保存后需要重启 Cloudreve 生效\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中转并行传输\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.max_parallel_transfer}\n                                    onChange={handleChange(\"max_parallel_transfer\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    任务队列中转任务传输时，最大并行协程数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时目录\n                                </InputLabel>\n                                <Input\n                                    value={options.temp_path}\n                                    onChange={handleChange(\"temp_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用于存放打包下载、解压缩、压缩等任务产生的临时文件的目录路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <SizeInput\n                                    value={options.maxEditSize}\n                                    onChange={handleChange(\"maxEditSize\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"文本文件在线编辑大小\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    文本文件可在线编辑的最大大小，超出此大小的文件无法在线编辑\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 分片错误重试\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:0,\n                                        step:1,\n                                    }}\n                                    value={options.onedrive_chunk_retries}\n                                    onChange={handleChange(\"onedrive_chunk_retries\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive 存储策略分片上传失败后重试的最大次数，只适用于服务端上传或中转\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                options.reset_after_upload_failed === \"1\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"reset_after_upload_failed\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"上传校验失败时强制重置连接\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，如果本次策略、头像等数据上传校验失败，服务器会强制重置连接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        有效期 (秒)\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    打包下载\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.archive_timeout}\n                                    onChange={handleChange(\"archive_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    下载会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.download_timeout}\n                                    onChange={handleChange(\"download_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    预览链接\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.preview_timeout}\n                                    onChange={handleChange(\"preview_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Office 文档预览连接\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.doc_preview_timeout}\n                                    onChange={handleChange(\"doc_preview_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    上传凭证\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.upload_credential_timeout}\n                                    onChange={handleChange(\"upload_credential_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    上传会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.upload_session_timeout}\n                                    onChange={handleChange(\"upload_session_timeout\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    超出后不再处理此上传的回调请求\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    从机API请求\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.slave_api_timeout}\n                                    onChange={handleChange(\"slave_api_timeout\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    分享下载会话\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.share_download_session_timeout}\n                                    onChange={handleChange(\"share_download_session_timeout\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    设定时间内重复下载分享文件，不会被记入总下载次数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 客户端上传监控间隔\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.onedrive_monitor_timeout}\n                                    onChange={handleChange(\"onedrive_monitor_timeout\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    每间隔所设定时间，Cloudreve 会向 OneDrive 请求检查客户端上传情况已确保客户端上传可控\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 回调等待\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.onedrive_callback_check}\n                                    onChange={handleChange(\"onedrive_callback_check\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive 客户端上传完成后，等待回调的最大时间，如果超出会被认为上传失败\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl >\n                                <InputLabel htmlFor=\"component-helper\">\n                                    OneDrive 下载请求缓存\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        max:3659,\n                                        step:1,\n                                    }}\n                                    value={options.onedrive_source_timeout}\n                                    onChange={handleChange(\"onedrive_source_timeout\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    OneDrive 获取文件下载 URL 后可将结果缓存，减轻热门文件下载API请求频率\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SizeInput from \"../Common/SizeInput\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\n    formContainer: {\n        margin:\"8px 0 8px 0\",\n    }\n}));\n\nexport default function AddPack({ open, onClose,onSubmit }) {\n    const classes = useStyles();\n    const [pack, setPack] = useState({\n        name: \"\",\n        size: \"1073741824\",\n        time: \"\",\n        price: \"\",\n        score: \"\"\n    });\n\n    const handleChange = name => event => {\n        setPack({\n            ...pack,\n            [name]: event.target.value\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        let packCopy = {...pack};\n        packCopy.size = parseInt(packCopy.size);\n        packCopy.time = parseInt(packCopy.time) * 86400;\n        packCopy.price = parseInt(packCopy.price* 100) ;\n        packCopy.score = parseInt(packCopy.score);\n        packCopy.id = (new Date()).valueOf();\n        onSubmit(packCopy);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">添加容量包</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    名称\n                                </InputLabel>\n                                <Input\n                                    value={pack.name}\n                                    onChange={handleChange(\"name\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    商品展示名称\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={pack.size}\n                                    onChange={handleChange(\"size\")}\n                                    min={1}\n                                    label={\"大小\"}\n                                    max={9223372036854775807}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    容量包的大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    有效期 (天)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1\n                                    }}\n                                    value={pack.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    每个容量包的有效期\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (元)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:0.01,\n                                        step:0.01\n                                    }}\n                                    value={pack.price}\n                                    onChange={handleChange(\"price\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    容量包的单价\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (积分)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:0,\n                                        step:1\n                                    }}\n                                    value={pack.score}\n                                    onChange={handleChange(\"score\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    使用积分购买时的价格，填写为 0 表示不能使用积分购买\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose} color=\"default\">\n                        取消\n                    </Button>\n                    <Button type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SizeInput from \"../Common/SizeInput\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst useStyles = makeStyles(theme => ({\n    formContainer: {\n        margin: \"8px 0 8px 0\"\n    }\n}));\n\nexport default function AddGroup({ open, onClose, onSubmit }) {\n    const classes = useStyles();\n    const [groups, setGroups] = useState([]);\n    const [group, setGroup] = useState({\n        name: \"\",\n        group_id: 2,\n        time: \"\",\n        price: \"\",\n        score: \"\",\n        des: \"\",\n        highlight: false\n    });\n\n    useEffect(() => {\n        if (open && groups.length === 0) {\n            API.get(\"/admin/groups\")\n                .then(response => {\n                    setGroups(response.data);\n                })\n                .catch(error => {});\n        }\n        // eslint-disable-next-line\n    }, [open]);\n\n    const handleChange = name => event => {\n        setGroup({\n            ...group,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        setGroup({\n            ...group,\n            [name]: event.target.checked\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        let groupCopy = {...group};\n        groupCopy.time = parseInt(groupCopy.time) * 86400;\n        groupCopy.price = parseInt(groupCopy.price * 100);\n        groupCopy.score = parseInt(groupCopy.score);\n        groupCopy.id = (new Date()).valueOf();\n        groupCopy.des = groupCopy.des.split(\"\\n\");\n        onSubmit(groupCopy);\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n            scroll={\"paper\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">\n                    添加可购用户组\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    名称\n                                </InputLabel>\n                                <Input\n                                    value={group.name}\n                                    onChange={handleChange(\"name\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    商品展示名称\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={group.group_id}\n                                    onChange={handleChange(\"group_id\")}\n                                    required\n                                >\n                                    {groups.map(v => {\n                                        if (v.ID !== 3) {\n                                            return (\n                                                <MenuItem value={v.ID}>\n                                                    {v.Name}\n                                                </MenuItem>\n                                            );\n                                        }\n                                        return null;\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    购买后升级的用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    有效期 (天)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 1,\n                                        step: 1\n                                    }}\n                                    value={group.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    单位购买时间的有效期\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (元)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0.01,\n                                        step: 0.01\n                                    }}\n                                    value={group.price}\n                                    onChange={handleChange(\"price\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户组的单价\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    单价 (积分)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min: 0,\n                                        step: 1\n                                    }}\n                                    value={group.score}\n                                    onChange={handleChange(\"score\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    使用积分购买时的价格，填写为 0\n                                    表示不能使用积分购买\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    商品描述 (一行一个)\n                                </InputLabel>\n                                <Input\n                                    value={group.des}\n                                    onChange={handleChange(\"des\")}\n                                    multiline\n                                    rowsMax={10}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    购买页面展示的商品描述\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={group.highlight}\n                                            onChange={handleCheckChange(\"highlight\")}\n                                        />\n                                    }\n                                    label=\"突出展示\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，在商品选择页面会被突出展示\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose} color=\"default\">\n                        取消\n                    </Button>\n                    <Button type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, {useCallback, useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SizeInput from \"../Common/SizeInput\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\n\nconst useStyles = makeStyles(theme => ({\n\n    formContainer: {\n        margin:\"8px 0 8px 0\",\n    }\n}));\n\nexport default function AddRedeem({ open, onClose,products ,onSuccess}) {\n    const classes = useStyles();\n    const [input, setInput] = useState({\n        num:1,\n        id:0,\n        time:1,\n    });\n    const [loading,setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({\n            ...input,\n            [name]: event.target.value\n        });\n    };\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        input.num = parseInt(input.num);\n        input.id = parseInt(input.id);\n        input.time = parseInt(input.time);\n        input.type=2;\n        for (let i=0;i<products.length;i++){\n            if (products[i].id === input.id){\n                if(products[i].group_id !== undefined){\n                    input.type = 1\n                }else{\n                    input.type = 0\n                }\n                break;\n            }\n        }\n\n        API.post(\"/admin/redeem\", input)\n            .then(response => {\n                onSuccess(response.data);\n                onClose();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"xs\"}\n        >\n            <form onSubmit={submit}>\n                <DialogTitle id=\"alert-dialog-title\">生成兑换码</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    生成数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step:1,\n                                        min:1,\n                                        max:100,\n                                    }}\n                                    value={input.num}\n                                    onChange={handleChange(\"num\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    激活码批量生成数量\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    对应商品\n                                </InputLabel>\n                                <Select\n                                    value={input.id}\n                                    onChange={e=>{\n                                        handleChange(\"id\")(e)\n                                    }}\n                                >\n                                    {products.map(v=>(\n                                        <MenuItem value={v.id} data-type={\"1\"}>{v.name}</MenuItem>\n                                    ))}\n                                    <MenuItem value={0}>积分</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.formContainer}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    商品数量\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step:1,\n                                        min:1,\n                                    }}\n                                    value={input.time}\n                                    onChange={handleChange(\"time\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    对于积分类商品，此处为积分数量，其他商品为时长倍数\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={loading} onClick={onClose} color=\"default\">\n                        取消\n                    </Button>\n                    <Button disabled={loading} type={\"submit\"} color=\"primary\">\n                        确定\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Link from \"@material-ui/core/Link\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AddPack from \"../Dialogs/AddPack\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport { sizeToString } from \"../../../untils\";\nimport AddGroup from \"../Dialogs/AddGroupk\";\nimport AddRedeem from \"../Dialogs/AddRedeem\";\nimport AlertDialog from \"../Dialogs/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    tabForm: {\n        marginTop: 20\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    tableContainer: {\n        overflowX: \"auto\",\n        marginTop: theme.spacing(2)\n    },\n    navigator:{\n        marginTop:10,\n    }\n}));\n\nlet product = {};\n\nexport default function VAS() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [tab, setTab] = useState(0);\n    const [options, setOptions] = useState({\n        alipay_enabled: \"0\",\n        payjs_enabled: \"0\",\n        payjs_id: \"\",\n        appid: \"\",\n        appkey: \"\",\n        shopid: \"\",\n        payjs_secret: \"\",\n        score_enabled: \"0\",\n        share_score_rate: \"0\",\n        score_price: \"0\",\n        ban_time: \"0\",\n        group_sell_data: \"[]\",\n        pack_data: \"[]\"\n    });\n    const [groups, setGroups] = useState([]);\n    const [packs, setPacks] = useState([]);\n    const [addPack, setAddPack] = useState(false);\n    const [addGroup, setAddGroup] = useState(false);\n    const [addRedeem, setAddRedeem] = useState(false);\n    const [redeems, setRedeems] = useState([]);\n    const [redeemsRes, setRedeemsRes] = useState([]);\n    const [redeemsResOpen, setRedeemsResOpen] = useState(false);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    useEffect(() => {\n        let res = JSON.parse(options.group_sell_data);\n        res.forEach(k => {\n            product[k.id] = k.name;\n        });\n        setGroups(res);\n    }, [options.group_sell_data]);\n\n    useEffect(() => {\n        let res = JSON.parse(options.pack_data);\n        res.forEach(k => {\n            product[k.id] = k.name;\n        });\n        setPacks(res);\n    }, [options.pack_data]);\n\n    useEffect(() => {\n        if (tab === 3) {\n            loadRedeemList()\n        }\n    }, [tab,page,pageSize]);\n\n    const loadRedeemList = ()=>{\n        API.post(\"/admin/redeem/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by:\"id desc\",\n        })\n            .then(response => {\n                setRedeems(response.data.items);\n                setTotal(response.data.total);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    const deleteRedeem = id =>{\n        API.delete(\"/admin/redeem/\"+id)\n            .then(response => {\n                loadRedeemList();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    const redeemGenerated = codes => {\n        setRedeemsRes(codes);\n        setRedeemsResOpen(true);\n        loadRedeemList();\n    }\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        let value = event.target.value;\n        if (event.target.checked !== undefined) {\n            value = event.target.checked ? \"1\" : \"0\";\n        }\n        setOptions({\n            ...options,\n            [name]: value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        updateOption();\n    };\n\n    const updateOption = () => {\n        let option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const handleAddPack = pack => {\n        setAddPack(false);\n        let newPacks = [...packs, pack];\n        setPacks(newPacks);\n        let newPackData = JSON.stringify(newPacks);\n        setOptions({ ...options, pack_data: newPackData });\n        updatePackOption(\"pack_data\", newPackData);\n    };\n\n    const handleAddGroup = group => {\n        setAddGroup(false);\n        let newGroup = [...groups, group];\n        setGroups(newGroup);\n        let newGroupData = JSON.stringify(newGroup);\n        setOptions({ ...options, group_sell_data: newGroupData });\n        updatePackOption(\"group_sell_data\", newGroupData);\n    };\n\n    const updatePackOption = (name, pack) => {\n        let option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: k === name ? pack : options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已保存\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deletePack = id => {\n        let newPacks = [...packs];\n        newPacks = newPacks.filter(v => {\n            return v.id !== id;\n        });\n        setPacks(newPacks);\n        let newPackData = JSON.stringify(newPacks);\n        setOptions({ ...options, pack_data: newPackData });\n        updatePackOption(\"pack_data\", newPackData);\n    };\n\n    const deleteGroup = id => {\n        let newGroups = [...groups];\n        newGroups = newGroups.filter(v => {\n            return v.id !== id;\n        });\n        setGroups(newGroups);\n        let newPackData = JSON.stringify(newGroups);\n        setOptions({ ...options, group_sell_data: newPackData });\n        updatePackOption(\"group_sell_data\", newPackData);\n    };\n\n    return (\n        <div>\n            <Paper square>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(e, v) => setTab(v)}\n                    scrollButtons=\"auto\"\n                >\n                    <Tab label=\"支付/杂项设置\" />\n                    <Tab label=\"容量包\" />\n                    <Tab label=\"可购用户组\" />\n                    <Tab label=\"兑换码\" />\n                </Tabs>\n                <div className={classes.content}>\n                    {tab === 0 && (\n                        <form onSubmit={submit} className={classes.tabForm}>\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    支付宝当面付\n                                </Typography>\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.alipay_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"alipay_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"开启\"\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    {options.alipay_enabled === \"1\" && (\n                                        <>\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        App- ID\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.appid}\n                                                        onChange={handleChange(\n                                                            \"appid\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        当面付应用的 APPID\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        RSA 应用私钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.appkey}\n                                                        onChange={handleChange(\n                                                            \"appkey\"\n                                                        )}\n                                                        multiline\n                                                        rowsMax={10}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        当面付应用的 RSA2\n                                                        (SHA256)\n                                                        私钥，一般是由您自己生成。\n                                                        详情参考\n                                                        <Link\n                                                            target={\"_blank\"}\n                                                            href={\n                                                                \"https://docs.open.alipay.com/291/105971\"\n                                                            }\n                                                        >\n                                                            生成 RSA 密钥\n                                                        </Link>\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        支付宝公钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.shopid}\n                                                        onChange={handleChange(\n                                                            \"shopid\"\n                                                        )}\n                                                        multiline\n                                                        rowsMax={10}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        由支付宝提供，可在\n                                                        应用管理 - 应用信息 -\n                                                        接口加签方式 中获取\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    PAYJS 微信支付\n                                </Typography>\n\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <Alert severity=\"info\">\n                                            <Typography variant=\"body2\">\n                                                此服务由第三方平台{\" \"}\n                                                <Link\n                                                    href={\"https://payjs.cn/\"}\n                                                    target={\"_blank\"}\n                                                >\n                                                    PAYJS\n                                                </Link>{\" \"}\n                                                提供， 产生的任何纠纷与\n                                                Cloudreve 开发者无关。\n                                            </Typography>\n                                        </Alert>\n                                    </div>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.payjs_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"payjs_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"开启\"\n                                            />\n                                        </FormControl>\n                                    </div>\n\n                                    {options.payjs_enabled === \"1\" && (\n                                        <>\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        商户号\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={options.payjs_id}\n                                                        onChange={handleChange(\n                                                            \"payjs_id\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        可在 PAYJS\n                                                        管理面板首页看到\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n\n                                            <div className={classes.form}>\n                                                <FormControl fullWidth>\n                                                    <InputLabel htmlFor=\"component-helper\">\n                                                        通信密钥\n                                                    </InputLabel>\n                                                    <Input\n                                                        value={\n                                                            options.payjs_secret\n                                                        }\n                                                        onChange={handleChange(\n                                                            \"payjs_secret\"\n                                                        )}\n                                                        required\n                                                    />\n                                                    <FormHelperText id=\"component-helper-text\">\n                                                        可在 PAYJS\n                                                        管理面板首页看到\n                                                    </FormHelperText>\n                                                </FormControl>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    杂项设置\n                                </Typography>\n                                <div className={classes.formContainer}>\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <InputLabel htmlFor=\"component-helper\">\n                                                封禁缓冲期 (秒)\n                                            </InputLabel>\n                                            <Input\n                                                type={\"number\"}\n                                                inputProps={{\n                                                    step: 1,\n                                                    min: 1\n                                                }}\n                                                value={options.ban_time}\n                                                onChange={handleChange(\n                                                    \"ban_time\"\n                                                )}\n                                                required\n                                            />\n                                            <FormHelperText id=\"component-helper-text\">\n                                                用户保持容量超额状态的最长时长，超出时长该用户会被系统冻结\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <FormControlLabel\n                                                control={\n                                                    <Switch\n                                                        checked={\n                                                            options.score_enabled ===\n                                                            \"1\"\n                                                        }\n                                                        onChange={handleCheckChange(\n                                                            \"score_enabled\"\n                                                        )}\n                                                    />\n                                                }\n                                                label=\"允许为分享定价\"\n                                            />\n                                            <FormHelperText>\n                                                开启后，用户可为分享设定积分价格，下载需要扣除积分\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n\n                                    {options.score_enabled === \"1\" && (\n                                        <div className={classes.form}>\n                                            <FormControl fullWidth>\n                                                <InputLabel htmlFor=\"component-helper\">\n                                                    积分到账比率 (%)\n                                                </InputLabel>\n                                                <Input\n                                                    type={\"number\"}\n                                                    inputProps={{\n                                                        step: 1,\n                                                        min: 0,\n                                                        max: 100\n                                                    }}\n                                                    value={\n                                                        options.share_score_rate\n                                                    }\n                                                    onChange={handleChange(\n                                                        \"share_score_rate\"\n                                                    )}\n                                                    required\n                                                />\n                                                <FormHelperText id=\"component-helper-text\">\n                                                    购买下载设定价格的分享，分享者实际到账的积分比率\n                                                </FormHelperText>\n                                            </FormControl>\n                                        </div>\n                                    )}\n\n                                    <div className={classes.form}>\n                                        <FormControl fullWidth>\n                                            <InputLabel htmlFor=\"component-helper\">\n                                                积分价格 (分)\n                                            </InputLabel>\n                                            <Input\n                                                type={\"number\"}\n                                                inputProps={{\n                                                    step: 1,\n                                                    min: 1\n                                                }}\n                                                value={options.score_price}\n                                                onChange={handleChange(\n                                                    \"score_price\"\n                                                )}\n                                                required\n                                            />\n                                            <FormHelperText id=\"component-helper-text\">\n                                                充值积分时的价格\n                                            </FormHelperText>\n                                        </FormControl>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className={classes.root}>\n                                <Button\n                                    disabled={loading}\n                                    type={\"submit\"}\n                                    variant={\"contained\"}\n                                    color={\"primary\"}\n                                >\n                                    保存\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n\n                    {tab === 1 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddPack(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>名称</TableCell>\n                                            <TableCell>单价</TableCell>\n                                            <TableCell>时长</TableCell>\n                                            <TableCell>大小</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {packs.map(row => (\n                                            <TableRow key={row.id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    ￥{row.price / 100}\n                                                    {row.score !== 0 &&\n                                                        \" 或 \" +\n                                                            row.score +\n                                                            \" 积分\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {Math.ceil(\n                                                        row.time / 86400\n                                                    )}\n                                                    天\n                                                </TableCell>\n                                                <TableCell>\n                                                    {sizeToString(row.size)}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deletePack(row.id)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    )}\n\n                    {tab === 2 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddGroup(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>名称</TableCell>\n                                            <TableCell>单价</TableCell>\n                                            <TableCell>时长</TableCell>\n                                            <TableCell>高亮</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {groups.map(row => (\n                                            <TableRow key={row.id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.name}\n                                                </TableCell>\n                                                <TableCell>\n                                                    ￥{row.price / 100}\n                                                    {row.score !== 0 &&\n                                                        \" 或 \" +\n                                                            row.score +\n                                                            \" 积分\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {Math.ceil(\n                                                        row.time / 86400\n                                                    )}\n                                                    天\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.highlight\n                                                        ? \"是\"\n                                                        : \"否\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deleteGroup(row.id)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    )}\n\n                    {tab === 3 && (\n                        <div>\n                            <Button\n                                onClick={() => setAddRedeem(true)}\n                                variant={\"contained\"}\n                                color={\"secondary\"}\n                            >\n                                添加\n                            </Button>\n                            <div className={classes.tableContainer}>\n                                <Table size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>#</TableCell>\n                                            <TableCell>商品名</TableCell>\n                                            <TableCell>数量</TableCell>\n                                            <TableCell>兑换码</TableCell>\n                                            <TableCell>状态</TableCell>\n                                            <TableCell>操作</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {redeems.map(row => (\n                                            <TableRow key={row.ID}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.ID}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.ProductID === 0 &&\"积分\"}\n                                                    {product[row.ProductID]!== undefined && <>{product[row.ProductID]}</>}\n                                                    {row.ProductID !== 0 && !product[row.ProductID] && \"已失效商品\"}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Num}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.Code}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {!row.Used?\n                                                        <Box color=\"success.main\">未使用</Box>:\n                                                        <Box color=\"warning.main\">已使用</Box>\n                                                    }\n                                                </TableCell>\n                                                <TableCell>\n                                                    <IconButton\n                                                        onClick={() =>\n                                                            deleteRedeem(row.ID)\n                                                        }\n                                                        size={\"small\"}\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                            <div className={classes.navigator}>\n                                <Pagination\n                                    count={Math.ceil(total / pageSize)}\n                                    onChange={(e,v)=>setPage(v)}\n                                    color=\"secondary\"\n                                />\n                            </div>\n                        </div>\n                    )}\n\n                    <AddPack\n                        onSubmit={handleAddPack}\n                        open={addPack}\n                        onClose={() => setAddPack(false)}\n                    />\n                    <AddGroup\n                        onSubmit={handleAddGroup}\n                        open={addGroup}\n                        onClose={() => setAddGroup(false)}\n                    />\n                    <AddRedeem\n                        open={addRedeem}\n                        onSuccess={redeemGenerated}\n                        products = {[...groups,...packs]}\n                        onClose={() => setAddRedeem(false)}\n                    />\n                    <AlertDialog\n                        title={\"生成结果\"}\n                        open={redeemsResOpen}\n                        msg={redeemsRes.map(v=>(<div>{v}</div>))}\n                        onClose={()=>{\n                            setRedeemsResOpen(false);\n                            setRedeemsRes([]);\n                        }}\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { CompactPicker } from \"react-color\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Add, Menu } from \"@material-ui/icons\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles(theme => ({\n    picker: {\n        \"& div\": {\n            boxShadow: \"none !important\"\n        },\n        marginTop: theme.spacing(1)\n    },\n    \"@global\": {\n        \".compact-picker:parent \": {\n            boxShadow: \"none !important\"\n        }\n    },\n    statusBar: {\n        height: 24,\n        width: \"100%\"\n    },\n    fab: {\n        textAlign: \"right\"\n    }\n}));\n\nexport default function CreateTheme({ open, onClose,onSubmit }) {\n    const classes = useStyles();\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: {\n                main: \"#3f51b5\",\n                contrastText: \"#fff\"\n            },\n            secondary: {\n                main: \"#d81b60\",\n                contrastText: \"#fff\"\n            }\n        }\n    });\n\n    const subTheme = useCallback(() => {\n        return createMuiTheme(theme);\n    }, [theme]);\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\n            <DialogContent>\n                <Grid container>\n                    <Grid spacing={2} md={8} xs={12} container>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.main}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                main: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#f44336\",\n                                        \"#ff9800\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#03a9f4\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffc107\",\n                                        \"#FCC400\",\n                                        \"#8bc34a\",\n                                        \"#4caf50\",\n                                        \"#009688\",\n                                        \"#2196f3\",\n                                        \"#3f51b5\",\n                                        \"#e91e63\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#194D33\",\n                                        \"#0C797D\",\n                                        \"#0062B1\",\n                                        \"#673ab7\",\n                                        \"#9c27b0\"\n                                    ]}\n                                    color={theme.palette.primary.main}\n                                    onChangeComplete={(c, e) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    main: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.main}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                main: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    colors={[\n                                        \"#4D4D4D\",\n                                        \"#999999\",\n                                        \"#FFFFFF\",\n                                        \"#ff1744\",\n                                        \"#ff3d00\",\n                                        \"#ffeb3b\",\n                                        \"#cddc39\",\n                                        \"#A4DD00\",\n                                        \"#00bcd4\",\n                                        \"#00e5ff\",\n                                        \"#AEA1FF\",\n                                        \"#FDA1FF\",\n                                        \"#333333\",\n                                        \"#808080\",\n                                        \"#cccccc\",\n                                        \"#ff5722\",\n                                        \"#ffea00\",\n                                        \"#ffc400\",\n                                        \"#c6ff00\",\n                                        \"#00e676\",\n                                        \"#76ff03\",\n                                        \"#00b0ff\",\n                                        \"#2979ff\",\n                                        \"#f50057\",\n                                        \"#000000\",\n                                        \"#666666\",\n                                        \"#B3B3B3\",\n                                        \"#9F0500\",\n                                        \"#C45100\",\n                                        \"#FB9E00\",\n                                        \"#808900\",\n                                        \"#1de9b6\",\n                                        \"#0C797D\",\n                                        \"#3d5afe\",\n                                        \"#651fff\",\n                                        \"#d500f9\"\n                                    ]}\n                                    color={theme.palette.secondary.main}\n                                    onChangeComplete={(c, e) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    main: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                主色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.primary.contrastText}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            primary: {\n                                                ...theme.palette.primary,\n                                                contrastText: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.primary.contrastText}\n                                    onChangeComplete={(c, e) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                primary: {\n                                                    ...theme.palette.primary,\n                                                    contrastText: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid md={6} xs={12} item>\n                            <Typography variant=\"h6\" gutterBottom>\n                                辅色调文字\n                            </Typography>\n                            <TextField\n                                value={theme.palette.secondary.contrastText}\n                                onChange={e => {\n                                    setTheme({\n                                        ...theme,\n                                        palette: {\n                                            ...theme.palette,\n                                            secondary: {\n                                                ...theme.palette.secondary,\n                                                contrastText: e.target.value\n                                            }\n                                        }\n                                    });\n                                }}\n                                fullWidth\n                            />\n                            <div className={classes.picker}>\n                                <CompactPicker\n                                    color={theme.palette.secondary.contrastText}\n                                    onChangeComplete={(c, e) => {\n                                        setTheme({\n                                            ...theme,\n                                            palette: {\n                                                ...theme.palette,\n                                                secondary: {\n                                                    ...theme.palette.secondary,\n                                                    contrastText: c.hex\n                                                }\n                                            }\n                                        });\n                                    }}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Grid spacing={2} md={4} xs={12}>\n                        <ThemeProvider theme={subTheme()}>\n                            <div\n                                className={classes.statusBar}\n                                style={{\n                                    backgroundColor: subTheme().palette.primary\n                                        .dark\n                                }}\n                            />\n                            <AppBar position=\"static\">\n                                <Toolbar>\n                                    <IconButton\n                                        edge=\"start\"\n                                        className={classes.menuButton}\n                                        color=\"inherit\"\n                                        aria-label=\"menu\"\n                                    >\n                                        <Menu />\n                                    </IconButton>\n                                    <Typography\n                                        variant=\"h6\"\n                                        className={classes.title}\n                                    >\n                                        Color\n                                    </Typography>\n                                </Toolbar>\n                            </AppBar>\n                            <div style={{ padding: 16 }}>\n                                <TextField\n                                    fullWidth\n                                    color={\"secondary\"}\n                                    label={\"文字输入\"}\n                                />\n                                <div\n                                    className={classes.fab}\n                                    style={{ paddingTop: 64 }}\n                                >\n                                    <Fab color=\"secondary\" aria-label=\"add\">\n                                        <Add />\n                                    </Fab>\n                                </div>\n                            </div>\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={()=>onSubmit(theme)} color=\"primary\">\n                    创建\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { Delete } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CreateTheme from \"../Dialogs/CreateTheme\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 500,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    colorContainer: {\n        display: \"flex\"\n    },\n    colorDot: {\n        width: 20,\n        height: 20,\n        borderRadius: \"50%\",\n        marginLeft: 6\n    }\n}));\n\nexport default function Theme() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [theme, setTheme] = useState({});\n    const [options, setOptions] = useState({\n        themes: \"{}\",\n        defaultTheme:\"\",\n        home_view_method:\"icon\",\n        share_view_method:\"list\",\n    });\n    const [themeConfig, setThemeConfig] = useState({});\n    const [themeConfigError, setThemeConfigError] = useState({});\n    const [create, setCreate] = useState(false);\n\n    const deleteTheme = color => {\n        if(color === options.defaultTheme){\n            ToggleSnackbar(\"top\", \"right\", \"不能删除默认配色\", \"warning\");\n            return\n        }\n        if (Object.keys(theme).length <=1){\n            ToggleSnackbar(\"top\", \"right\", \"请至少保留一个配色方案\", \"warning\");\n            return\n        }\n        let themeCopy = {...theme};\n        delete themeCopy[color];\n        let resStr = JSON.stringify(themeCopy);\n        setOptions({\n            ...options,\n            themes:resStr,\n        })\n    }\n\n    const addTheme = newTheme => {\n        setCreate(false);\n        if (theme[newTheme.palette.primary.main] !== undefined){\n            ToggleSnackbar(\"top\", \"right\", \"主色调不能与已有配色重复\", \"warning\");\n            return\n        }\n        let res = {\n            ...theme,\n            [newTheme.palette.primary.main]:newTheme,\n        };\n        let resStr = JSON.stringify(res);\n        setOptions({\n            ...options,\n            themes:resStr,\n        })\n    }\n\n    useEffect(() => {\n        let res = JSON.parse(options.themes);\n        let themeString = {};\n\n        Object.keys(res).map(k => {\n            themeString[k] = JSON.stringify(res[k]);\n        });\n\n        setTheme(res);\n        setThemeConfig(themeString);\n    }, [options.themes]);\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        let option = [];\n        Object.keys(options).forEach(k => {\n            option.push({\n                key: k,\n                value: options[k]\n            });\n        });\n        API.patch(\"/admin/setting\", {\n            options: option\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        主题配色\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>关键色</TableCell>\n                                        <TableCell>色彩配置</TableCell>\n                                        <TableCell>操作</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {Object.keys(theme).map(k => (\n                                        <TableRow key={k}>\n                                            <TableCell\n                                                component=\"th\"\n                                                scope=\"row\"\n                                            >\n                                                <div\n                                                    className={\n                                                        classes.colorContainer\n                                                    }\n                                                >\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .primary\n                                                                    .main\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                    <div\n                                                        style={{\n                                                            backgroundColor:\n                                                                theme[k].palette\n                                                                    .secondary\n                                                                    .main\n                                                        }}\n                                                        className={\n                                                            classes.colorDot\n                                                        }\n                                                    />\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    error={themeConfigError[k]}\n                                                    helperText={\n                                                        themeConfigError[k] &&\n                                                        \"格式不正确\"\n                                                    }\n                                                    fullWidth\n                                                    multiline\n                                                    onChange={e => {\n                                                        setThemeConfig({\n                                                            ...themeConfig,\n                                                            [k]: e.target.value\n                                                        });\n                                                    }}\n                                                    onBlur={e => {\n                                                        try {\n                                                            let res = JSON.parse(\n                                                                e.target.value\n                                                            );\n                                                            if(\n                                                                !('palette' in res) ||\n                                                                !('primary' in res.palette) ||\n                                                                !('main' in res.palette.primary) ||\n                                                                !('secondary' in res.palette) ||\n                                                                !('main' in res.palette.secondary)\n                                                            ){\n                                                                throw \"error\";\n                                                            }\n                                                            setTheme({\n                                                                ...theme,\n                                                                [k]: res\n                                                            });\n                                                        } catch (e) {\n                                                            setThemeConfigError(\n                                                                {\n                                                                    ...themeConfigError,\n                                                                    [k]: true\n                                                                }\n                                                            );\n                                                            return;\n                                                        }\n                                                        setThemeConfigError({\n                                                            ...themeConfigError,\n                                                            [k]: false\n                                                        });\n                                                    }}\n                                                    value={themeConfig[k]}\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <IconButton onClick={()=>deleteTheme(k)}>\n                                                    <Delete />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                            <div>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                    style={{marginTop:8}}\n                                    onClick={()=>setCreate(true)}\n                                >\n                                    新建配色方案\n                                </Button>\n                            </div>\n                            <Alert severity=\"info\" style={{marginTop:8}}>\n                                <Typography variant=\"body2\">\n                                    完整的配置项可在 {\" \"}\n                                    <Link\n                                        href={\"https://material-ui.com/zh/customization/default-theme/\"}\n                                        target={\"_blank\"}\n                                    >\n                                        默认主题 - Material-UI\n                                    </Link>{\" \"}\n                                    查阅。\n                                </Typography>\n                            </Alert>\n\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    默认配色\n                                </InputLabel>\n                                <Select\n                                    value={options.defaultTheme}\n                                    onChange={handleChange(\"defaultTheme\")}\n                                >\n                                    {Object.keys(theme).map(k=>(\n                                        <MenuItem key={k} value={k}>\n                                            <div\n                                                className={\n                                                    classes.colorContainer\n                                                }\n                                            >\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                        theme[k].palette\n                                                            .primary\n                                                            .main\n                                                    }}\n                                                    className={\n                                                        classes.colorDot\n                                                    }\n                                                />\n                                                <div\n                                                    style={{\n                                                        backgroundColor:\n                                                        theme[k].palette\n                                                            .secondary\n                                                            .main\n                                                    }}\n                                                    className={\n                                                        classes.colorDot\n                                                    }\n                                                />\n                                            </div>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好配色时，站点默认使用的配色方案\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        界面\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    个人文件列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.home_view_method}\n                                    onChange={handleChange(\"home_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>小图标</MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，个人文件页面列表默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    目录分享页列表默认样式\n                                </InputLabel>\n                                <Select\n                                    value={options.share_view_method}\n                                    onChange={handleChange(\"share_view_method\")}\n                                    required\n                                >\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\n                                    <MenuItem value={\"smallIcon\"}>小图标</MenuItem>\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户未指定偏好样式时，目录分享页面的默认样式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n\n            <CreateTheme onSubmit={addTheme} open={create} onClose={()=>setCreate(false)}/>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function Aria2() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        aria2_rpcurl:\"\",\n        aria2_token:\"\",\n        aria2_temp_path:\"\",\n        aria2_options:\"\",\n        aria2_interval:\"0\",\n        aria2_call_timeout:\"0\",\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const reload = () => {\n        API.get(\"/admin/reload/aria2\")\n            .then(response => {})\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {});\n    };\n\n    const test = () =>{\n        setLoading(true);\n        API.post(\"/admin/aria2/test\",{\n            server:options.aria2_rpcurl,\n            token:options.aria2_token,\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"连接成功，Aria2 版本为：\"+response.data, \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    }\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        let option = [];\n        Object.keys(options).forEach(k=>{\n            option.push({\n                key:k,\n                value:options[k],\n            });\n        })\n        API.patch(\"/admin/setting\",{\n            options:option,\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n                reload();\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Aria2\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <Alert severity=\"info\" style={{marginTop:8}}>\n                                <Typography variant=\"body2\">\n                                    Cloudreve 的离线下载功能由 {\" \"}\n                                    <Link\n                                        href={\"https://aria2.github.io/\"}\n                                        target={\"_blank\"}\n                                    >\n                                        Aria2\n                                    </Link>{\" \"}\n                                    驱动。如需使用，请在同一设备上以和运行 Cloudreve 相同的用户身份启动 Aria2，\n                                    并在 Aria2 的配置文件中开启 RPC 服务。\n                                </Typography>\n                            </Alert>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 服务器地址\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.aria2_rpcurl}\n                                    onChange={handleChange(\"aria2_rpcurl\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    包含端口的完整 RPC 服务器地址，例如：http://127.0.0.1:6800/，留空表示不启用 Aria2 服务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC Secret\n                                </InputLabel>\n                                <Input\n                                    value={options.aria2_token}\n                                    onChange={handleChange(\"aria2_token\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    RPC 授权令牌，与 Aria2 配置文件中保持一致，未设置请留空。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    临时下载目录\n                                </InputLabel>\n                                <Input\n                                    value={options.aria2_temp_path}\n                                    onChange={handleChange(\"aria2_temp_path\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    离线下载临时下载目录的<strong>绝对路径</strong>，Cloudreve 进程需要此目录的读、写、执行权限。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态刷新间隔 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step:1,\n                                        min:1,\n                                    }}\n                                    required\n                                    value={options.aria2_interval}\n                                    onChange={handleChange(\"aria2_interval\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Cloudreve 向 Aria2 请求刷新任务状态的间隔。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    RPC 调用超时 (秒)\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        step:1,\n                                        min:1,\n                                    }}\n                                    required\n                                    value={options.aria2_call_timeout}\n                                    onChange={handleChange(\"aria2_call_timeout\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    调用 RPC 服务时最长等待时间\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    全局任务参数\n                                </InputLabel>\n                                <Input\n                                    multiline\n                                    required\n                                    value={options.aria2_options}\n                                    onChange={handleChange(\"aria2_options\")}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    创建下载任务时携带的额外设置参数，以 JSON 编码后的格式书写，您可也可以将这些设置写在 Aria2 配置文件里，可用参数请查阅官方文档\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                    <Button\n                        style={{marginLeft:8}}\n                        disabled={loading}\n                        onClick={()=>test()}\n                        variant={\"outlined\"}\n                        color={\"secondary\"}\n                    >\n                        测试连接\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SizeInput from \"../Common/SizeInput\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nexport default function ImageSetting() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState({\n        gravatar_server:\"\",\n        avatar_path:\"\",\n        avatar_size:\"\",\n        avatar_size_l:\"\",\n        avatar_size_m:\"\",\n        avatar_size_s:\"\",\n        thumb_width:\"\",\n        thumb_height:\"\",\n        captcha_height:\"1\",\n        captcha_width:\"1\",\n        captcha_mode:\"3\",\n        captcha_CaptchaLen:\"\",\n    });\n\n    const handleChange = name => event => {\n        setOptions({\n            ...options,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        API.post(\"/admin/setting\", {\n            keys: Object.keys(options)\n        })\n            .then(response => {\n                setOptions(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, []);\n\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        let option = [];\n        Object.keys(options).forEach(k=>{\n            option.push({\n                key:k,\n                value:options[k],\n            });\n        })\n        API.patch(\"/admin/setting\",{\n            options:option,\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n                setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        头像\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    Gravatar 服务器\n                                </InputLabel>\n                                <Input\n                                    type={\"url\"}\n                                    value={options.gravatar_server}\n                                    onChange={handleChange(\"gravatar_server\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    Gravatar 服务器地址，可选择使用国内镜像\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    头像存储路径\n                                </InputLabel>\n                                <Input\n                                    value={options.avatar_path}\n                                    onChange={handleChange(\"avatar_path\")}\n                                    required\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户上传自定义头像的存储路径\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={options.avatar_size}\n                                    onChange={handleChange(\"avatar_size\")}\n                                    required\n                                    min={0}\n                                    max={2147483647}\n                                    label={\"头像文件大小限制\"}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可上传头像文件的最大大小\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    小头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.avatar_size_s}\n                                    onChange={handleChange(\"avatar_size_s\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    中头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.avatar_size_m}\n                                    onChange={handleChange(\"avatar_size_m\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    大头像尺寸\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.avatar_size_l}\n                                    onChange={handleChange(\"avatar_size_l\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        缩略图\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.thumb_width}\n                                    onChange={handleChange(\"thumb_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.thumb_height}\n                                    onChange={handleChange(\"thumb_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        验证码\n                    </Typography>\n                    <div className={classes.formContainer}>\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    宽度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.captcha_width}\n                                    onChange={handleChange(\"captcha_width\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    高度\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:1,\n                                        step:1,\n                                    }}\n                                    value={options.captcha_height}\n                                    onChange={handleChange(\"captcha_height\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    模式\n                                </InputLabel>\n                                <Select\n                                    value={options.captcha_mode}\n                                    onChange={handleChange(\"captcha_mode\")}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>数字</MenuItem>\n                                    <MenuItem value={\"1\"}>字母</MenuItem>\n                                    <MenuItem value={\"2\"}>算数</MenuItem>\n                                    <MenuItem value={\"3\"}>数字+字母</MenuItem>\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    验证码的形式\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {useHistory, useLocation} from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer:{\n        display:\"flex\",\n    },\n    cover: {\n        width: 100,\n        height:60,\n    },\n    card:{\n    },\n    content:{\n        flex: \"1 0 auto\",\n    },\n    bg:{\n        backgroundColor:theme.palette.background.default,\n        padding: \"24px 24px\",\n    }\n}));\n\nconst policies = [\n    {\n        name:\"本机存储\",\n        img:\"local.png\",\n        path:\"/admin/policy/add/local\",\n    },\n    {\n        name:\"从机存储\",\n        img:\"remote.png\",\n        path:\"/admin/policy/add/remote\",\n    },\n    {\n        name:\"七牛\",\n        img:\"qiniu.png\",\n        path:\"/admin/policy/add/qiniu\",\n    },\n    {\n        name:\"阿里云 OSS\",\n        img:\"oss.png\",\n        path:\"/admin/policy/add/oss\",\n    },\n    {\n        name:\"又拍云\",\n        img:\"upyun.png\",\n        path:\"/admin/policy/add/upyun\",\n    },\n    {\n        name:\"腾讯云 COS\",\n        img:\"cos.png\",\n        path:\"/admin/policy/add/cos\",\n    },\n    {\n        name:\"OneDrive\",\n        img:\"onedrive.png\",\n        path:\"/admin/policy/add/onedrive\",\n    },\n];\n\nexport default function AddPolicy({open, onClose }) {\n    const classes = useStyles();\n\n    const location = useHistory();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            maxWidth={\"sm\"}\n            fullWidth\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                选择存储方式\n            </DialogTitle>\n            <DialogContent dividers className={classes.bg}>\n                <Grid container spacing={2}>\n                    {policies.map(v=>(\n                        <Grid item sm={12} md={6}>\n                            <Card className={classes.card}>\n                                <CardActionArea\n                                    onClick={()=>{\n                                        location.push(v.path);\n                                        onClose();\n                                    }}\n                                    className={classes.cardContainer}\n                                >\n                                    <CardMedia\n                                        className={classes.cover}\n                                        image={\"/static/img/\"+v.img}\n                                    />\n                                    <CardContent className={classes.content}>\n                                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                            {v.name}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    取消\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../untils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { policyTypeMap } from \"../../../config\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {useHistory, useLocation} from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Delete, Edit} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {}\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"类型\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属文件数\",\n        minWidth: 50,\n        align: \"right\"\n    },\n    {\n        id: \"size\",\n        label: \"数据量\",\n        minWidth: 100,\n        align: \"right\"\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\"\n    }\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport default function Policy() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [tab, setTab] = useState(0);\n    const [policies, setPolicies] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [addDialog, setAddDialog] = useState(false);\n    const [filter, setFilter] = useState(\"all\");\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editID, setEditID] = React.useState(0);\n\n    let location = useLocation();\n    let history = useHistory();\n    let query = useQuery();\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    useEffect(()=>{\n        if(query.get(\"code\") === \"0\"){\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        }else if (query.get(\"msg\") && query.get(\"msg\")!==\"\"){\n            ToggleSnackbar(\"top\", \"right\", query.get(\"msg\") + \", \"+ query.get(\"err\"), \"warning\");\n        }\n\n    },[location])\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize,filter]);\n\n    const loadList = () => {\n        API.post(\"/admin/policy/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n            conditions: filter === \"all\" ? {} : { type: filter }\n        })\n            .then(response => {\n                setPolicies(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deletePolicy = (id) =>{\n        API.delete(\"/admin/policy/\" + id,)\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => setAddDialog(true)}\n                    variant={\"contained\"}\n                >\n                    添加存储策略\n                </Button>\n                <div className={classes.headerRight}>\n                    <Select\n                        style={{\n                            marginRight:8,\n                        }}\n                        value={filter}\n                        onChange={e=>setFilter(e.target.value)}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"local\"}>本机</MenuItem>\n                        <MenuItem value={\"remote\"}>从机</MenuItem>\n                        <MenuItem value={\"qiniu\"}>七牛</MenuItem>\n                        <MenuItem value={\"upyun\"}>又拍云</MenuItem>\n                        <MenuItem value={\"oss\"}>阿里云 OSS</MenuItem>\n                        <MenuItem value={\"cos\"}>腾讯云 COS</MenuItem>\n                        <MenuItem value={\"onedrive\"}>OneDrive</MenuItem>\n                    </Select>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{height:52}}>\n                                {columns.map(column => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {policies.map(row => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {policyTypeMap[row.Type] !==\n                                            undefined &&\n                                            policyTypeMap[row.Type]}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID][0].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(statics[row.ID][1])}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton onClick={()=>deletePolicy(row.ID)} size={\"small\"}>\n                                                <Delete/>\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton onClick={(e)=>{\n                                                setEditID(row.ID)\n                                                handleClick(e)\n                                            }} size={\"small\"}>\n                                                <Edit/>\n                                            </IconButton>\n                                        </Tooltip>\n\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n            <Menu\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                keepMounted\n            >\n                <MenuItem onClick={e=>{\n                    handleClose(e);\n                    history.push(\"/admin/policy/edit/pro/\"+editID);\n                }}>专家模式编辑</MenuItem>\n                <MenuItem onClick={e=>{\n                    handleClose(e);\n                    history.push(\"/admin/policy/edit/guide/\"+editID);\n                }}>向导模式编辑</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\n}));\n\nexport default function MagicVar({isFile, open, onClose, isSlave }) {\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {isFile?\"文件名魔法变量\":\"路径魔法变量\"}\n            </DialogTitle>\n            <DialogContent>\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>魔法变量</TableCell>\n                                <TableCell>描述</TableCell>\n                                <TableCell>示例</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{randomkey16}\"}</TableCell>\n                                <TableCell>16位随机字符</TableCell>\n                                <TableCell>N6IimT5XZP324ACK</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{randomkey8}\"}</TableCell>\n                                <TableCell>8位随机字符</TableCell>\n                                <TableCell>gWz78q30</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{timestamp}\"}</TableCell>\n                                <TableCell>秒级时间戳</TableCell>\n                                <TableCell>1582692933</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{timestamp_nano}\"}</TableCell>\n                                <TableCell>纳秒级时间戳</TableCell>\n                                <TableCell>1582692933231834600</TableCell>\n                            </TableRow>\n                            {!isSlave && <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{uid}\"}</TableCell>\n                                <TableCell>用户ID</TableCell>\n                                <TableCell>1</TableCell>\n                            </TableRow>}\n                            {isFile && <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{originname}\"}</TableCell>\n                                <TableCell>原始文件名</TableCell>\n                                <TableCell>MyPico.mp4</TableCell>\n                            </TableRow>}\n                            {!isFile && !isSlave && <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{path}\"}</TableCell>\n                                <TableCell>用户上传路径</TableCell>\n                                <TableCell>/我的文件/学习资料/</TableCell>\n                            </TableRow>}\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{date}\"}</TableCell>\n                                <TableCell>日期</TableCell>\n                                <TableCell>20060102</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{datetime}\"}</TableCell>\n                                <TableCell>日期时间</TableCell>\n                                <TableCell>20060102150405</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{year}\"}</TableCell>\n                                <TableCell>年份</TableCell>\n                                <TableCell>2006</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{month}\"}</TableCell>\n                                <TableCell>月份</TableCell>\n                                <TableCell>01</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{day}\"}</TableCell>\n                                <TableCell>日</TableCell>\n                                <TableCell>02</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{hour}\"}</TableCell>\n                                <TableCell>小时</TableCell>\n                                <TableCell>15</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{minute}\"}</TableCell>\n                                <TableCell>分钟</TableCell>\n                                <TableCell>04</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">{\"{second}\"}</TableCell>\n                                <TableCell>秒</TableCell>\n                                <TableCell>05</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    关闭\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nexport default function DomainInput({onChange,value,required,label}){\n    const [domain,setDomain] = useState(\"\");\n    const [protocol,setProtocol] = useState(\"https://\");\n    const [error,setError] = useState();\n\n    useState(()=>{\n        if (value.startsWith(\"https://\")){\n            setDomain(value.replace(\"https://\",\"\"));\n            setProtocol(\"https://\")\n        }else{\n            if (value !== \"\"){\n                setDomain(value.replace(\"http://\",\"\"));\n                setProtocol(\"http://\")\n            }\n        }\n    },[value]);\n\n    useEffect(()=>{\n        if(protocol === \"http://\" && window.location.protocol === \"https:\"){\n            setError(\"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\")\n        }else{\n            setError(\"\")\n        }\n    },[protocol])\n\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"component-helper\">\n                {label}\n            </InputLabel>\n            <Input\n                error={error !== \"\"}\n                value={domain}\n                onChange={e=>{\n                    setDomain(e.target.value);\n                    onChange({\n                        target:{\n                            value:protocol + e.target.value,\n                        }\n                    })\n\n                }}\n                required = {required}\n                startAdornment={\n                    <InputAdornment position=\"start\">\n                        <Select\n                            value={protocol}\n                            onChange={(e)=>{\n                                setProtocol(e.target.value);\n                                onChange({\n                                    target:{\n                                        value:e.target.value + domain,\n                                    }\n                                })\n\n                            }}\n                        >\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\n                        </Select>\n                    </InputAdornment>\n                }\n            />\n            {error !== \"\" && <FormHelperText error={error !== \"\"}>{error}</FormHelperText>}\n        </FormControl>\n    )\n}","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function LocalGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(\n        props.policy\n            ? props.policy\n            : {\n                  Type: \"local\",\n                  Name: \"\",\n                  DirNameRule: \"uploads/{uid}/{path}\",\n                  AutoRename: \"true\",\n                  FileNameRule: \"{randomkey8}_{originname}\",\n                  IsOriginLinkEnable: \"false\",\n                  BaseURL: \"\",\n                IsPrivate:\"true\",\n                  MaxSize: \"0\",\n                  OptionsSerialized: {\n                      file_type: \"\"\n                  }\n              }\n    );\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const checkPathSetting = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/path\", {\n            path: policy.DirNameRule\n        })\n            .then(response => {\n                setActiveStep(1);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\n            policyCopy.BaseURL = \"\";\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n                setActiveStep(4);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>\n                {props.policy ? \"修改\" : \"添加\"}本机存储策略\n            </Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={checkPathSetting}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL\n                                    中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={e => {\n                                                if (\n                                                    e.target.value === \"false\"\n                                                ) {\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\"\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value);\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={\n                                                policy.IsOriginLinkEnable ===\n                                                    \"true\" && useCDN === \"true\"\n                                            }\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </Collapse>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                        </Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport {useHistory} from \"react-router\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {randomStr} from \"../../../../untils\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding:10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\":{\n            backgroundColor:theme.palette.background.default,\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10,\n    },\n    stepFooter:{\n        marginTop: 32,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    \"@global\":{\n        \"code\":{\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontSize: \"14px\",\n            fontFamily:\" Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\",\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n        \"pre\":{\n            margin: \"24px 0\",\n            padding: \"12px 18px\",\n            overflow: \"auto\",\n            direction: \"ltr\",\n            borderRadius: \"4px\",\n            backgroundColor: \"#272c34\",\n            color:\"#fff\",\n        }\n    },\n\n}));\n\nconst steps = [\n    {\n        title: \"存储端配置\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar,setMagicVar] = useState(\"\");\n    const [useCDN,setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type:\"remote\",\n        Name:\"\",\n        Server:\"https://example.com:5212\",\n        SecretKey:randomStr(64),\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable:\"false\",\n        BaseURL:\"\",\n        IsPrivate:\"true\",\n        MaxSize:\"0\",\n        OptionsSerialized:{\n            file_type:\"\",\n        },\n    });\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized:{\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            },\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const testSlave = ()=>{\n        setLoading(true);\n\n        // 测试路径是否可用\n        API.post(\"/admin/policy/test/slave\", {\n            server: policy.Server,\n            secret:policy.SecretKey,\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = {...policy};\n        policyCopy.OptionsSerialized = {...policyCopy.OptionsSerialized};\n\n        // 处理存储策略\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\"){\n            policyCopy.BaseURL = \"\"\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable = policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\",\");\n        if (policyCopy.OptionsSerialized.file_type.length === 1 && policyCopy.OptionsSerialized.file_type[0] === \"\"){\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n\n    }\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"}从机存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e=>{\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n                    <Alert severity=\"info\" style={{marginBottom:10,}}>\n                        从机存储策略允许你使用同样运行了 Cloudreve 的服务器作为存储端，\n                        用户上传下载流量通过 HTTP 直传。\n                    </Alert>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                将和主站相同版本的 Cloudreve 程序拷贝至要作为从机的服务器上。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\n                                可将您的密钥填入下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机密钥\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            minlength:64,\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                修改从机配置文件。<br/>在从机端 Cloudreve 的同级目录下新建\n                                <code>conf.ini</code>文件，填入从机配置，启动/重启从机端 Cloudreve。\n                                以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\n                            </Typography>\n                                <pre>\n                                    [System]<br/>\n                                    Mode = slave<br/>\n                                    Listen = :5212<br/>\n                                    <br/>\n                                    [Slave]<br/>\n                                    Secret = {policy.SecretKey}<br/>\n                                    <br/>\n                                    [CORS]<br/>\n                                    AllowOrigins = *<br/>\n                                    AllowMethods = OPTIONS,GET,POST<br/>\n                                    AllowHeaders = *<br/>\n                                </pre>\n                            <Typography variant={\"body2\"}>\n                                从机端配置文件格式大致与主站端相同，区别在于：\n                                <ul>\n                                    <li>\n                                        <code>System</code>\n                                        分区下的\n                                        <code>mode</code>\n                                        字段必须更改为<code>slave</code>\n                                    </li>\n                                    <li>\n                                        必须指定<code>Slave</code>分区下的<code>Secret</code>\n                                        字段，其值为第二步里填写或生成的密钥。\n                                    </li>\n                                    <li>必须启动跨域配置，即<code>CORS</code>字段的内容，\n                                    具体可参考上文范例或官方文档。如果配置不正确，用户将无法通过 Web 端向从机上传文件。\n                                    </li>\n                                </ul>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写从机地址。<br/>\n                                如果主站启用了 HTTPS，从机也需要启用，并在下方填入 HTTPS 协议的地址。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        从机地址\n                                    </InputLabel>\n                                    <Input\n                                        fullWidth\n                                        required\n                                        type={\"url\"}\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    onClick={()=>testSlave()}\n                                    variant={\"outlined\"}\n                                    color={\"primary\"}\n                                >\n                                    测试从机通信\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e=> {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的 Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={policy.AutoRename === \"true\"}\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=> setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e=> {\n                        e.preventDefault();\n                       setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={handleChange(\n                                            \"IsOriginLinkEnable\"\n                                        )}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    是否要对下载/直链使用 CDN？\n                                    <br />\n                                    开启后，用户访问文件时的 URL 中的域名部分会被替换为 CDN 域名。\n                                </Typography>\n\n                                <div className={classes.form}>\n                                    <FormControl required component=\"fieldset\">\n                                        <RadioGroup\n                                            required\n                                            value={useCDN}\n                                            onChange={e=>{\n                                                if (e.target.value === \"false\"){\n                                                    setPolicy({\n                                                        ...policy,\n                                                        BaseURL: \"\"\n                                                    });\n                                                }\n                                                setUseCDN(e.target.value)\n                                            }}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"使用\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"不使用\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <Collapse in={useCDN === \"true\"}>\n                            <div className={classes.subStepContainer}>\n                                <div className={classes.stepNumberContainer}>\n                                    <div className={classes.stepNumber}>3</div>\n                                </div>\n                                <div className={classes.subStepContent}>\n                                    <Typography variant={\"body2\"}>\n                                        选择协议并填写 CDN 域名\n                                    </Typography>\n\n                                    <div className={classes.form}>\n                                        <DomainInput\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                            required={policy.IsOriginLinkEnable === \"true\" && useCDN === \"true\"}\n                                            label={\"CDN 前缀\"}\n                                        />\n                                    </div>\n\n                                </div>\n                            </div>\n                        </Collapse>\n\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=> setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>\n                        {\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent}\n                      onSubmit={e=> {\n                    e.preventDefault();\n                    setActiveStep(4)\n                }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.MaxSize === \"0\" ? \"false\" : \"true\"}\n                                        onChange={e=>{\n                                            if(e.target.value === \"true\"){\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\",\n                                                });\n                                            }else{\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\",\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{policy.MaxSize !== \"0\" ? \"3\" : \"2\"}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.OptionsSerialized.file_type === \"\" ? \"false\" : \"true\"}\n                                        onChange={e=>{\n                                            if(e.target.value === \"true\"){\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\"jpg,png,mp4,zip,rar\",\n                                                    },\n                                                });\n                                            }else{\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\"\",\n                                                    },\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>{policy.MaxSize !== \"0\" ? \"4\" : \"3\"}</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 , 隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={policy.OptionsSerialized.file_type}\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=> setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>\n                        {\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=> setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>\n                        {\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                <form className={classes.stepContent}>\n                    <Typography>\n                        存储策略已{props.policy ? \"保存\" : \"添加\"}！\n                    </Typography>\n                    <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                        要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                    </Typography>\n                </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={()=> history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n</>\n             )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                isSlave\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {getNumber, randomStr} from \"../../../../untils\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function RemoteGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type: \"qiniu\",\n        Name: \"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        IsPrivate: \"true\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n            mimetype:\"\",\n        }\n    });\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} 七牛 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用七牛存储策略前，请确保您在 参数设置 - 站点信息\n                                - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://portal.qiniu.com/create\"}\n                                    target={\"_blank\"}\n                                >\n                                    七牛控制面板\n                                </Link>\n                                创建对象存储资源。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您在七牛创建存储空间时指定的“存储空间名称”：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储空间名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间类型，推荐选择“私有空间”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公有\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写您为存储空间绑定的 CDN 加速域名。\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"CDN 加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在七牛控制面板进入 个人中心 -\n                                密钥管理，在下方填写获得到的 AK、SK。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SK\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e=>{\n                                            if (policy.IsPrivate === \"true\" && e.target.value===\"true\"){\n                                                ToggleSnackbar(\"top\", \"right\",\"私有空间无法开启此功能\", \"warning\");\n                                                return\n                                            }\n                                            handleChange(\n                                            \"IsOriginLinkEnable\"\n                                            )(e)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {getNumber(3,[\n                                    policy.MaxSize !== \"0\",\n                                    policy.OptionsSerialized.file_type !== \"\",\n                                ])}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件 MimeType？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .mimetype === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype:\n                                                            \"image/*\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        mimetype: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {getNumber(4,[\n                                        policy.MaxSize !== \"0\",\n                                        policy.OptionsSerialized.file_type !== \"\",\n                                    ])}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的 MimeType，多个请以半角逗号 ,\n                                    隔开。七牛服务器会侦测文件内容以判断 MimeType，再用判断值跟指定值进行匹配，匹配成功则允许上传\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            MimeType 列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .mimetype\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"mimetype\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已{props.policy ? \"保存\" : \"添加\"}！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {getNumber, randomStr} from \"../../../../untils\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\":{\n        \"code\":{\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\" Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\",\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"跨域策略\",\n        optional: true\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function OSSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type: \"oss\",\n        Name: \"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        Server: \"\",\n        IsPrivate: \"true\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n        }\n    });\n    const [policyID,setPolicyID] = useState(props.policy?props.policy.ID:0);\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\"){\n            policyCopy.BaseURL = \"\"\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = ()=>{\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n    }\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} 阿里云 OSS 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 阿里云 OSS 储策略前，请确保您在 参数设置 - 站点信息\n                                - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://oss.console.aliyun.com/overview\"}\n                                    target={\"_blank\"}\n                                >\n                                    OSS 管理控制台\n                                </Link>\n                                创建 Bucket。注意：创建空间类型只能选择<code>标准存储</code>或<code>低频访问</code>\n                                ，暂不支持<code>归档存储</code>\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写您创建 Bucket 时指定的<code>Bucket 名称</code>：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Bucket 名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的读写权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的概览页面，填写<code>访问域名</code>栏目下\n                                <code>外网访问</code> 一行中间的 <code>EndPoint（地域节点）</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        EndPoint\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        inputProps={{\n                                            pattern:\"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\" ,\n                                            title:\"格式不合法，只需输入域名部分即可\"\n                                        }}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 阿里云CDN 加速 OSS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={e=>{\n                                            setUseCDN(e.target.value)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link href={\"https://cdn.console.aliyun.com/domain/list\"} target={\"_blank\"}>\n                                        阿里云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 OSS Bucket。在下方填写\n                                    CDN 加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{getNumber(6,[\n                                useCDN === \"true\"\n                            ])}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在阿里云\n                                <Link href={\"https://usercenter.console.aliyun.com/#/manage/ak\"} target={\"_blank\"}>\n                                    安全信息管理\n                                </Link>\n                                页面获取 用户 AccessKey，并填写在下方。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        AccessKey ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern:\"\\\\S+\" ,\n                                            title:\"不能含有空格\"\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Access Key Secret\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern:\"\\\\S+\" ,\n                                            title:\"不能含有空格\"\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{getNumber(7,[\n                                useCDN === \"true\"\n                            ])}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e=>{\n                                            if (policy.IsPrivate === \"true\" && e.target.value===\"true\"){\n                                                ToggleSnackbar(\"top\", \"right\",\"私有空间无法开启此功能\", \"warning\");\n                                                return\n                                            }\n                                            handleChange(\n                                            \"IsOriginLinkEnable\"\n                                            )(e)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={submitPolicy}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}/>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                OSS Bucket 需要正确配置跨域策略后才能使用 Web 端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此 Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={()=>createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=>{\n                                setActiveStep(prevActiveStep => prevActiveStep + 1);\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(prevSkipped.values());\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }\n\n                            }\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已{props.policy ? \"保存\" : \"添加\"}！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {getNumber, randomStr} from \"../../../../untils\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function UpyunGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type: \"upyun\",\n        Name: \"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        IsPrivate: \"false\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n            token:\"\",\n        }\n    });\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} 又拍云 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用又拍云存储策略前，请确保您在 参数设置 - 站点信息\n                                - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://console.upyun.com/services/create/file/\"}\n                                    target={\"_blank\"}\n                                >\n                                    又拍云面板\n                                </Link>\n                                创建云存储服务。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方填写所创建的服务名称：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        服务名称\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此服务创建或授权有读取、写入、删除权限的操作员，然后将操作员信息填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        操作员密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写为云存储服务绑定的域名，并根据实际情况选择是否使用 HTTPS：\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.BaseURL}\n                                    onChange={handleChange(\"BaseURL\")}\n                                    required\n                                    label={\"加速域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                此步骤可保持默认并跳过，但是强烈建议您跟随此步骤操作。<br/>\n                                前往所创建云存储服务的 功能配置 面板，转到 访问配置 选项卡，开启 Token 防盗链并设定密码。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"已开启 Token 防盗链\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"未开启 Token 防盗链\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.IsPrivate === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    6\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    填写您所设置的 Token 防盗链 密钥\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            Token 防盗链 密钥\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .token\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"token\"\n                                            )}\n                                            required={policy.IsPrivate === \"true\"}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e=>{\n                                            if (policy.IsPrivate === \"true\" && e.target.value===\"true\"){\n                                                ToggleSnackbar(\"top\", \"right\",\"开启 Token 防盗链后无法使用直链功能\", \"warning\");\n                                                return\n                                            }\n                                            handleChange(\n                                            \"IsOriginLinkEnable\"\n                                            )(e)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(4);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}></div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                最后一步，为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(3)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            完成\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已{props.policy ? \"保存\" : \"添加\"}！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {getNumber, randomStr} from \"../../../../untils\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\":{\n        \"code\":{\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\" Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\",\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"存储空间\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"直链设置\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"跨域策略\",\n        optional: true\n    },\n    {\n        title: \"云函数回调\",\n        optional: true\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function COSGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [useCDN, setUseCDN] = useState(\"false\");\n    const [policy, setPolicy] = useState(props.policy?props.policy:{\n        Type: \"cos\",\n        Name: \"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        Server: \"\",\n        IsPrivate: \"true\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n        }\n    });\n    const [policyID,setPolicyID] = useState(props.policy?props.policy.ID:0);\n    const [region,setRegion] = useState(\"ap-chengdu\");\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        if (useCDN === \"false\"){\n            policyCopy.BaseURL = policy.Server\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(4);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    const createCORS = ()=>{\n        setLoading(true);\n        API.post(\"/admin/policy/cors\", {\n            id: policyID\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\n                setActiveStep(5);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n    }\n\n    const creatCallback = ()=>{\n        setLoading(true);\n        API.post(\"/admin/policy/scf\", {\n            id: policyID,\n            region:region,\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"回调云函数已添加\", \"success\");\n                setActiveStep(6);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    }\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} 腾讯云 COS 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>0</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在使用 腾讯云 COS 储策略前，请确保您在 参数设置 - 站点信息\n                                - 站点URL 中填写的 地址与实际相符，并且\n                                <strong>能够被外网正常访问</strong>。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://console.cloud.tencent.com/cos5\"}\n                                    target={\"_blank\"}\n                                >\n                                    COS 管理控制台\n                                </Link>\n                                创建存储桶。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建存储桶的基础配置页面，将<code>空间名称</code>填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        空间名称\n                                    </InputLabel>\n                                    <Input\n                                        inputProps={{\n                                            pattern:\"[a-z0-9-]+-[0-9]+\",\n                                            title:\"空间名格式不正确, 举例：ccc-1252109809\"\n                                        }}\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在下方选择您创建的空间的访问权限类型，推荐选择\n                                <code>私有读写</code>\n                                以获得更高的安全性，私有空间无法开启“获取直链”功能。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsPrivate}\n                                        onChange={handleChange(\"IsPrivate\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"私有读写\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"公共读私有写\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                转到所创建 Bucket 的基础配置，填写<code>基本信息</code>栏目下\n                                给出的 <code>访问域名</code>\n                            </Typography>\n                            <div className={classes.form}>\n                                <DomainInput\n                                    value={policy.Server}\n                                    onChange={handleChange(\"Server\")}\n                                    required\n                                    label={\"访问域名\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否要使用配套的 腾讯云CDN 加速 COS 访问？\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={useCDN}\n                                        onChange={e=>{\n                                            setUseCDN(e.target.value)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"使用\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不使用\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={useCDN === \"true\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>6</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    前往\n                                    <Link href={\"https://console.cloud.tencent.com/cdn/access/guid\"} target={\"_blank\"}>\n                                        腾讯云 CDN 管理控制台\n                                    </Link>\n                                    创建 CDN 加速域名，并设定源站为刚创建的 COS 存储桶。在下方填写\n                                    CDN 加速域名，并选择是否使用 HTTPS：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <DomainInput\n                                        value={policy.BaseURL}\n                                        onChange={handleChange(\"BaseURL\")}\n                                        required={useCDN === \"true\"}\n                                        label={\"CDN 加速域名\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{getNumber(6,[\n                                useCDN === \"true\"\n                            ])}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                在腾讯云\n                                <Link href={\"https://console.cloud.tencent.com/cam/capi\"} target={\"_blank\"}>\n                                    访问密钥\n                                </Link>\n                                页面获取 一对访问密钥，并填写在下方。请确保这对密钥拥有 COS 和 SCF 服务的访问权限。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretId\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern:\"\\\\S+\" ,\n                                            title:\"不能含有空格\"\n                                        }}\n                                        value={policy.AccessKey}\n                                        onChange={handleChange(\"AccessKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        SecretKey\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        inputProps={{\n                                            pattern:\"\\\\S+\" ,\n                                            title:\"不能含有空格\"\n                                        }}\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>{getNumber(7,[\n                                useCDN === \"true\"\n                            ])}</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(3);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否允许获取文件永久直链？\n                                <br />\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.IsOriginLinkEnable}\n                                        onChange={e=>{\n                                            if (policy.IsPrivate === \"true\" && e.target.value===\"true\"){\n                                                ToggleSnackbar(\"top\", \"right\",\"私有空间无法开启此功能\", \"warning\");\n                                                return\n                                            }\n                                            handleChange(\n                                            \"IsOriginLinkEnable\"\n                                            )(e)\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"允许\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"禁止\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={submitPolicy}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(2)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 4 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}/>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 需要正确配置跨域策略后才能使用 Web 端上传文件，Cloudreve\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此 Bucket 的跨域策略，此步骤可以跳过。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={()=>createCORS()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我设置\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=>{\n                                setActiveStep(prevActiveStep => prevActiveStep + 1);\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(prevSkipped.values());\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }\n\n                            }\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}/>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                COS 存储桶 客户端直传需要借助腾讯云的\n                                 <Link href={\"https://console.cloud.tencent.com/scf/index?rid=16\"} target={\"_blank\"}>云函数</Link>\n                                 产品以确保上传回调可控。如果您打算将此存储策略自用，或者分配给可信赖用户组，此步骤可以跳过。\n                                如果是作为公有使用，请务必创建回调云函数。<br/><br/>\n                            </Typography>\n                            <Typography variant={\"body2\"}>Cloudreve 可以尝试帮你自动创建回调云函数，请选择 COS 存储桶 所在地域后继续。\n                                创建可能会花费数秒钟，请耐心等待。创建前请确保您的腾讯云账号已开启云函数服务。</Typography>\n\n                            <div className={classes.form}>\n                                <FormControl>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储桶所在地区\n                                    </InputLabel>\n                                    <Select\n                                        value={region}\n                                        onChange={e=>setRegion(e.target.value)}\n                                        required\n                                    >\n                                        <MenuItem value={\"ap-beijing\"}>华北地区(北京)</MenuItem>\n                                        <MenuItem value={\"ap-chengdu\"}>西南地区(成都)</MenuItem>\n                                        <MenuItem value={\"ap-guangzhou\"}>华南地区(广州)</MenuItem>\n                                        <MenuItem value={\"ap-guangzhou-open\"}>华南地区(广州Open)</MenuItem>\n                                        <MenuItem value={\"ap-hongkong\"}>港澳台地区(中国香港)</MenuItem>\n                                        <MenuItem value={\"ap-mumbai\"}>亚太南部(孟买)</MenuItem>\n                                        <MenuItem value={\"ap-shanghai\"}>华东地区(上海)</MenuItem>\n                                        <MenuItem value={\"ap-singapore\"}>亚太东南(新加坡)</MenuItem>\n                                        <MenuItem value={\"na-siliconvalley\"}>美国西部(硅谷)</MenuItem>\n                                        <MenuItem value={\"na-toronto\"}>北美地区(多伦多)</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={()=>creatCallback()}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    让 Cloudreve 帮我创建\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={()=>{\n                                setActiveStep(prevActiveStep => prevActiveStep + 1);\n                                setSkipped(prevSkipped => {\n                                    const newSkipped = new Set(prevSkipped.values());\n                                    newSkipped.add(activeStep);\n                                    return newSkipped;\n                                });\n                            }\n\n                            }\n                        >\n                            跳过\n                        </Button>{\" \"}\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 6 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已{props.policy ? \"保存\" : \"添加\"}！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {getNumber, randomStr} from \"../../../../untils\";\nimport AlertDialog from \"../../Dialogs/Alert\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    },\n    viewButtonLabel: { textTransform: \"none\" },\n    \"@global\":{\n        \"code\":{\n            color: \"rgba(0, 0, 0, 0.87)\",\n            display: \"inline-block\",\n            padding: \"2px 6px\",\n            fontFamily:\" Consolas, \\\"Liberation Mono\\\", Menlo, Courier, monospace\",\n            borderRadius: \"2px\",\n            backgroundColor: \"rgba(255,229,100,0.1)\",\n        },\n    },\n}));\n\nconst steps = [\n    {\n        title: \"应用授权\",\n        optional: false\n    },\n    {\n        title: \"上传路径\",\n        optional: false\n    },\n    {\n        title: \"上传限制\",\n        optional: false\n    },\n    {\n        title: \"账号授权\",\n        optional: false\n    },\n    {\n        title: \"完成\",\n        optional: false\n    }\n];\n\nexport default function OneDriveGuide(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [magicVar, setMagicVar] = useState(\"\");\n    const [policy, setPolicy] = useState(props.policy\n        ? props.policy\n        : {\n        Type: \"onedrive\",\n        Name: \"\",\n        BucketName:\"\",\n        SecretKey: \"\",\n        AccessKey: \"\",\n        BaseURL: \"\",\n        Server: \"https://graph.microsoft.com/v1.0\",\n        IsPrivate: \"true\",\n        DirNameRule: \"uploads/{year}/{month}/{day}\",\n        AutoRename: \"true\",\n        FileNameRule: \"{randomkey8}_{originname}\",\n        IsOriginLinkEnable: \"false\",\n        MaxSize: \"0\",\n        OptionsSerialized: {\n            file_type: \"\",\n            od_redirect:\"\",\n        }\n    });\n    const [policyID,setPolicyID] = useState(props.policy?props.policy.ID:0);\n    const [httpsAlert,setHttpsAlert] = useState(false);\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const isStepSkipped = step => {\n        return skipped.has(step);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(()=>{\n        API.post(\"/admin/setting\", {\n            keys: [\"siteURL\"]\n        })\n            .then(response => {\n                if (!response.data.siteURL.startsWith(\"https://\")){\n                    setHttpsAlert(true);\n                }\n                if (policy.OptionsSerialized.od_redirect === \"\"){\n                    setPolicy({\n                        ...policy,\n                        OptionsSerialized:{\n                            ...policy.OptionsSerialized,\n                            od_redirect: new URL(\"/api/v3/callback/onedrive/auth\", response.data.siteURL).toString(),\n                        }\n                    })\n                }\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[]);\n\n    const statOAuth = e =>{\n        setLoading(true);\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\", )\n            .then(response => {\n                window.location.href = response.data\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                setLoading(false);\n            });\n    }\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // baseURL处理\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\"){\n            policyCopy.BaseURL = \"https://login.microsoftonline.com/common/oauth2/v2.0\"\n        }else{\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\"\n        }\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已\"+ (props.policy ? \"保存\" : \"添加\"), \"success\");\n                setActiveStep(3);\n                setPolicyID(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <AlertDialog\n                open={httpsAlert}\n                onClose={()=>setHttpsAlert(false)}\n                title={\"警告\"}\n                msg={\"您必须启用 HTTPS 才能使用 OneDrive 存储策略；启用后同步更改 参数设置 - 站点信息 - 站点URL。\"}\n            />\n            <Typography variant={\"h6\"}>{props.policy ? \"修改\" : \"添加\"} OneDrive 存储策略</Typography>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (label.optional) {\n                        labelProps.optional = (\n                            <Typography variant=\"caption\">可选</Typography>\n                        );\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label.title} {...stepProps}>\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n\n            {activeStep === 0 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(1);\n                    }}\n                >\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                前往\n                                <Link\n                                    href={\"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"}\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (国际版账号)\n                                </Link>\n                                {\" \"}或者{\" \"}\n                                <Link\n                                    href={\"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"}\n                                    target={\"_blank\"}\n                                >\n                                    Azure Active Directory 控制台 (世纪互联账号)\n                                </Link>\n                                 并登录，登录后进入<code>Azure Active Directory</code>管理面板。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                               进入左侧 <code>应用注册</code> 菜单，并点击 <code>新注册</code> 按钮。\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>3</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                填写应用注册表单。其中，名称可任取；\n                                <code>重定向 URI (可选)</code>\n                                请选择<code>Web</code>，并填写<code>{policy.OptionsSerialized.od_redirect}</code>；\n                                其他保持默认即可\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>4</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                创建完成后进入应用管理的<code>概览</code>页面，复制<code>应用程序(客户端) ID</code>\n                                并填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        应用程序(客户端) ID\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.BucketName}\n                                        onChange={handleChange(\"BucketName\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>5</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                进入应用管理页面左侧的<code>证书和密码</code>菜单，点击\n                                <code>新建客户端密码</code>\n                                按钮，<code>截止期限</code>选择为<code>从不</code>。创建完成后将客户端密码的值填写在下方：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        客户端密码\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.SecretKey}\n                                        onChange={handleChange(\"SecretKey\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>6</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                选择您的 OneDrive 账号类型：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={policy.Server}\n                                        onChange={handleChange(\"Server\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"https://graph.microsoft.com/v1.0\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"国际版\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"https://microsoftgraph.chinacloudapi.cn/v1.0\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"世纪互联版\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>7</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                为此存储策略命名：\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储策略名\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.Name}\n                                        onChange={handleChange(\"Name\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 1 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={e => {\n                        e.preventDefault();\n                        setActiveStep(2);\n                    }}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\n                                从机的\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"path\")}\n                                >\n                                    路径魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        存储目录\n                                    </InputLabel>\n                                    <Input\n                                        required\n                                        value={policy.DirNameRule}\n                                        onChange={handleChange(\"DirNameRule\")}\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>2</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\n                                文件名。文件名也可使用魔法变量，\n                                可用魔法变量可参考{\" \"}\n                                <Link\n                                    color={\"secondary\"}\n                                    href={\"javascript:void()\"}\n                                    onClick={() => setMagicVar(\"file\")}\n                                >\n                                    文件名魔法变量列表\n                                </Link>{\" \"}\n                                。\n                            </Typography>\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        aria-label=\"gender\"\n                                        name=\"gender1\"\n                                        value={policy.AutoRename}\n                                        onChange={handleChange(\"AutoRename\")}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"开启重命名\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不开启\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n\n                            <Collapse in={policy.AutoRename === \"true\"}>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            命名规则\n                                        </InputLabel>\n                                        <Input\n                                            required={\n                                                policy.AutoRename === \"true\"\n                                            }\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\n                                                \"FileNameRule\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </div>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(0)}\n                        >\n                            上一步\n                        </Button>\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 2 && (\n                <form\n                    className={classes.stepContent}\n                    onSubmit={submitPolicy}\n                >\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>1</div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传的单文件大小？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.MaxSize === \"0\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"10485760\"\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    MaxSize: \"0\"\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.MaxSize !== \"0\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>2</div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入限制：\n                                </Typography>\n                                <div className={classes.form}>\n                                    <SizeInput\n                                        value={policy.MaxSize}\n                                        onChange={handleChange(\"MaxSize\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"单文件大小限制\"}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}>\n                            <div className={classes.stepNumber}>\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\n                            </div>\n                        </div>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                是否限制上传文件扩展名？\n                            </Typography>\n\n                            <div className={classes.form}>\n                                <FormControl required component=\"fieldset\">\n                                    <RadioGroup\n                                        required\n                                        value={\n                                            policy.OptionsSerialized\n                                                .file_type === \"\"\n                                                ? \"false\"\n                                                : \"true\"\n                                        }\n                                        onChange={e => {\n                                            if (e.target.value === \"true\") {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type:\n                                                            \"jpg,png,mp4,zip,rar\"\n                                                    }\n                                                });\n                                            } else {\n                                                setPolicy({\n                                                    ...policy,\n                                                    OptionsSerialized: {\n                                                        ...policy.OptionsSerialized,\n                                                        file_type: \"\"\n                                                    }\n                                                });\n                                            }\n                                        }}\n                                        row\n                                    >\n                                        <FormControlLabel\n                                            value={\"true\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"限制\"\n                                        />\n                                        <FormControlLabel\n                                            value={\"false\"}\n                                            control={\n                                                <Radio color={\"primary\"} />\n                                            }\n                                            label=\"不限制\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\n                        <div className={classes.subStepContainer}>\n                            <div className={classes.stepNumberContainer}>\n                                <div className={classes.stepNumber}>\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\n                                </div>\n                            </div>\n                            <div className={classes.subStepContent}>\n                                <Typography variant={\"body2\"}>\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\n                                    隔开\n                                </Typography>\n                                <div className={classes.form}>\n                                    <FormControl fullWidth>\n                                        <InputLabel htmlFor=\"component-helper\">\n                                            扩展名列表\n                                        </InputLabel>\n                                        <Input\n                                            value={\n                                                policy.OptionsSerialized\n                                                    .file_type\n                                            }\n                                            onChange={handleOptionChange(\n                                                \"file_type\"\n                                            )}\n                                        />\n                                    </FormControl>\n                                </div>\n                            </div>\n                        </div>\n                    </Collapse>\n\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"default\"}\n                            className={classes.button}\n                            onClick={() => setActiveStep(1)}\n                        >\n                            上一步\n                        </Button>{\" \"}\n                        <Button\n                            disabled={loading}\n                            type={\"submit\"}\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                        >\n                            下一步\n                        </Button>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 3 && (\n                <form className={classes.stepContent}>\n                    <div className={classes.subStepContainer}>\n                        <div className={classes.stepNumberContainer}/>\n                        <div className={classes.subStepContent}>\n                            <Typography variant={\"body2\"}>\n                                存储策略已{props.policy ? \"保存\" : \"添加\"}，但是你需要点击下方按钮，并使用 OneDrive 登录授权以完成初始化后才能使用。\n                                日后你可以在存储策略列表页面重新进行授权。\n                            </Typography>\n                            <div className={classes.form}>\n                                <Button\n                                    disabled={loading}\n                                    color={\"secondary\"}\n                                    variant={\"contained\"}\n                                    className={classes.button}\n                                    onClick={statOAuth}\n                                    classes={{ label: classes.viewButtonLabel }}\n                                >\n                                    转到授权页面\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.stepFooter}>\n                    </div>\n                </form>\n            )}\n\n            {activeStep === 5 && (\n                <>\n                    <form className={classes.stepContent}>\n                        <Typography>存储策略已添加！</Typography>\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\n                        </Typography>\n                    </form>\n                    <div className={classes.stepFooter}>\n                        <Button\n                            color={\"primary\"}\n                            className={classes.button}\n                            onClick={() => history.push(\"/admin/policy\")}\n                        >\n                            返回存储策略列表\n                        </Button>\n                    </div>\n                </>\n            )}\n\n            <MagicVar\n                open={magicVar === \"file\"}\n                isFile\n                onClose={() => setMagicVar(\"\")}\n            />\n            <MagicVar\n                open={magicVar === \"path\"}\n                onClose={() => setMagicVar(\"\")}\n            />\n        </div>\n    );\n}\n","import React, {useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {useParams} from \"react-router\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n}));\n\n\nexport default function AddPolicyParent( ) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n\n    let { type } = useParams();\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {type===\"local\"&&<LocalGuide/>}\n                {type===\"remote\"&&<RemoteGuide/>}\n                {type===\"qiniu\"&&<QiniuGuide/>}\n                {type===\"oss\"&&<OSSGuide/>}\n                {type===\"upyun\"&&<UpyunGuide/>}\n                {type===\"cos\"&&<COSGuide/>}\n                {type===\"onedrive\"&&<OneDriveGuide/>}\n            </Paper>\n        </div>\n    );\n}\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Step from \"@material-ui/core/Step\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle, toggleSnackbar } from \"../../../../actions\";\nimport Link from \"@material-ui/core/Link\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../../middleware/Api\";\nimport MagicVar from \"../../Dialogs/MagicVar\";\nimport DomainInput from \"../../Common/DomainInput\";\nimport SizeInput from \"../../Common/SizeInput\";\nimport { useHistory } from \"react-router\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst useStyles = makeStyles(theme => ({\n    stepContent: {\n        padding: \"16px 32px 16px 32px\"\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    },\n    subStepContainer: {\n        display: \"flex\",\n        marginBottom: 20,\n        padding: 10,\n        transition: theme.transitions.create(\"background-color\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        \"&:focus-within\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    stepNumber: {\n        width: 20,\n        height: 20,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\n        color: theme.palette.secondary.contrastText,\n        textAlign: \"center\",\n        borderRadius: \" 50%\"\n    },\n    stepNumberContainer: {\n        marginRight: 10\n    },\n    stepFooter: {\n        marginTop: 32\n    },\n    button: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nexport default function EditPro(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [loading, setLoading] = useState(false);\n    const [policy, setPolicy] = useState(props.policy);\n\n    const handleChange = name => event => {\n        setPolicy({\n            ...policy,\n            [name]: event.target.value\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setPolicy({\n            ...policy,\n            OptionsSerialized: {\n                ...policy.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submitPolicy = e => {\n        e.preventDefault();\n        setLoading(true);\n\n        let policyCopy = { ...policy };\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\n\n        // 类型转换\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\n        policyCopy.IsOriginLinkEnable =\n            policyCopy.IsOriginLinkEnable === \"true\";\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\n            \",\"\n        );\n        if (\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\n        ) {\n            policyCopy.OptionsSerialized.file_type = [];\n        }\n\n        API.post(\"/admin/policy\", {\n            policy: policyCopy\n        })\n            .then(response => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            <Typography variant={\"h6\"}>编辑存储策略</Typography>\n            <TableContainer>\n                <form onSubmit={submitPolicy}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>设置项</TableCell>\n                                <TableCell>值</TableCell>\n                                <TableCell>描述</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    ID\n                                </TableCell>\n                                <TableCell>{policy.ID}</TableCell>\n                                <TableCell>存储策略编号</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    类型\n                                </TableCell>\n                                <TableCell>{policy.Type}</TableCell>\n                                <TableCell>存储策略类型</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    名称\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            required\n                                            value={policy.Name}\n                                            onChange={handleChange(\"Name\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储策名称</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Server\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.Server}\n                                            onChange={handleChange(\"Server\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储端 Endpoint</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    BucketName\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BucketName}\n                                            onChange={handleChange(\"BucketName\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>存储桶标识</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    私有空间\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsPrivate}\n                                            onChange={handleChange(\"IsPrivate\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否为私有空间</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    文件资源根URL\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            value={policy.BaseURL}\n                                            onChange={handleChange(\"BaseURL\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>预览/获取文件外链时生成URL的前缀</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    AccessKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.AccessKey}\n                                            onChange={handleChange(\"AccessKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>AccessKey / 刷新Token</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    SecretKey\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            rowsMax={10}\n                                            value={policy.SecretKey}\n                                            onChange={handleChange(\"SecretKey\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>SecretKey</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    最大单文件尺寸 (Bytes)\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            type={\"number\"}\n                                            inputProps={{\n                                                min:0,\n                                                step:1,\n                                            }}\n                                            value={policy.MaxSize}\n                                            onChange={handleChange(\"MaxSize\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>最大可上传的文件尺寸，填写为0表示不限制</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    自动重命名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.AutoRename}\n                                            onChange={handleChange(\"AutoRename\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否根据规则对上传物理文件重命名</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储路径\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.DirNameRule}\n                                            onChange={handleChange(\"DirNameRule\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储路径</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    存储文件名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.FileNameRule}\n                                            onChange={handleChange(\"FileNameRule\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>文件物理存储文件名</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许获取外链\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <RadioGroup\n                                            required\n                                            value={policy.IsOriginLinkEnable}\n                                            onChange={handleChange(\"IsOriginLinkEnable\")}\n                                            row\n                                        >\n                                            <FormControlLabel\n                                                value={\"true\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"是\"\n                                            />\n                                            <FormControlLabel\n                                                value={\"false\"}\n                                                control={\n                                                    <Radio color={\"primary\"} />\n                                                }\n                                                label=\"否\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>是否允许获取外链。注意，某些存储策略类型不支持，即使在此开启，获取的外链也无法使用。</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    又拍云防盗链 Token\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.OptionsSerialized.token}\n                                            onChange={handleOptionChange(\"token\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对又拍云存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许文件扩展名\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.OptionsSerialized.file_type}\n                                            onChange={handleOptionChange(\"file_type\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>留空表示不限制</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    允许的 MimeType\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.OptionsSerialized.mimetype}\n                                            onChange={handleOptionChange(\"mimetype\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>仅对七牛存储策略有效</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    OneDrive 重定向地址\n                                </TableCell>\n                                <TableCell>\n                                    <FormControl>\n                                        <Input\n                                            multiline\n                                            value={policy.OptionsSerialized.od_redirect}\n                                            onChange={handleOptionChange(\"od_redirect\")}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                                <TableCell>一般添加后无需修改</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <Button\n                        type={\"submit\"}\n                        color={\"primary\"}\n                        variant={\"contained\"}\n                        style={{margin:8,}}\n                    >\n                        保存更改\n                    </Button>\n                </form>\n\n            </TableContainer>\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {useParams} from \"react-router\";\nimport LocalGuide from \"./Guid/LocalGuide\";\nimport RemoteGuide from \"./Guid/RemoteGuide\";\nimport QiniuGuide from \"./Guid/QiniuGuide\";\nimport OSSGuide from \"./Guid/OSSGuide\";\nimport UpyunGuide from \"./Guid/UpyunGuide\";\nimport COSGuide from \"./Guid/COSGuide\";\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport EditPro from \"./Guid/EditPro\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n}));\n\n\nexport default function EditPolicyPreload( ) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [type,setType] = useState(\"\");\n    const [policy,setPolicy] = useState({});\n\n    let { mode,id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    useEffect(()=>{\n        setType(\"\");\n        API.get(\"/admin/policy/\" + id)\n            .then(response => {\n                response.data.IsOriginLinkEnable =  response.data.IsOriginLinkEnable ? \"true\" : \"false\";\n                response.data.AutoRename =  response.data.AutoRename ? \"true\" : \"false\";\n                response.data.MaxSize =  response.data.MaxSize.toString();\n                response.data.IsPrivate =  response.data.IsPrivate ? \"true\" : \"false\";\n                response.data.OptionsSerialized.file_type =\n                    response.data.OptionsSerialized.file_type ?\n                    response.data.OptionsSerialized.file_type.join(\",\"):\n                        \"\";\n                setPolicy(response.data);\n                setType(response.data.Type);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[id]);\n\n    return (\n        <div>\n            <Paper square className={classes.content}>\n                {mode === \"guide\" &&\n                    <>\n                        {type===\"local\"&&<LocalGuide policy={policy}/>}\n                        {type===\"remote\"&&<RemoteGuide policy={policy}/>}\n                        {type===\"qiniu\"&&<QiniuGuide policy={policy}/>}\n                        {type===\"oss\"&&<OSSGuide policy={policy}/>}\n                        {type===\"upyun\"&&<UpyunGuide policy={policy}/>}\n                        {type===\"cos\"&&<COSGuide policy={policy}/>}\n                        {type===\"onedrive\"&&<OneDriveGuide policy={policy}/>}\n                    </>\n                }\n\n                {mode === \"pro\" && type !== \"\" &&\n                    <EditPro policy={policy}/>\n                }\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../untils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { policyTypeMap } from \"../../../config\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {useHistory, useLocation} from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Delete, Edit} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {}\n}));\n\nconst columns = [\n    { id: \"#\", label: \"#\", minWidth: 50 },\n    { id: \"name\", label: \"名称\", minWidth: 170 },\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\n    {\n        id: \"count\",\n        label: \"下属用户数\",\n        minWidth: 50,\n        align: \"right\"\n    },\n    {\n        id: \"size\",\n        label: \"最大容量\",\n        minWidth: 100,\n        align: \"right\"\n    },\n    {\n        id: \"action\",\n        label: \"操作\",\n        minWidth: 170,\n        align: \"right\"\n    }\n];\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport default function Group() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [tab, setTab] = useState(0);\n    const [groups, setGroups] = useState([]);\n    const [statics, setStatics] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [addDialog, setAddDialog] = useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editID, setEditID] = React.useState(0);\n    const [policies, setPolicies] = React.useState({});\n\n    let location = useLocation();\n    let history = useHistory();\n    let query = useQuery();\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    useEffect(()=>{\n        if(query.get(\"code\") === \"0\"){\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\n        }else if (query.get(\"msg\") && query.get(\"msg\")!==\"\"){\n            ToggleSnackbar(\"top\", \"right\", query.get(\"msg\") + \", \"+ query.get(\"err\"), \"warning\");\n        }\n\n    },[location])\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize]);\n\n    const loadList = () => {\n        API.post(\"/admin/group/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: \"id desc\",\n        })\n            .then(response => {\n                setGroups(response.data.items);\n                setStatics(response.data.statics);\n                setTotal(response.data.total);\n                setPolicies(response.data.policies);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deletePolicy = (id) =>{\n        API.delete(\"/admin/group/\" + id,)\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n            <div className={classes.header}>\n                <Button\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/group/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户组\n                </Button>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{height:52}}>\n                                {columns.map(column => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {groups.map(row => (\n                                <TableRow hover key={row.ID}>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Name}</TableCell>\n                                    <TableCell>\n                                        {row.PolicyList !== null && row.PolicyList.map((pid,key)=>{\n                                            let res = \"\";\n                                            if (policies[pid]){\n                                                res += policies[pid].Name;\n                                            }\n                                            if (key !== row.PolicyList.length-1){\n                                                res += \" / \";\n                                            }\n                                            return res\n                                        })}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            statics[row.ID].toLocaleString()}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {statics[row.ID] !== undefined &&\n                                            sizeToString(row.MaxStorage)}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton onClick={()=>deletePolicy(row.ID)} size={\"small\"}>\n                                                <Delete/>\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton onClick={()=>history.push(\"/admin/group/edit/\" + row.ID)} size={\"small\"}>\n                                                <Edit/>\n                                            </IconButton>\n                                        </Tooltip>\n\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Chip from \"@material-ui/core/Chip\";\nimport SizeInput from \"../Common/SizeInput\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {useHistory} from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\n\nfunction getStyles(name, personName, theme) {\n    return {\n        fontWeight:\n            personName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium\n    };\n}\n\nexport default function GroupForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [group, setGroup] = useState(\n        props.group\n            ? props.group\n            : {\n                  ID: 0,\n                  Name: \"\",\n                  MaxStorage: \"1073741824\", // 转换类型\n                  ShareEnabled: \"true\", // 转换类型\n                  WebDAVEnabled: \"true\", // 转换类型\n                  SpeedLimit: \"0\", // 转换类型\n                  PolicyList: [\"1\"], // 转换类型,至少选择一个\n                  OptionsSerialized: {\n                      // 批量转换类型\n                      share_download: \"true\",\n                      aria2_options: \"{}\", // json decode\n                      compress_size: \"0\",\n                      decompress_size: \"0\"\n                  }\n              }\n    );\n    const [policies, setPolicies] = useState({});\n\n    const theme = useTheme();\n    let history = useHistory();\n\n    useEffect(() => {\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {}\n        })\n            .then(response => {\n                let res = {};\n                response.data.items.forEach(v => {\n                    res[v.ID] = v.Name;\n                });\n                setPolicies(res);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = name => event => {\n        setGroup({\n            ...group,\n            [name]: event.target.value\n        });\n    };\n\n    const handleCheckChange = name => event => {\n        let value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            [name]: value\n        });\n    };\n\n    const handleOptionCheckChange = name => event => {\n        let value = event.target.checked ? \"true\" : \"false\";\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: value\n            }\n        });\n    };\n\n    const handleOptionChange = name => event => {\n        setGroup({\n            ...group,\n            OptionsSerialized: {\n                ...group.OptionsSerialized,\n                [name]: event.target.value\n            }\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submit = e => {\n        e.preventDefault();\n        let groupCopy = {\n            ...group,\n            OptionsSerialized: { ...group.OptionsSerialized }\n        };\n\n        // 布尔值转换\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach(v => {\n            groupCopy[v] = groupCopy[v] === \"true\";\n        });\n        [\n            \"archive_download\",\n            \"archive_task\",\n            \"one_time_download\",\n            \"share_download\",\n            \"share_free\",\n            \"aria2\"\n        ].forEach(v => {\n            if (groupCopy.OptionsSerialized[v] !== undefined){\n                groupCopy.OptionsSerialized[v] = groupCopy.OptionsSerialized[v] === \"true\";\n            }\n        });\n\n        // 整型转换\n        [\"MaxStorage\", \"SpeedLimit\"].forEach(v => {\n            groupCopy[v] = parseInt(groupCopy[v]);\n        });\n        [\n            \"compress_size\",\n            \"decompress_size\",\n        ].forEach(v => {\n            if (groupCopy.OptionsSerialized[v] !== undefined){\n                groupCopy.OptionsSerialized[v] = parseInt(groupCopy.OptionsSerialized[v]);\n            }\n        });\n        groupCopy.PolicyList = groupCopy.PolicyList.map(v=>{\n            return parseInt(v)\n        });\n\n        if (groupCopy.PolicyList.length < 1 && groupCopy.ID !== 3){\n            ToggleSnackbar(\"top\", \"right\", \"至少要为用户组选择一个存储策略\", \"warning\");\n            return;\n        }\n\n        // JSON转换\n        try {\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(groupCopy.OptionsSerialized.aria2_options);\n        }catch (e) {\n            ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/admin/group\", {\n            group: groupCopy\n        })\n            .then(response => {\n                history.push(\"/admin/group\");\n                ToggleSnackbar(\"top\", \"right\", \"用户组已\"+ (props.group ? \"保存\" : \"添加\"), \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {group.ID === 0 && \"新建用户组\"}\n                        {group.ID !== 0 && \"编辑 \" + group.Name}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n\n                        {group.ID !== 3 && <>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        用户组名\n                                    </InputLabel>\n                                    <Input\n                                        value={group.Name}\n                                        onChange={handleChange(\"Name\")}\n                                        required\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        用户组的名称\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        可用存储策略\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"demo-mutiple-chip-label\"\n                                        id=\"demo-mutiple-chip\"\n                                        multiple\n                                        value={group.PolicyList}\n                                        onChange={handleChange(\"PolicyList\")}\n                                        input={<Input id=\"select-multiple-chip\" />}\n                                        renderValue={selected => (\n                                            <div className={classes.chips}>\n                                                {selected.map(value => (\n                                                    <Chip\n                                                        style={{ margin: 2 }}\n                                                        key={value}\n                                                        size={\"small\"}\n                                                        label={policies[value]}\n                                                        className={classes.chip}\n                                                    />\n                                                ))}\n                                            </div>\n                                        )}\n                                    >\n                                        {Object.keys(policies).map(pid => (\n                                            <MenuItem\n                                                key={pid}\n                                                value={pid}\n                                                style={getStyles(\n                                                    pid,\n                                                    group.PolicyList,\n                                                    theme\n                                                )}\n                                            >\n                                                {policies[pid]}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <FormHelperText id=\"component-helper-text\">\n                                        指定用户组可用的存储策略，可多选，用户可在选定范围内自由切换存储策略。\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={group.MaxStorage}\n                                        onChange={handleChange(\"MaxStorage\")}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"初始容量\"}\n                                        required\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户组下的用户初始可用最大容量\n                                </FormHelperText>\n                            </div>\n                        </>}\n\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <SizeInput\n                                    value={group.SpeedLimit}\n                                    onChange={handleChange(\"SpeedLimit\")}\n                                    min={0}\n                                    max={9223372036854775807}\n                                    label={\"下载限速\"}\n                                    suffix={\"/s\"}\n                                    required\n                                />\n                            </FormControl>\n                            <FormHelperText id=\"component-helper-text\">\n                                填写为 0 表示不限制。开启限制后，\n                                此用户组下的用户下载所有支持限速的存储策略下的文件时，下载最大速度会被限制。\n                            </FormHelperText>\n                        </div>\n\n                        {group.ID !== 3 && <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.ShareEnabled === \"true\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"ShareEnabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许创建分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法创建分享链接\n                                </FormHelperText>\n                            </FormControl>\n                        </div>}\n\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"允许下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法下载别人创建的文件分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .share_free === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"share_free\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"免积分下载分享\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    开启后，用户可以免费下载需付积分的分享\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.WebDAVEnabled === \"true\"\n                                            }\n                                            onChange={handleCheckChange(\n                                                \"WebDAVEnabled\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"WebDAV\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    关闭后，用户无法通过 WebDAV 协议连接至网盘\n                                </FormHelperText>\n                            </FormControl>\n                        </div>}\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .one_time_download ===\n                                                \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"one_time_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"禁止多次下载请求\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    只针对本机存储策略有效。开启后，用户无法使用多线程下载工具。\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .aria2 === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"aria2\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"离线下载\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户创建离线下载任务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>}\n\n\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <InputLabel htmlFor=\"component-helper\">\n                                        Aria2 任务参数\n                                    </InputLabel>\n                                    <Input\n                                        multiline\n                                        value={\n                                            group.OptionsSerialized\n                                                .aria2_options\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"aria2_options\"\n                                        )}\n                                    />\n                                    <FormHelperText id=\"component-helper-text\">\n                                        此用户组创建离线下载任务时额外携带的参数，以\n                                        JSON\n                                        编码后的格式书写，您可也可以将这些设置写在\n                                        Aria2 配置文件里，可用参数请查阅官方文档\n                                    </FormHelperText>\n                                </FormControl>\n                            </div>\n                        </Collapse>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_download === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_download\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"打包下载\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否允许用户多选文件打包下载\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        {group.ID !== 3 && <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <FormControlLabel\n                                    control={\n                                        <Switch\n                                            checked={\n                                                group.OptionsSerialized\n                                                    .archive_task === \"true\"\n                                            }\n                                            onChange={handleOptionCheckChange(\n                                                \"archive_task\"\n                                            )}\n                                        />\n                                    }\n                                    label=\"压缩/解压缩 任务\"\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    是否用户创建 压缩/解压缩 任务\n                                </FormHelperText>\n                            </FormControl>\n                        </div>}\n\n                        <Collapse\n                            in={group.OptionsSerialized.archive_task === \"true\"}\n                        >\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .compress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"compress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待压缩文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n\n                            <div className={classes.form}>\n                                <FormControl fullWidth>\n                                    <SizeInput\n                                        value={\n                                            group.OptionsSerialized\n                                                .decompress_size\n                                        }\n                                        onChange={handleOptionChange(\n                                            \"decompress_size\"\n                                        )}\n                                        min={0}\n                                        max={9223372036854775807}\n                                        label={\"待解压文件最大大小\"}\n                                    />\n                                </FormControl>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户可创建的解压缩任务的文件最大总大小，填写为\n                                    0 表示不限制\n                                </FormHelperText>\n                            </div>\n                        </Collapse>\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useParams} from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport GroupForm from \"./GroupForm\";\n\nexport default function EditGroupPreload( ) {\n    const [group,setGroup] = useState({});\n\n    let {id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    useEffect(()=>{\n        setGroup({});\n        API.get(\"/admin/group/\" + id)\n            .then(response => {\n                // 布尔值转换\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach(v => {\n                    response.data[v] = response.data[v]?\"true\":\"false\";\n                });\n                [\n                    \"archive_download\",\n                    \"archive_task\",\n                    \"one_time_download\",\n                    \"share_download\",\n                    \"share_free\",\n                    \"aria2\"\n                ].forEach(v => {\n                    if (response.data.OptionsSerialized[v] !== undefined){\n                        response.data.OptionsSerialized[v] = response.data.OptionsSerialized[v]?\"true\":\"false\";\n                    }\n                });\n\n                // 整型转换\n                [\"MaxStorage\", \"SpeedLimit\"].forEach(v => {\n                    response.data[v] = response.data[v].toString();\n                });\n                [\n                    \"compress_size\",\n                    \"decompress_size\",\n                ].forEach(v => {\n                    if (response.data.OptionsSerialized[v] !== undefined){\n                        response.data.OptionsSerialized[v] = response.data.OptionsSerialized[v].toString();\n                    }\n                });\n                response.data.PolicyList = response.data.PolicyList.map(v=>{\n                    return v.toString();\n                });\n\n                // JSON转换\n                if(response.data.OptionsSerialized.aria2_options === undefined){\n                    response.data.OptionsSerialized.aria2_options = \"{}\"\n                }else{\n                    try {\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(response.data.OptionsSerialized.aria2_options);\n                    }catch (e) {\n                        ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\n                        return;\n                    }\n\n                }\n                setGroup(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[id]);\n\n    return (\n        <div>\n            {group.ID !== undefined &&\n                <GroupForm group={group}/>\n            }\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function UserFilter({setFilter,setSearch,open, onClose }) {\n    const [input,setInput] = useState({\n        group_id:\"all\",\n        status:\"all\",\n    });\n    const [groups,setGroups] = useState([]);\n    const [keywords,setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({...input,[name]:event.target.value})\n    }\n\n    useEffect(()=>{\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[])\n\n    const submit = e => {\n        let res = {};\n        Object.keys(input).forEach(v=>{\n            if(input[v] !== \"all\"){\n                res[v] = input[v];\n            }\n        })\n        setFilter(res);\n        if (keywords !== \"\"){\n            setSearch({\n                nick:keywords,\n                email:keywords,\n            });\n        }else{\n            setSearch({});\n        }\n        onClose();\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                过滤条件\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">用户组</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.group_id}\n                        onChange={handleChange(\"group_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {groups.map(v => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem\n                                    key={v.ID}\n                                    value={v.ID.toString()}\n                                >\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <InputLabel id=\"demo-simple-select-label\">用户状态</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.status}\n                        onChange={handleChange(\"status\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"0\"}>正常</MenuItem>\n                        <MenuItem value={\"1\"}>未激活</MenuItem>\n                        <MenuItem value={\"2\"}>被封禁</MenuItem>\n                        <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={keywords} onChange={e=>setKeywords(e.target.value)} id=\"standard-basic\" label=\"搜索 昵称 / 用户名\" />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../untils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { policyTypeMap } from \"../../../config\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useHistory, useLocation } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Block, Delete, Edit, FilterList} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport UserFilter from \"../Dialogs/UserFilter\";\nimport Badge from \"@material-ui/core/Badge\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Group() {\n    const classes = useStyles();\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading,setLoading] = useState(false);\n\n    let location = useLocation();\n    let history = useHistory();\n    let query = useQuery();\n    let theme = useTheme();\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const loadList = () => {\n        API.post(\"/admin/user/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/user/delete\",{id:[id]})\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    };\n\n    const deleteBatch = e =>{\n        setLoading(true);\n        API.post(\"/admin/user/delete\",{id:selected})\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    }\n\n    const block = id =>{\n        setLoading(true);\n        API.patch(\"/admin/user/ban/\"+id)\n            .then(response => {\n                setUsers(users.map(v=>{\n                    if (v.ID === id){\n                        let newUser = {...v,Status:response.data}\n                        return newUser;\n                    }\n                    return v\n                }))\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    }\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = users.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <UserFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <Button\n                    style={{ alignSelf: \"center\" }}\n                    color={\"primary\"}\n                    onClick={() => history.push(\"/admin/user/add\")}\n                    variant={\"contained\"}\n                >\n                    新建用户\n                </Button>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n\n                            <IconButton\n                                style={{ marginRight: 8 }}\n                                onClick={() => setFilterDialog(true)}\n                            ><Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                            </IconButton>\n\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton onClick={deleteBatch} disabled={loading} aria-label=\"delete\">\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < users.length\n                                        }\n                                        checked={\n                                            users.length > 0 &&\n                                            selected.length === users.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"nick\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"nick\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        昵称\n                                        {orderBy[0] === \"nick\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 170 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"email\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"email\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        Email\n                                        {orderBy[0] === \"email\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    用户组\n                                </TableCell>\n                                <TableCell style={{ minWidth: 50 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell\n                                    align={\"right\"}\n                                    style={{ minWidth: 80 }}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"storage\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"storage\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        已用空间\n                                        {orderBy[0] === \"storage\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                >\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>{row.Nick}</TableCell>\n                                    <TableCell>{row.Email}</TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/group/edit/\" +\n                                                row.Group.ID\n                                            }\n                                        >\n                                            {row.Group.Name}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && (\n                                            <Typography\n                                                style={{\n                                                    color:\n                                                        theme.palette.success\n                                                            .main\n                                                }}\n                                                variant={\"body2\"}\n                                            >\n                                                正常\n                                            </Typography>\n                                        )}\n                                        {row.Status === 1 && (\n                                            <Typography\n                                                color={\"textSecondary\"}\n                                                variant={\"body2\"}\n                                            >\n                                                未激活\n                                            </Typography>\n                                        )}\n                                        {row.Status === 2 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                被封禁\n                                            </Typography>\n                                        )}\n                                        {row.Status === 3 && (\n                                            <Typography\n                                                color={\"error\"}\n                                                variant={\"body2\"}\n                                            >\n                                                超额封禁\n                                            </Typography>\n                                        )}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Storage)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"编辑\"}>\n                                            <IconButton\n                                                onClick={() =>\n                                                    history.push(\n                                                        \"/admin/user/edit/\" +\n                                                            row.ID\n                                                    )\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Edit />\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title={\"封禁/解封\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={()=>block(row.ID)}\n                                                size={\"small\"}\n                                            >\n                                                <Block />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Chip from \"@material-ui/core/Chip\";\nimport SizeInput from \"../Common/SizeInput\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    form: {\n        maxWidth: 400,\n        marginTop: 20,\n        marginBottom: 20\n    },\n    formContainer: {\n        [theme.breakpoints.up(\"md\")]: {\n            padding: \"0px 24px 0 24px\"\n        }\n    }\n}));\nexport default function UserForm(props) {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState(\n        props.user\n            ? props.user\n            : {\n                  ID: 0,\n                  Email: \"\",\n                  Nick: \"\",\n                  Password: \"\", // 为空时只读\n                  Status: \"0\", // 转换类型\n                  GroupID: \"2\", // 转换类型\n                  Score: \"0\" // 转换类型\n              }\n    );\n    const [groups, setGroups] = useState([]);\n\n    const theme = useTheme();\n    let history = useHistory();\n\n    useEffect(() => {\n        API.get(\"/admin/groups\")\n            .then(response => {\n                setGroups(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    }, []);\n\n    const handleChange = name => event => {\n        setUser({\n            ...user,\n            [name]: event.target.value\n        });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const submit = e => {\n        e.preventDefault();\n        let userCopy = {...user};\n\n        // 整型转换\n        [\"Status\", \"GroupID\",\"Score\"].forEach(v => {\n            userCopy[v] = parseInt(userCopy[v]);\n        });\n\n        setLoading(true);\n        API.post(\"/admin/user\", {\n            user: userCopy,\n            password:userCopy.Password,\n        })\n            .then(response => {\n                history.push(\"/admin/user\");\n                ToggleSnackbar(\"top\", \"right\", \"用户已\"+ (props.user ? \"保存\" : \"添加\"), \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={submit}>\n                <div className={classes.root}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        {user.ID === 0 && \"创建用户\"}\n                        {user.ID !== 0 && \"编辑 \" + user.Nick}\n                    </Typography>\n\n                    <div className={classes.formContainer}>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    邮箱\n                                </InputLabel>\n                                <Input\n                                    value={user.Email}\n                                    type={\"email\"}\n                                    onChange={handleChange(\"Email\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    昵称\n                                </InputLabel>\n                                <Input\n                                    value={user.Nick}\n                                    onChange={handleChange(\"Nick\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    密码\n                                </InputLabel>\n                                <Input\n                                    type={\"password\"}\n                                    value={user.Password}\n                                    onChange={handleChange(\"Password\")}\n                                    required={user.ID === 0}\n                                />\n                                <FormHelperText id=\"component-helper-text\">\n                                    {user.ID !== 0 && \"留空表示不修改\"}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    用户组\n                                </InputLabel>\n                                <Select\n                                    value={user.GroupID}\n                                    onChange={handleChange(\n                                        \"GroupID\"\n                                    )}\n                                    required\n                                >\n                                    {groups.map(v => {\n                                        if (v.ID === 3) {\n                                            return null;\n                                        }\n                                        return (\n                                            <MenuItem\n                                                key={v.ID}\n                                                value={v.ID.toString()}\n                                            >\n                                                {v.Name}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                                <FormHelperText id=\"component-helper-text\">\n                                    用户所属用户组\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    状态\n                                </InputLabel>\n                                <Select\n                                    value={user.Status}\n                                    onChange={handleChange(\n                                        \"Status\"\n                                    )}\n                                    required\n                                >\n                                    <MenuItem value={\"0\"}>正常</MenuItem>\n                                    <MenuItem value={\"1\"}>未激活</MenuItem>\n                                    <MenuItem value={\"2\"}>被封禁</MenuItem>\n                                    <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.form}>\n                            <FormControl fullWidth>\n                                <InputLabel htmlFor=\"component-helper\">\n                                    积分\n                                </InputLabel>\n                                <Input\n                                    type={\"number\"}\n                                    inputProps={{\n                                        min:0,\n                                        step:1,\n                                    }}\n                                    value={user.Score}\n                                    onChange={handleChange(\"Score\")}\n                                    required\n                                />\n                            </FormControl>\n                        </div>\n\n                    </div>\n                </div>\n                <div className={classes.root}>\n                    <Button\n                        disabled={loading}\n                        type={\"submit\"}\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                    >\n                        保存\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useParams} from \"react-router\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport UserForm from \"./UserForm\";\n\nexport default function EditUserPreload( ) {\n    const [user,setUser] = useState({});\n\n    let {id } = useParams();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n\n    useEffect(()=>{\n        setUser({});\n        API.get(\"/admin/user/\" + id)\n            .then(response => {\n                // 整型转换\n                [\"Status\", \"GroupID\",\"Score\"].forEach(v => {\n                    response.data[v] = response.data[v].toString();\n                });\n                setUser(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[id]);\n\n    return (\n        <div>\n            {user.ID !== undefined &&\n                <UserForm user={user}/>\n            }\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function FileFilter({setFilter,setSearch,open, onClose }) {\n    const [input,setInput] = useState({\n        policy_id:\"all\",\n        user_id:\"\",\n    });\n    const [policies,setPolicies] = useState([]);\n    const [keywords,setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({...input,[name]:event.target.value})\n    }\n\n    useEffect(()=>{\n        API.post(\"/admin/policy/list\", {\n            page: 1,\n            page_size: 10000,\n            order_by: \"id asc\",\n            conditions: {}\n        })\n            .then(response => {\n                setPolicies(response.data.items);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    },[])\n\n    const submit = e => {\n        let res = {};\n        Object.keys(input).forEach(v=>{\n            if(input[v] !== \"all\" && input[v] !== \"\"){\n                res[v] = input[v];\n            }\n        })\n        setFilter(res);\n        if (keywords !== \"\"){\n            setSearch({\n                name:keywords,\n            });\n        }else{\n            setSearch({});\n        }\n        onClose();\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                过滤条件\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">存储策略</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.policy_id}\n                        onChange={handleChange(\"policy_id\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        {policies.map(v => {\n                            if (v.ID === 3) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem\n                                    key={v.ID}\n                                    value={v.ID.toString()}\n                                >\n                                    {v.Name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={input.user_id} onChange={handleChange(\"user_id\")} id=\"standard-basic\" label=\"上传者ID\" />\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={keywords} onChange={e=>setKeywords(e.target.value)} id=\"standard-basic\" label=\"搜索 文件名\" />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { sizeToString } from \"../../../untils\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { policyTypeMap } from \"../../../config\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport AddPolicy from \"../Dialogs/AddPolicy\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useHistory, useLocation } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Block, Delete, Edit, FilterList} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport UserFilter from \"../Dialogs/UserFilter\";\nimport Badge from \"@material-ui/core/Badge\";\nimport FileFilter from \"../Dialogs/FileFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function File() {\n    const classes = useStyles();\n    const [files, setFiles] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading,setLoading] = useState(false);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const loadList = () => {\n        API.post(\"/admin/file/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setFiles(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n                setUsers(response.data.users);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/file/delete\",{id:[id]})\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"删除任务将在后台执行\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    };\n\n    const deleteBatch = e =>{\n        setLoading(true);\n        API.post(\"/admin/file/delete\",{id:selected})\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"删除任务将在后台执行\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            }).then(()=>{\n            setLoading(false);\n        });\n    }\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = files.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <FileFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n\n                            <IconButton\n                                style={{ marginRight: 8 }}\n                                onClick={() => setFilterDialog(true)}\n                            ><Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                            </IconButton>\n\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton onClick={deleteBatch} disabled={loading} aria-label=\"delete\">\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < files.length\n                                        }\n                                        checked={\n                                            files.length > 0 &&\n                                            selected.length === files.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 59 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 250 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >文件名\n                                        {orderBy[0] === \"name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell align={\"right\"} style={{ minWidth: 70 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    上传者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    上传于\n                                </TableCell>\n                                <TableCell\n                                    style={{ minWidth: 100 }}\n                                >\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {files.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        <Link target={\"_blank\"} color=\"inherit\" href={\"/api/v3/admin/file/preview/\" + row.ID}>{row.Name}</Link>\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.Size)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]?users[row.UserID].Nick:\"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(row.CreatedAt).toLocaleDateString() +\" \"+\n                                        new Date(row.CreatedAt).toLocaleTimeString()\n                                        }\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25,50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport API from \"../../../middleware/Api\";\nimport {useDispatch} from \"react-redux\";\nimport {toggleSnackbar} from \"../../../actions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default function ShareFilter({setFilter,setSearch,open, onClose }) {\n    const [input,setInput] = useState({\n        is_dir:\"all\",\n        user_id:\"\",\n    });\n    const [keywords,setKeywords] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = name => event => {\n        setInput({...input,[name]:event.target.value})\n    }\n\n    const submit = e => {\n        let res = {};\n        Object.keys(input).forEach(v=>{\n            if(input[v] !== \"all\" && input[v] !== \"\"){\n                res[v] = input[v];\n            }\n        })\n        setFilter(res);\n        if (keywords !== \"\"){\n            setSearch({\n                source_name:keywords,\n            });\n        }else{\n            setSearch({});\n        }\n        onClose();\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth\n            maxWidth={\"xs\"}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                过滤条件\n            </DialogTitle>\n            <DialogContent>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">源文件类型</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={input.is_dir}\n                        onChange={handleChange(\"is_dir\")}\n                    >\n                        <MenuItem value={\"all\"}>全部</MenuItem>\n                        <MenuItem value={\"1\"}>目录</MenuItem>\n                        <MenuItem value={\"0\"}>文件</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={input.user_id} onChange={handleChange(\"user_id\")} id=\"standard-basic\" label=\"上传者ID\" />\n                </FormControl>\n                <FormControl fullWidth style={{marginTop:16}}>\n                    <TextField value={keywords} onChange={e=>setKeywords(e.target.value)} id=\"standard-basic\" label=\"搜索 文件名\" />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"default\">\n                    取消\n                </Button>\n                <Button onClick={submit} color=\"primary\">\n                    应用\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport {  useLocation } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {  Delete,  FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Share() {\n    const classes = useStyles();\n    const [shares, setShares] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [ids, setIds] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const loadList = () => {\n        API.post(\"/admin/share/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setIds(response.data.ids);\n                setShares(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: [id] })\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = e => {\n        setLoading(true);\n        API.post(\"/admin/share/delete\", { id: selected })\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = shares.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Tooltip title=\"过滤\">\n                        <IconButton\n                            style={{ marginRight: 8 }}\n                            onClick={() => setFilterDialog(true)}\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                variant=\"dot\"\n                                invisible={\n                                    Object.keys(search).length === 0 &&\n                                    Object.keys(filter).length === 0\n                                }\n                            >\n                                <FilterList />\n                            </Badge>\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < shares.length\n                                        }\n                                        checked={\n                                            shares.length > 0 &&\n                                            selected.length === shares.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 200 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"source_name\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"source_name\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        对象名\n                                        {orderBy[0] === \"source_name\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 70 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }} align={\"right\"}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"views\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"views\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        浏览\n                                        {orderBy[0] === \"views\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }} align={\"right\"}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"downloads\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"downloads\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        下载\n                                        {orderBy[0] === \"downloads\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }} align={\"right\"}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"score\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"score\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        积分\n                                        {orderBy[0] === \"score\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    自动过期\n                                </TableCell>\n                                <TableCell style={{ minWidth: 120 }}>\n                                    分享者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    分享于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {shares.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell style={{wordBreak: \"break-all\"}}>\n                                        <Link\n                                            target={\"_blank\"}\n                                            color=\"inherit\"\n                                            href={\n                                                \"/#/s/\"+ids[row.ID]+(row.Password === \"\" ? \"\" : (\"?password=\"+row.Password))\n                                            }\n                                        >\n                                            {row.SourceName}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Password === \"\" ? \"公开\" : \"私密\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Views}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Downloads}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Score}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.RemainDownloads > -1 && (row.RemainDownloads+\" 次下载后\")}\n                                        {row.RemainDownloads === -1 && \"无\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport {  useLocation } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {  Delete,  FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Order() {\n    const classes = useStyles();\n    const [orders, setOrders] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const loadList = () => {\n        API.post(\"/admin/order/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setOrders(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/order/delete\", { id: [id] })\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"订单记录已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = e => {\n        setLoading(true);\n        API.post(\"/admin/order/delete\", { id: selected })\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"订单记录已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = orders.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < orders.length\n                                        }\n                                        checked={\n                                            orders.length > 0 &&\n                                            selected.length === orders.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    订单名\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    商品\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"order_no\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"order_no\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        订单号\n                                        {orderBy[0] === \"order_no\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }} align={\"right\"}>\n                                        单价\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }} align={\"right\"}>\n                                    数量\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    支付方式\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {orders.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell>\n                                        {row.Name}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Type === 0 && \"容量包\"}\n                                        {row.Type === 1 && \"用户组\"}\n                                        {row.Type === 2 && \"积分\"}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.OrderNo}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Method === \"score\" && row.Price}\n                                        {row.Method !== \"score\" &&\n                                            <>\n                                                ￥{(row.Price/100).toFixed(2)}\n                                            </>\n                                        }\n\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {row.Num}\n\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"未支付\"}\n                                        {row.Status === 1 && \"已支付\"}\n\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Method === \"score\" && \"积分\"}\n                                        {row.Method === \"alipay\" && \"支付宝\"}\n                                        {row.Method === \"payjs\" && \"PayJS\"}\n\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport {  useLocation } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {  Delete,  FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport {sizeToString} from \"../../../untils\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Download() {\n    const classes = useStyles();\n    const [downloads, setDownloads] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const loadList = () => {\n        API.post(\"/admin/download/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setDownloads(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: [id] })\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = e => {\n        setLoading(true);\n        API.post(\"/admin/download/delete\", { id: selected })\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = downloads.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < downloads.length\n                                        }\n                                        checked={\n                                            downloads.length > 0 &&\n                                            selected.length === downloads.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    源地址\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }} align={\"right\"}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"total_size\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"total_size\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        大小\n                                        {orderBy[0] === \"total_size\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {downloads.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell style={{wordBreak:\"break-all\"}}>\n                                        {row.Source}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.Status === 0 && \"就绪\"}\n                                        {row.Status === 1 && \"下载中\"}\n                                        {row.Status === 2 && \"暂停中\"}\n                                        {row.Status === 3 && \"出错\"}\n                                        {row.Status === 4 && \"完成\"}\n                                        {row.Status === 5 && \"取消/停止\"}\n                                        {row.Status === 6 && \"未知\"}\n                                    </TableCell>\n                                    <TableCell align={\"right\"}>\n                                        {sizeToString(row.TotalSize)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles, } from \"@material-ui/core/styles\";\nimport API from \"../../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport {  useLocation } from \"react-router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {  Delete,  FilterList } from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { lighten } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ShareFilter from \"../Dialogs/ShareFilter\";\nimport {sizeToString} from \"../../../untils\";\nimport {getTaskProgress, getTaskStatus, getTaskType} from \"../../../config\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up(\"md\")]: {\n            marginLeft: 100\n        },\n        marginBottom: 40\n    },\n    content: {\n        padding: theme.spacing(2)\n    },\n    container: {\n        overflowX: \"auto\"\n    },\n    tableContainer: {\n        marginTop: 16\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    headerRight: {},\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark\n              },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function Task() {\n    const classes = useStyles();\n    const [tasks, setTasks] = useState([]);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n    const [filter, setFilter] = useState({});\n    const [users, setUsers] = useState({});\n    const [search, setSearch] = useState({});\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\n    const [filterDialog, setFilterDialog] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        loadList();\n    }, [page, pageSize, orderBy, filter, search]);\n\n    const loadList = () => {\n        API.post(\"/admin/task/list\", {\n            page: page,\n            page_size: pageSize,\n            order_by: orderBy.join(\" \"),\n            conditions: filter,\n            searches: search\n        })\n            .then(response => {\n                setUsers(response.data.users);\n                setTasks(response.data.items);\n                setTotal(response.data.total);\n                setSelected([]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const deletePolicy = id => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: [id] })\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const deleteBatch = e => {\n        setLoading(true);\n        API.post(\"/admin/task/delete\", { id: selected })\n            .then(response => {\n                loadList();\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = tasks.map(n => n.ID);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const getError = error => {\n        if (error === \"\"){\n            return \"-\"\n        }\n        try {\n            let res = JSON.parse(error)\n            return res.msg\n        }catch (e) {\n            return \"未知\"\n        }\n\n    }\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <div>\n            <ShareFilter\n                filter={filter}\n                open={filterDialog}\n                onClose={() => setFilterDialog(false)}\n                setSearch={setSearch}\n                setFilter={setFilter}\n            />\n            <div className={classes.header}>\n                <div className={classes.headerRight}>\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => loadList()}\n                        variant={\"outlined\"}\n                    >\n                        刷新\n                    </Button>\n                </div>\n            </div>\n\n            <Paper square className={classes.tableContainer}>\n                {selected.length > 0 && (\n                    <Toolbar className={classes.highlight}>\n                        <Typography\n                            style={{ flex: \"1 1 100%\" }}\n                            color=\"inherit\"\n                            variant=\"subtitle1\"\n                        >\n                            已选择 {selected.length} 个对象\n                        </Typography>\n                        <Tooltip title=\"删除\">\n                            <IconButton\n                                onClick={deleteBatch}\n                                disabled={loading}\n                                aria-label=\"delete\"\n                            >\n                                <Delete />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                )}\n                <TableContainer className={classes.container}>\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\n                        <TableHead>\n                            <TableRow style={{ height: 52 }}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        indeterminate={\n                                            selected.length > 0 &&\n                                            selected.length < tasks.length\n                                        }\n                                        checked={\n                                            tasks.length > 0 &&\n                                            selected.length === tasks.length\n                                        }\n                                        onChange={handleSelectAllClick}\n                                        inputProps={{\n                                            \"aria-label\": \"select all desserts\"\n                                        }}\n                                    />\n                                </TableCell>\n                                <TableCell style={{ minWidth: 10 }}>\n                                    <TableSortLabel\n                                        active={orderBy[0] === \"id\"}\n                                        direction={orderBy[1]}\n                                        onClick={() =>\n                                            setOrderBy([\n                                                \"id\",\n                                                orderBy[1] === \"asc\"\n                                                    ? \"desc\"\n                                                    : \"asc\"\n                                            ])\n                                        }\n                                    >\n                                        #\n                                        {orderBy[0] === \"id\" ? (\n                                            <span\n                                                className={\n                                                    classes.visuallyHidden\n                                                }\n                                            >\n                                                {orderBy[1] === \"desc\"\n                                                    ? \"sorted descending\"\n                                                    : \"sorted ascending\"}\n                                            </span>\n                                        ) : null}\n                                    </TableSortLabel>\n                                </TableCell>\n                                <TableCell style={{ minWidth: 130 }}>\n                                    类型\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    状态\n                                </TableCell>\n                                <TableCell style={{ minWidth: 90 }}>\n                                    最后进度\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    错误信息\n                                </TableCell>\n                                <TableCell style={{ minWidth: 100 }}>\n                                    创建者\n                                </TableCell>\n                                <TableCell style={{ minWidth: 150 }}>\n                                    创建于\n                                </TableCell>\n                                <TableCell style={{ minWidth: 80 }}>\n                                    操作\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {tasks.map(row => (\n                                <TableRow\n                                    hover\n                                    key={row.ID}\n                                    role=\"checkbox\"\n                                    selected={isSelected(row.ID)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        <Checkbox\n                                            onClick={event =>\n                                                handleClick(event, row.ID)\n                                            }\n                                            checked={isSelected(row.ID)}\n                                        />\n                                    </TableCell>\n                                    <TableCell>{row.ID}</TableCell>\n                                    <TableCell style={{wordBreak:\"break-all\"}}>\n                                        {getTaskType(row.Type)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskStatus(row.Status)}\n                                    </TableCell>\n                                    <TableCell>\n                                        {getTaskProgress(row.Type,row.Progress)}\n                                    </TableCell>\n                                    <TableCell className={classes.noWrap}>\n                                        {getError(row.Error)}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Link\n                                            href={\n                                                \"/#/admin/user/edit/\" +\n                                                row.UserID\n                                            }\n                                        >\n                                            {users[row.UserID]\n                                                ? users[row.UserID].Nick\n                                                : \"未知\"}\n                                        </Link>\n                                    </TableCell>\n                                    <TableCell>\n                                        {new Date(\n                                            row.CreatedAt\n                                        ).toLocaleDateString() +\n                                            \" \" +\n                                            new Date(\n                                                row.CreatedAt\n                                            ).toLocaleTimeString()}\n                                    </TableCell>\n                                    <TableCell>\n                                        <Tooltip title={\"删除\"}>\n                                            <IconButton\n                                                disabled={loading}\n                                                onClick={() =>\n                                                    deletePolicy(row.ID)\n                                                }\n                                                size={\"small\"}\n                                            >\n                                                <Delete />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 50, 100]}\n                    component=\"div\"\n                    count={total}\n                    rowsPerPage={pageSize}\n                    page={page - 1}\n                    onChangePage={(e, p) => setPage(p + 1)}\n                    onChangeRowsPerPage={e => {\n                        setPageSize(e.target.value);\n                        setPage(1);\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, {Suspense, useEffect, useState} from \"react\";\nimport {CssBaseline, makeStyles} from \"@material-ui/core\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport Dashboard from \"./component/Admin/Dashboard\";\nimport {useHistory} from \"react-router\";\nimport Auth from \"./middleware/Auth\";\nimport {Route, Switch} from \"react-router-dom\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport { zhCN } from '@material-ui/core/locale';\n\nimport Index from \"./component/Admin/Index\"\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\"\nimport Access from \"./component/Admin/Setting/Access\"\nimport Mail from \"./component/Admin/Setting/Mail\"\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\"\nimport VAS from \"./component/Admin/Setting/VAS\"\nimport Theme from \"./component/Admin/Setting/Theme\"\nimport Aria2 from \"./component/Admin/Setting/Aria2\"\nimport ImageSetting from \"./component/Admin/Setting/Image\"\nimport Policy from \"./component/Admin/Policy/Policy\"\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\"\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\"\nimport Group from \"./component/Admin/Group/Group\"\nimport GroupForm from \"./component/Admin/Group/GroupForm\"\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\"\nimport User from \"./component/Admin/User/User\"\nimport UserForm from \"./component/Admin/User/UserForm\"\nimport EditUserPreload from \"./component/Admin/User/EditUser\"\nimport File from \"./component/Admin/File/File\"\nimport Share from \"./component/Admin/Share/Share\"\nimport Order from \"./component/Admin/Order/Order\"\nimport Download from \"./component/Admin/Task/Download\"\nimport Task from \"./component/Admin/Task/Task\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n    },\n    content: {\n        flexGrow: 1,\n        padding: 0,\n        minWidth: 0\n    },\n    toolbar: theme.mixins.toolbar\n}));\n\nconst theme = createMuiTheme({\n    palette: {\n        background:{\n        }\n    },\n},zhCN);\n\n\nexport default function Admin() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [show,setShow] = useState(false);\n\n    useEffect(()=>{\n        let user = Auth.GetUser();\n        if (user && user.group){\n            if (user.group.id !== 1){\n                history.push(\"/home\");\n                return\n            }\n            setShow(true);\n            return\n        }\n        history.push(\"/login\")\n        // eslint-disable-next-line\n    },[])\n\n    return (\n\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AlertBar />\n                    {show&&<Dashboard content={\n                        (path)=>(\n\n                            <Switch>\n                                <Route path={`${path}/home`} exact>\n                                        <Index/>\n                                </Route>\n\n                                <Route path={`${path}/basic`}>\n                                        <SiteInformation/>\n                                </Route>\n\n                                <Route path={`${path}/access`}>\n                                        <Access/>\n                                </Route>\n\n                                <Route path={`${path}/mail`}>\n                                        <Mail/>\n                                </Route>\n\n                                <Route path={`${path}/upload`}>\n                                        <UploadDownload/>\n                                </Route>\n\n                                <Route path={`${path}/vas`}>\n                                        <VAS/>\n                                </Route>\n\n                                <Route path={`${path}/theme`}>\n                                        <Theme/>\n                                </Route>\n\n                                <Route path={`${path}/aria2`}>\n                                        <Aria2/>\n                                </Route>\n\n                                <Route path={`${path}/image`}>\n                                        <ImageSetting/>\n                                </Route>\n\n                                <Route path={`${path}/policy`} exact>\n                                        <Policy/>\n                                </Route>\n\n                                <Route path={`${path}/policy/add/:type`} exact>\n                                        <AddPolicy/>\n                                </Route>\n\n                                <Route path={`${path}/policy/edit/:mode/:id`} exact>\n                                        <EditPolicyPreload/>\n                                </Route>\n\n                                <Route path={`${path}/group`} exact>\n                                        <Group/>\n                                </Route>\n\n                                <Route path={`${path}/group/add`} exact>\n                                        <GroupForm/>\n                                </Route>\n\n                                <Route path={`${path}/group/edit/:id`} exact>\n                                        <EditGroupPreload/>\n                                </Route>\n\n                                <Route path={`${path}/user`} exact>\n                                        <User/>\n                                </Route>\n\n                                <Route path={`${path}/user/add`} exact>\n                                        <UserForm/>\n                                </Route>\n\n                                <Route path={`${path}/user/edit/:id`} exact>\n                                        <EditUserPreload/>\n                                </Route>\n\n                                <Route path={`${path}/file`} exact>\n                                        <File/>\n                                </Route>\n\n                                <Route path={`${path}/share`} exact>\n                                        <Share/>\n                                </Route>\n\n                                <Route path={`${path}/order`} exact>\n                                        <Order/>\n                                </Route>\n\n                                <Route path={`${path}/download`} exact>\n                                        <Download/>\n                                </Route>\n\n                                <Route path={`${path}/task`} exact>\n                                        <Task/>\n                                </Route>\n\n                            </Switch>\n                        )\n                    }/>}\n\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    )\n}"],"sourceRoot":""}